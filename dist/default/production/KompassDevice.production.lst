

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 03 00:25:10 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16LF1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x620,48
    58                           	dabs	1,0x5A0,80
    59                           	dabs	1,0x550,32
    60                           	dabs	1,0x520,48
    61                           	dabs	1,0x4A0,80
    62                           	dabs	1,0x430,64
    63                           	dabs	1,0x2350,0,_console
    64                           	dabs	1,0x2290,0,_TEST
    65                           	dabs	1,0x7E,2
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0110                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018F                     	;# 
   136  0190                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020D                     	;# 
   158  0210                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0294                     	;# 
   172  0295                     	;# 
   173  0295                     	;# 
   174  0296                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  029B                     	;# 
   180  029C                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  029F                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0314                     	;# 
   190  0315                     	;# 
   191  0315                     	;# 
   192  0316                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  031C                     	;# 
   198  031C                     	;# 
   199  031D                     	;# 
   200  031E                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0791                     	;# 
   211  0792                     	;# 
   212  0793                     	;# 
   213  0794                     	;# 
   214  0795                     	;# 
   215  0798                     	;# 
   216  0799                     	;# 
   217  079A                     	;# 
   218  07A0                     	;# 
   219  07A1                     	;# 
   220  07A2                     	;# 
   221  07A3                     	;# 
   222  07A4                     	;# 
   223  07A5                     	;# 
   224  07A6                     	;# 
   225  07A7                     	;# 
   226  07A8                     	;# 
   227  07A9                     	;# 
   228  07AA                     	;# 
   229  07AB                     	;# 
   230  0FE4                     	;# 
   231  0FE5                     	;# 
   232  0FE6                     	;# 
   233  0FE7                     	;# 
   234  0FE8                     	;# 
   235  0FE9                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0110                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  018F                     	;# 
   311  0190                     	;# 
   312  0191                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019C                     	;# 
   328  019C                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019F                     	;# 
   332  020D                     	;# 
   333  0210                     	;# 
   334  0211                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029C                     	;# 
   357  029D                     	;# 
   358  029E                     	;# 
   359  029F                     	;# 
   360  0311                     	;# 
   361  0311                     	;# 
   362  0312                     	;# 
   363  0313                     	;# 
   364  0314                     	;# 
   365  0315                     	;# 
   366  0315                     	;# 
   367  0316                     	;# 
   368  0318                     	;# 
   369  0318                     	;# 
   370  0319                     	;# 
   371  031A                     	;# 
   372  031C                     	;# 
   373  031C                     	;# 
   374  031D                     	;# 
   375  031E                     	;# 
   376  0394                     	;# 
   377  0395                     	;# 
   378  0396                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0791                     	;# 
   386  0792                     	;# 
   387  0793                     	;# 
   388  0794                     	;# 
   389  0795                     	;# 
   390  0798                     	;# 
   391  0799                     	;# 
   392  079A                     	;# 
   393  07A0                     	;# 
   394  07A1                     	;# 
   395  07A2                     	;# 
   396  07A3                     	;# 
   397  07A4                     	;# 
   398  07A5                     	;# 
   399  07A6                     	;# 
   400  07A7                     	;# 
   401  07A8                     	;# 
   402  07A9                     	;# 
   403  07AA                     	;# 
   404  07AB                     	;# 
   405  0FE4                     	;# 
   406  0FE5                     	;# 
   407  0FE6                     	;# 
   408  0FE7                     	;# 
   409  0FE8                     	;# 
   410  0FE9                     	;# 
   411  0FEA                     	;# 
   412  0FEB                     	;# 
   413  0FED                     	;# 
   414  0FEE                     	;# 
   415  0FEF                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000F                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0013                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0110                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  018F                     	;# 
   486  0190                     	;# 
   487  0191                     	;# 
   488  0191                     	;# 
   489  0192                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0199                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019C                     	;# 
   503  019C                     	;# 
   504  019D                     	;# 
   505  019E                     	;# 
   506  019F                     	;# 
   507  020D                     	;# 
   508  0210                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0213                     	;# 
   512  0214                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0216                     	;# 
   516  0217                     	;# 
   517  0291                     	;# 
   518  0291                     	;# 
   519  0292                     	;# 
   520  0293                     	;# 
   521  0294                     	;# 
   522  0295                     	;# 
   523  0295                     	;# 
   524  0296                     	;# 
   525  0298                     	;# 
   526  0298                     	;# 
   527  0299                     	;# 
   528  029A                     	;# 
   529  029B                     	;# 
   530  029C                     	;# 
   531  029C                     	;# 
   532  029D                     	;# 
   533  029E                     	;# 
   534  029F                     	;# 
   535  0311                     	;# 
   536  0311                     	;# 
   537  0312                     	;# 
   538  0313                     	;# 
   539  0314                     	;# 
   540  0315                     	;# 
   541  0315                     	;# 
   542  0316                     	;# 
   543  0318                     	;# 
   544  0318                     	;# 
   545  0319                     	;# 
   546  031A                     	;# 
   547  031C                     	;# 
   548  031C                     	;# 
   549  031D                     	;# 
   550  031E                     	;# 
   551  0394                     	;# 
   552  0395                     	;# 
   553  0396                     	;# 
   554  0415                     	;# 
   555  0416                     	;# 
   556  0417                     	;# 
   557  041C                     	;# 
   558  041D                     	;# 
   559  041E                     	;# 
   560  0791                     	;# 
   561  0792                     	;# 
   562  0793                     	;# 
   563  0794                     	;# 
   564  0795                     	;# 
   565  0798                     	;# 
   566  0799                     	;# 
   567  079A                     	;# 
   568  07A0                     	;# 
   569  07A1                     	;# 
   570  07A2                     	;# 
   571  07A3                     	;# 
   572  07A4                     	;# 
   573  07A5                     	;# 
   574  07A6                     	;# 
   575  07A7                     	;# 
   576  07A8                     	;# 
   577  07A9                     	;# 
   578  07AA                     	;# 
   579  07AB                     	;# 
   580  0FE4                     	;# 
   581  0FE5                     	;# 
   582  0FE6                     	;# 
   583  0FE7                     	;# 
   584  0FE8                     	;# 
   585  0FE9                     	;# 
   586  0FEA                     	;# 
   587  0FEB                     	;# 
   588  0FED                     	;# 
   589  0FEE                     	;# 
   590  0FEF                     	;# 
   591  0000                     	;# 
   592  0001                     	;# 
   593  0002                     	;# 
   594  0003                     	;# 
   595  0004                     	;# 
   596  0005                     	;# 
   597  0006                     	;# 
   598  0007                     	;# 
   599  0008                     	;# 
   600  0009                     	;# 
   601  000A                     	;# 
   602  000B                     	;# 
   603  000C                     	;# 
   604  000D                     	;# 
   605  000E                     	;# 
   606  000F                     	;# 
   607  0010                     	;# 
   608  0011                     	;# 
   609  0012                     	;# 
   610  0013                     	;# 
   611  0015                     	;# 
   612  0016                     	;# 
   613  0016                     	;# 
   614  0017                     	;# 
   615  0018                     	;# 
   616  0019                     	;# 
   617  001A                     	;# 
   618  001B                     	;# 
   619  001C                     	;# 
   620  001E                     	;# 
   621  001F                     	;# 
   622  008C                     	;# 
   623  008D                     	;# 
   624  008E                     	;# 
   625  008F                     	;# 
   626  0090                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0093                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0098                     	;# 
   634  0099                     	;# 
   635  009A                     	;# 
   636  009B                     	;# 
   637  009B                     	;# 
   638  009C                     	;# 
   639  009D                     	;# 
   640  009E                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  010F                     	;# 
   645  0110                     	;# 
   646  0111                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0115                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  0118                     	;# 
   654  0119                     	;# 
   655  011A                     	;# 
   656  011B                     	;# 
   657  011D                     	;# 
   658  018C                     	;# 
   659  018D                     	;# 
   660  018F                     	;# 
   661  0190                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0194                     	;# 
   669  0195                     	;# 
   670  0196                     	;# 
   671  0199                     	;# 
   672  019A                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  019C                     	;# 
   679  019D                     	;# 
   680  019E                     	;# 
   681  019F                     	;# 
   682  020D                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0213                     	;# 
   687  0214                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0216                     	;# 
   691  0217                     	;# 
   692  0291                     	;# 
   693  0291                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0294                     	;# 
   697  0295                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0298                     	;# 
   701  0298                     	;# 
   702  0299                     	;# 
   703  029A                     	;# 
   704  029B                     	;# 
   705  029C                     	;# 
   706  029C                     	;# 
   707  029D                     	;# 
   708  029E                     	;# 
   709  029F                     	;# 
   710  0311                     	;# 
   711  0311                     	;# 
   712  0312                     	;# 
   713  0313                     	;# 
   714  0314                     	;# 
   715  0315                     	;# 
   716  0315                     	;# 
   717  0316                     	;# 
   718  0318                     	;# 
   719  0318                     	;# 
   720  0319                     	;# 
   721  031A                     	;# 
   722  031C                     	;# 
   723  031C                     	;# 
   724  031D                     	;# 
   725  031E                     	;# 
   726  0394                     	;# 
   727  0395                     	;# 
   728  0396                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0791                     	;# 
   736  0792                     	;# 
   737  0793                     	;# 
   738  0794                     	;# 
   739  0795                     	;# 
   740  0798                     	;# 
   741  0799                     	;# 
   742  079A                     	;# 
   743  07A0                     	;# 
   744  07A1                     	;# 
   745  07A2                     	;# 
   746  07A3                     	;# 
   747  07A4                     	;# 
   748  07A5                     	;# 
   749  07A6                     	;# 
   750  07A7                     	;# 
   751  07A8                     	;# 
   752  07A9                     	;# 
   753  07AA                     	;# 
   754  07AB                     	;# 
   755  0FE4                     	;# 
   756  0FE5                     	;# 
   757  0FE6                     	;# 
   758  0FE7                     	;# 
   759  0FE8                     	;# 
   760  0FE9                     	;# 
   761  0FEA                     	;# 
   762  0FEB                     	;# 
   763  0FED                     	;# 
   764  0FEE                     	;# 
   765  0FEF                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0008                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0015                     	;# 
   787  0016                     	;# 
   788  0016                     	;# 
   789  0017                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  001A                     	;# 
   793  001B                     	;# 
   794  001C                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  010C                     	;# 
   817  010D                     	;# 
   818  010E                     	;# 
   819  010F                     	;# 
   820  0110                     	;# 
   821  0111                     	;# 
   822  0112                     	;# 
   823  0113                     	;# 
   824  0114                     	;# 
   825  0115                     	;# 
   826  0116                     	;# 
   827  0117                     	;# 
   828  0118                     	;# 
   829  0119                     	;# 
   830  011A                     	;# 
   831  011B                     	;# 
   832  011D                     	;# 
   833  018C                     	;# 
   834  018D                     	;# 
   835  018F                     	;# 
   836  0190                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0193                     	;# 
   843  0194                     	;# 
   844  0195                     	;# 
   845  0196                     	;# 
   846  0199                     	;# 
   847  019A                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019C                     	;# 
   853  019C                     	;# 
   854  019D                     	;# 
   855  019E                     	;# 
   856  019F                     	;# 
   857  020D                     	;# 
   858  0210                     	;# 
   859  0211                     	;# 
   860  0212                     	;# 
   861  0213                     	;# 
   862  0214                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0216                     	;# 
   866  0217                     	;# 
   867  0291                     	;# 
   868  0291                     	;# 
   869  0292                     	;# 
   870  0293                     	;# 
   871  0294                     	;# 
   872  0295                     	;# 
   873  0295                     	;# 
   874  0296                     	;# 
   875  0298                     	;# 
   876  0298                     	;# 
   877  0299                     	;# 
   878  029A                     	;# 
   879  029B                     	;# 
   880  029C                     	;# 
   881  029C                     	;# 
   882  029D                     	;# 
   883  029E                     	;# 
   884  029F                     	;# 
   885  0311                     	;# 
   886  0311                     	;# 
   887  0312                     	;# 
   888  0313                     	;# 
   889  0314                     	;# 
   890  0315                     	;# 
   891  0315                     	;# 
   892  0316                     	;# 
   893  0318                     	;# 
   894  0318                     	;# 
   895  0319                     	;# 
   896  031A                     	;# 
   897  031C                     	;# 
   898  031C                     	;# 
   899  031D                     	;# 
   900  031E                     	;# 
   901  0394                     	;# 
   902  0395                     	;# 
   903  0396                     	;# 
   904  0415                     	;# 
   905  0416                     	;# 
   906  0417                     	;# 
   907  041C                     	;# 
   908  041D                     	;# 
   909  041E                     	;# 
   910  0791                     	;# 
   911  0792                     	;# 
   912  0793                     	;# 
   913  0794                     	;# 
   914  0795                     	;# 
   915  0798                     	;# 
   916  0799                     	;# 
   917  079A                     	;# 
   918  07A0                     	;# 
   919  07A1                     	;# 
   920  07A2                     	;# 
   921  07A3                     	;# 
   922  07A4                     	;# 
   923  07A5                     	;# 
   924  07A6                     	;# 
   925  07A7                     	;# 
   926  07A8                     	;# 
   927  07A9                     	;# 
   928  07AA                     	;# 
   929  07AB                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941  0000                     	;# 
   942  0001                     	;# 
   943  0002                     	;# 
   944  0003                     	;# 
   945  0004                     	;# 
   946  0005                     	;# 
   947  0006                     	;# 
   948  0007                     	;# 
   949  0008                     	;# 
   950  0009                     	;# 
   951  000A                     	;# 
   952  000B                     	;# 
   953  000C                     	;# 
   954  000D                     	;# 
   955  000E                     	;# 
   956  000F                     	;# 
   957  0010                     	;# 
   958  0011                     	;# 
   959  0012                     	;# 
   960  0013                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  001E                     	;# 
   971  001F                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  008F                     	;# 
   976  0090                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0093                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0097                     	;# 
   983  0098                     	;# 
   984  0099                     	;# 
   985  009A                     	;# 
   986  009B                     	;# 
   987  009B                     	;# 
   988  009C                     	;# 
   989  009D                     	;# 
   990  009E                     	;# 
   991  010C                     	;# 
   992  010D                     	;# 
   993  010E                     	;# 
   994  010F                     	;# 
   995  0110                     	;# 
   996  0111                     	;# 
   997  0112                     	;# 
   998  0113                     	;# 
   999  0114                     	;# 
  1000  0115                     	;# 
  1001  0116                     	;# 
  1002  0117                     	;# 
  1003  0118                     	;# 
  1004  0119                     	;# 
  1005  011A                     	;# 
  1006  011B                     	;# 
  1007  011D                     	;# 
  1008  018C                     	;# 
  1009  018D                     	;# 
  1010  018F                     	;# 
  1011  0190                     	;# 
  1012  0191                     	;# 
  1013  0191                     	;# 
  1014  0192                     	;# 
  1015  0193                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0194                     	;# 
  1019  0195                     	;# 
  1020  0196                     	;# 
  1021  0199                     	;# 
  1022  019A                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019C                     	;# 
  1028  019C                     	;# 
  1029  019D                     	;# 
  1030  019E                     	;# 
  1031  019F                     	;# 
  1032  020D                     	;# 
  1033  0210                     	;# 
  1034  0211                     	;# 
  1035  0212                     	;# 
  1036  0213                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0216                     	;# 
  1041  0217                     	;# 
  1042  0291                     	;# 
  1043  0291                     	;# 
  1044  0292                     	;# 
  1045  0293                     	;# 
  1046  0294                     	;# 
  1047  0295                     	;# 
  1048  0295                     	;# 
  1049  0296                     	;# 
  1050  0298                     	;# 
  1051  0298                     	;# 
  1052  0299                     	;# 
  1053  029A                     	;# 
  1054  029B                     	;# 
  1055  029C                     	;# 
  1056  029C                     	;# 
  1057  029D                     	;# 
  1058  029E                     	;# 
  1059  029F                     	;# 
  1060  0311                     	;# 
  1061  0311                     	;# 
  1062  0312                     	;# 
  1063  0313                     	;# 
  1064  0314                     	;# 
  1065  0315                     	;# 
  1066  0315                     	;# 
  1067  0316                     	;# 
  1068  0318                     	;# 
  1069  0318                     	;# 
  1070  0319                     	;# 
  1071  031A                     	;# 
  1072  031C                     	;# 
  1073  031C                     	;# 
  1074  031D                     	;# 
  1075  031E                     	;# 
  1076  0394                     	;# 
  1077  0395                     	;# 
  1078  0396                     	;# 
  1079  0415                     	;# 
  1080  0416                     	;# 
  1081  0417                     	;# 
  1082  041C                     	;# 
  1083  041D                     	;# 
  1084  041E                     	;# 
  1085  0791                     	;# 
  1086  0792                     	;# 
  1087  0793                     	;# 
  1088  0794                     	;# 
  1089  0795                     	;# 
  1090  0798                     	;# 
  1091  0799                     	;# 
  1092  079A                     	;# 
  1093  07A0                     	;# 
  1094  07A1                     	;# 
  1095  07A2                     	;# 
  1096  07A3                     	;# 
  1097  07A4                     	;# 
  1098  07A5                     	;# 
  1099  07A6                     	;# 
  1100  07A7                     	;# 
  1101  07A8                     	;# 
  1102  07A9                     	;# 
  1103  07AA                     	;# 
  1104  07AB                     	;# 
  1105  0FE4                     	;# 
  1106  0FE5                     	;# 
  1107  0FE6                     	;# 
  1108  0FE7                     	;# 
  1109  0FE8                     	;# 
  1110  0FE9                     	;# 
  1111  0FEA                     	;# 
  1112  0FEB                     	;# 
  1113  0FED                     	;# 
  1114  0FEE                     	;# 
  1115  0FEF                     	;# 
  1116  0000                     	;# 
  1117  0001                     	;# 
  1118  0002                     	;# 
  1119  0003                     	;# 
  1120  0004                     	;# 
  1121  0005                     	;# 
  1122  0006                     	;# 
  1123  0007                     	;# 
  1124  0008                     	;# 
  1125  0009                     	;# 
  1126  000A                     	;# 
  1127  000B                     	;# 
  1128  000C                     	;# 
  1129  000D                     	;# 
  1130  000E                     	;# 
  1131  000F                     	;# 
  1132  0010                     	;# 
  1133  0011                     	;# 
  1134  0012                     	;# 
  1135  0013                     	;# 
  1136  0015                     	;# 
  1137  0016                     	;# 
  1138  0016                     	;# 
  1139  0017                     	;# 
  1140  0018                     	;# 
  1141  0019                     	;# 
  1142  001A                     	;# 
  1143  001B                     	;# 
  1144  001C                     	;# 
  1145  001E                     	;# 
  1146  001F                     	;# 
  1147  008C                     	;# 
  1148  008D                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0097                     	;# 
  1158  0098                     	;# 
  1159  0099                     	;# 
  1160  009A                     	;# 
  1161  009B                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  010C                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  010F                     	;# 
  1170  0110                     	;# 
  1171  0111                     	;# 
  1172  0112                     	;# 
  1173  0113                     	;# 
  1174  0114                     	;# 
  1175  0115                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0118                     	;# 
  1179  0119                     	;# 
  1180  011A                     	;# 
  1181  011B                     	;# 
  1182  011D                     	;# 
  1183  018C                     	;# 
  1184  018D                     	;# 
  1185  018F                     	;# 
  1186  0190                     	;# 
  1187  0191                     	;# 
  1188  0191                     	;# 
  1189  0192                     	;# 
  1190  0193                     	;# 
  1191  0193                     	;# 
  1192  0193                     	;# 
  1193  0194                     	;# 
  1194  0195                     	;# 
  1195  0196                     	;# 
  1196  0199                     	;# 
  1197  019A                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019C                     	;# 
  1203  019C                     	;# 
  1204  019D                     	;# 
  1205  019E                     	;# 
  1206  019F                     	;# 
  1207  020D                     	;# 
  1208  0210                     	;# 
  1209  0211                     	;# 
  1210  0212                     	;# 
  1211  0213                     	;# 
  1212  0214                     	;# 
  1213  0215                     	;# 
  1214  0215                     	;# 
  1215  0216                     	;# 
  1216  0217                     	;# 
  1217  0291                     	;# 
  1218  0291                     	;# 
  1219  0292                     	;# 
  1220  0293                     	;# 
  1221  0294                     	;# 
  1222  0295                     	;# 
  1223  0295                     	;# 
  1224  0296                     	;# 
  1225  0298                     	;# 
  1226  0298                     	;# 
  1227  0299                     	;# 
  1228  029A                     	;# 
  1229  029B                     	;# 
  1230  029C                     	;# 
  1231  029C                     	;# 
  1232  029D                     	;# 
  1233  029E                     	;# 
  1234  029F                     	;# 
  1235  0311                     	;# 
  1236  0311                     	;# 
  1237  0312                     	;# 
  1238  0313                     	;# 
  1239  0314                     	;# 
  1240  0315                     	;# 
  1241  0315                     	;# 
  1242  0316                     	;# 
  1243  0318                     	;# 
  1244  0318                     	;# 
  1245  0319                     	;# 
  1246  031A                     	;# 
  1247  031C                     	;# 
  1248  031C                     	;# 
  1249  031D                     	;# 
  1250  031E                     	;# 
  1251  0394                     	;# 
  1252  0395                     	;# 
  1253  0396                     	;# 
  1254  0415                     	;# 
  1255  0416                     	;# 
  1256  0417                     	;# 
  1257  041C                     	;# 
  1258  041D                     	;# 
  1259  041E                     	;# 
  1260  0791                     	;# 
  1261  0792                     	;# 
  1262  0793                     	;# 
  1263  0794                     	;# 
  1264  0795                     	;# 
  1265  0798                     	;# 
  1266  0799                     	;# 
  1267  079A                     	;# 
  1268  07A0                     	;# 
  1269  07A1                     	;# 
  1270  07A2                     	;# 
  1271  07A3                     	;# 
  1272  07A4                     	;# 
  1273  07A5                     	;# 
  1274  07A6                     	;# 
  1275  07A7                     	;# 
  1276  07A8                     	;# 
  1277  07A9                     	;# 
  1278  07AA                     	;# 
  1279  07AB                     	;# 
  1280  0FE4                     	;# 
  1281  0FE5                     	;# 
  1282  0FE6                     	;# 
  1283  0FE7                     	;# 
  1284  0FE8                     	;# 
  1285  0FE9                     	;# 
  1286  0FEA                     	;# 
  1287  0FEB                     	;# 
  1288  0FED                     	;# 
  1289  0FEE                     	;# 
  1290  0FEF                     	;_TEST
  1291                           
  1292                           	psect	stringtext
  1293  03D8                     __pstringtext:	
  1294  03D8                     _dpowers:	
  1295  03D8  3401               	retlw	1
  1296  03D9  3400               	retlw	0
  1297  03DA  340A               	retlw	10
  1298  03DB  3400               	retlw	0
  1299  03DC  3464               	retlw	100
  1300  03DD  3400               	retlw	0
  1301  03DE  34E8               	retlw	232
  1302  03DF  3403               	retlw	3
  1303  03E0  3410               	retlw	16
  1304  03E1  3427               	retlw	39
  1305  03E2                     __end_of_dpowers:	
  1306  03E2                     _hexpowers:	
  1307  03E2  3401               	retlw	1
  1308  03E3  3400               	retlw	0
  1309  03E4  3410               	retlw	16
  1310  03E5  3400               	retlw	0
  1311  03E6  3400               	retlw	0
  1312  03E7  3401               	retlw	1
  1313  03E8  3400               	retlw	0
  1314  03E9  3410               	retlw	16
  1315  03EA                     __end_of_hexpowers:	
  1316  03EA                     _ODOFonts:	
  1317  03EA  34E0               	retlw	224
  1318  03EB  34FC               	retlw	252
  1319  03EC  34FE               	retlw	254
  1320  03ED  34FF               	retlw	255
  1321  03EE  341F               	retlw	31
  1322  03EF  340F               	retlw	15
  1323  03F0  340F               	retlw	15
  1324  03F1  341F               	retlw	31
  1325  03F2  34FF               	retlw	255
  1326  03F3  34FE               	retlw	254
  1327  03F4  34FC               	retlw	252
  1328  03F5  34E0               	retlw	224
  1329  03F6  3403               	retlw	3
  1330  03F7  341F               	retlw	31
  1331  03F8  343F               	retlw	63
  1332  03F9  347F               	retlw	127
  1333  03FA  347C               	retlw	124
  1334  03FB  3478               	retlw	120
  1335  03FC  3478               	retlw	120
  1336  03FD  347C               	retlw	124
  1337  03FE  347F               	retlw	127
  1338  03FF  343F               	retlw	63
  1339  0400  341F               	retlw	31
  1340  0401  3403               	retlw	3
  1341  0402  3400               	retlw	0
  1342  0403  3480               	retlw	128
  1343  0404  34C0               	retlw	192
  1344  0405  34E0               	retlw	224
  1345  0406  34F0               	retlw	240
  1346  0407  34F8               	retlw	248
  1347  0408  34F8               	retlw	248
  1348  0409  34F8               	retlw	248
  1349  040A  34F8               	retlw	248
  1350  040B  3400               	retlw	0
  1351  040C  3400               	retlw	0
  1352  040D  3400               	retlw	0
  1353  040E  3401               	retlw	1
  1354  040F  3401               	retlw	1
  1355  0410  3401               	retlw	1
  1356  0411  3400               	retlw	0
  1357  0412  3480               	retlw	128
  1358  0413  34FF               	retlw	255
  1359  0414  34FF               	retlw	255
  1360  0415  34FF               	retlw	255
  1361  0416  34FF               	retlw	255
  1362  0417  3480               	retlw	128
  1363  0418  3400               	retlw	0
  1364  0419  3400               	retlw	0
  1365  041A  3400               	retlw	0
  1366  041B  3480               	retlw	128
  1367  041C  34C2               	retlw	194
  1368  041D  34C3               	retlw	195
  1369  041E  34C3               	retlw	195
  1370  041F  34C3               	retlw	195
  1371  0420  34C3               	retlw	195
  1372  0421  34C3               	retlw	195
  1373  0422  34C3               	retlw	195
  1374  0423  34C3               	retlw	195
  1375  0424  3483               	retlw	131
  1376  0425  3402               	retlw	2
  1377  0426  3407               	retlw	7
  1378  0427  3407               	retlw	7
  1379  0428  3407               	retlw	7
  1380  0429  3403               	retlw	3
  1381  042A  3481               	retlw	129
  1382  042B  34C1               	retlw	193
  1383  042C  34E1               	retlw	225
  1384  042D  34F3               	retlw	243
  1385  042E  347F               	retlw	127
  1386  042F  343F               	retlw	63
  1387  0430  341F               	retlw	31
  1388  0431  340E               	retlw	14
  1389  0432  3418               	retlw	24
  1390  0433  341C               	retlw	28
  1391  0434  341E               	retlw	30
  1392  0435  341F               	retlw	31
  1393  0436  341F               	retlw	31
  1394  0437  341F               	retlw	31
  1395  0438  341D               	retlw	29
  1396  0439  341C               	retlw	28
  1397  043A  341C               	retlw	28
  1398  043B  341C               	retlw	28
  1399  043C  341C               	retlw	28
  1400  043D  341C               	retlw	28
  1401  043E  3400               	retlw	0
  1402  043F  3438               	retlw	56
  1403  0440  343C               	retlw	60
  1404  0441  343E               	retlw	62
  1405  0442  341E               	retlw	30
  1406  0443  348E               	retlw	142
  1407  0444  348E               	retlw	142
  1408  0445  34DE               	retlw	222
  1409  0446  34FE               	retlw	254
  1410  0447  34FC               	retlw	252
  1411  0448  347C               	retlw	124
  1412  0449  3430               	retlw	48
  1413  044A  3418               	retlw	24
  1414  044B  3438               	retlw	56
  1415  044C  3478               	retlw	120
  1416  044D  34F8               	retlw	248
  1417  044E  34F0               	retlw	240
  1418  044F  34E3               	retlw	227
  1419  0450  34E3               	retlw	227
  1420  0451  34F7               	retlw	247
  1421  0452  34FF               	retlw	255
  1422  0453  34FF               	retlw	255
  1423  0454  347E               	retlw	126
  1424  0455  341C               	retlw	28
  1425  0456  3400               	retlw	0
  1426  0457  3400               	retlw	0
  1427  0458  3400               	retlw	0
  1428  0459  3400               	retlw	0
  1429  045A  3400               	retlw	0
  1430  045B  3480               	retlw	128
  1431  045C  34C0               	retlw	192
  1432  045D  34E0               	retlw	224
  1433  045E  34F0               	retlw	240
  1434  045F  34F0               	retlw	240
  1435  0460  34F0               	retlw	240
  1436  0461  3400               	retlw	0
  1437  0462  34F0               	retlw	240
  1438  0463  34F8               	retlw	248
  1439  0464  34FC               	retlw	252
  1440  0465  34FE               	retlw	254
  1441  0466  34EF               	retlw	239
  1442  0467  34E7               	retlw	231
  1443  0468  34E3               	retlw	227
  1444  0469  34E1               	retlw	225
  1445  046A  34FF               	retlw	255
  1446  046B  34FF               	retlw	255
  1447  046C  34FF               	retlw	255
  1448  046D  34E0               	retlw	224
  1449  046E  3480               	retlw	128
  1450  046F  3480               	retlw	128
  1451  0470  3480               	retlw	128
  1452  0471  3480               	retlw	128
  1453  0472  3480               	retlw	128
  1454  0473  3480               	retlw	128
  1455  0474  3480               	retlw	128
  1456  0475  3480               	retlw	128
  1457  0476  3487               	retlw	135
  1458  0477  3487               	retlw	135
  1459  0478  3487               	retlw	135
  1460  0479  3400               	retlw	0
  1461  047A  347F               	retlw	127
  1462  047B  347F               	retlw	127
  1463  047C  347F               	retlw	127
  1464  047D  3473               	retlw	115
  1465  047E  3473               	retlw	115
  1466  047F  3433               	retlw	51
  1467  0480  3433               	retlw	51
  1468  0481  3473               	retlw	115
  1469  0482  34F3               	retlw	243
  1470  0483  34F3               	retlw	243
  1471  0484  34E3               	retlw	227
  1472  0485  3480               	retlw	128
  1473  0486  3406               	retlw	6
  1474  0487  340E               	retlw	14
  1475  0488  341E               	retlw	30
  1476  0489  341C               	retlw	28
  1477  048A  343C               	retlw	60
  1478  048B  3438               	retlw	56
  1479  048C  3438               	retlw	56
  1480  048D  343C               	retlw	60
  1481  048E  341E               	retlw	30
  1482  048F  341F               	retlw	31
  1483  0490  340F               	retlw	15
  1484  0491  3403               	retlw	3
  1485  0492  34C0               	retlw	192
  1486  0493  34F0               	retlw	240
  1487  0494  34F8               	retlw	248
  1488  0495  34FC               	retlw	252
  1489  0496  343C               	retlw	60
  1490  0497  349C               	retlw	156
  1491  0498  349C               	retlw	156
  1492  0499  349C               	retlw	156
  1493  049A  349C               	retlw	156
  1494  049B  343C               	retlw	60
  1495  049C  3438               	retlw	56
  1496  049D  3430               	retlw	48
  1497  049E  341F               	retlw	31
  1498  049F  347F               	retlw	127
  1499  04A0  34FF               	retlw	255
  1500  04A1  34FF               	retlw	255
  1501  04A2  34E7               	retlw	231
  1502  04A3  34C3               	retlw	195
  1503  04A4  34C3               	retlw	195
  1504  04A5  34C3               	retlw	195
  1505  04A6  34E7               	retlw	231
  1506  04A7  34FF               	retlw	255
  1507  04A8  34FF               	retlw	255
  1508  04A9  347C               	retlw	124
  1509  04AA  34E0               	retlw	224
  1510  04AB  34E0               	retlw	224
  1511  04AC  34E0               	retlw	224
  1512  04AD  34E0               	retlw	224
  1513  04AE  34E1               	retlw	225
  1514  04AF  34E1               	retlw	225
  1515  04B0  34E1               	retlw	225
  1516  04B1  34E1               	retlw	225
  1517  04B2  34E1               	retlw	225
  1518  04B3  34E0               	retlw	224
  1519  04B4  34E0               	retlw	224
  1520  04B5  34E0               	retlw	224
  1521  04B6  3400               	retlw	0
  1522  04B7  3400               	retlw	0
  1523  04B8  3400               	retlw	0
  1524  04B9  3480               	retlw	128
  1525  04BA  34E0               	retlw	224
  1526  04BB  34F8               	retlw	248
  1527  04BC  34FE               	retlw	254
  1528  04BD  347F               	retlw	127
  1529  04BE  340F               	retlw	15
  1530  04BF  3403               	retlw	3
  1531  04C0  3401               	retlw	1
  1532  04C1  3400               	retlw	0
  1533  04C2  3400               	retlw	0
  1534  04C3  3400               	retlw	0
  1535  04C4  3400               	retlw	0
  1536  04C5  340F               	retlw	15
  1537  04C6  340F               	retlw	15
  1538  04C7  340F               	retlw	15
  1539  04C8  340F               	retlw	15
  1540  04C9  3400               	retlw	0
  1541  04CA  3400               	retlw	0
  1542  04CB  3400               	retlw	0
  1543  04CC  3400               	retlw	0
  1544  04CD  3400               	retlw	0
  1545  04CE  3400               	retlw	0
  1546  04CF  343C               	retlw	60
  1547  04D0  34FE               	retlw	254
  1548  04D1  34FF               	retlw	255
  1549  04D2  34EF               	retlw	239
  1550  04D3  34C7               	retlw	199
  1551  04D4  34C7               	retlw	199
  1552  04D5  34EF               	retlw	239
  1553  04D6  34FF               	retlw	255
  1554  04D7  34FE               	retlw	254
  1555  04D8  343C               	retlw	60
  1556  04D9  3400               	retlw	0
  1557  04DA  340C               	retlw	12
  1558  04DB  341F               	retlw	31
  1559  04DC  343F               	retlw	63
  1560  04DD  347F               	retlw	127
  1561  04DE  347B               	retlw	123
  1562  04DF  3471               	retlw	113
  1563  04E0  3471               	retlw	113
  1564  04E1  347B               	retlw	123
  1565  04E2  347F               	retlw	127
  1566  04E3  343F               	retlw	63
  1567  04E4  341F               	retlw	31
  1568  04E5  340C               	retlw	12
  1569  04E6  34C0               	retlw	192
  1570  04E7  34E0               	retlw	224
  1571  04E8  34F0               	retlw	240
  1572  04E9  34F8               	retlw	248
  1573  04EA  3478               	retlw	120
  1574  04EB  3438               	retlw	56
  1575  04EC  3438               	retlw	56
  1576  04ED  3478               	retlw	120
  1577  04EE  34F0               	retlw	240
  1578  04EF  34F0               	retlw	240
  1579  04F0  34E0               	retlw	224
  1580  04F1  3480               	retlw	128
  1581  04F2  34C3               	retlw	195
  1582  04F3  34CF               	retlw	207
  1583  04F4  34DF               	retlw	223
  1584  04F5  34DF               	retlw	223
  1585  04F6  349E               	retlw	158
  1586  04F7  349C               	retlw	156
  1587  04F8  349C               	retlw	156
  1588  04F9  34CE               	retlw	206
  1589  04FA  34FF               	retlw	255
  1590  04FB  34FF               	retlw	255
  1591  04FC  34FF               	retlw	255
  1592  04FD  341F               	retlw	31
  1593  04FE  3400               	retlw	0
  1594  04FF  3401               	retlw	1
  1595  0500  3483               	retlw	131
  1596  0501  34C3               	retlw	195
  1597  0502  34C3               	retlw	195
  1598  0503  34C3               	retlw	195
  1599  0504  34C3               	retlw	195
  1600  0505  34C3               	retlw	195
  1601  0506  34C1               	retlw	193
  1602  0507  3481               	retlw	129
  1603  0508  3400               	retlw	0
  1604  0509  3400               	retlw	0
  1605  050A  34F8               	retlw	248
  1606  050B  34FF               	retlw	255
  1607  050C  34FF               	retlw	255
  1608  050D  34FF               	retlw	255
  1609  050E  3407               	retlw	7
  1610  050F  3403               	retlw	3
  1611  0510  3403               	retlw	3
  1612  0511  3407               	retlw	7
  1613  0512  34FF               	retlw	255
  1614  0513  34FF               	retlw	255
  1615  0514  34FF               	retlw	255
  1616  0515  34F8               	retlw	248
  1617  0516  3400               	retlw	0
  1618  0517  3407               	retlw	7
  1619  0518  340F               	retlw	15
  1620  0519  341F               	retlw	31
  1621  051A  341F               	retlw	31
  1622  051B  341E               	retlw	30
  1623  051C  341E               	retlw	30
  1624  051D  341F               	retlw	31
  1625  051E  341F               	retlw	31
  1626  051F  340F               	retlw	15
  1627  0520  3407               	retlw	7
  1628  0521  3400               	retlw	0
  1629  0522                     __end_of_ODOFonts:	
  1630  0522                     atan@coeff_a:	
  1631  0522  343C               	retlw	60
  1632  0523  3404               	retlw	4
  1633  0524  3442               	retlw	66
  1634  0525  349F               	retlw	159
  1635  0526  346A               	retlw	106
  1636  0527  3442               	retlw	66
  1637  0528  3490               	retlw	144
  1638  0529  3401               	retlw	1
  1639  052A  3442               	retlw	66
  1640  052B  344D               	retlw	77
  1641  052C  34BB               	retlw	187
  1642  052D  3440               	retlw	64
  1643  052E  34EC               	retlw	236
  1644  052F  3447               	retlw	71
  1645  0530  343E               	retlw	62
  1646  0531  348E               	retlw	142
  1647  0532  341F               	retlw	31
  1648  0533  34BB               	retlw	187
  1649  0534                     __end_ofatan@coeff_a:	
  1650  0534                     atan@coeff_b:	
  1651  0534  343C               	retlw	60
  1652  0535  3404               	retlw	4
  1653  0536  3442               	retlw	66
  1654  0537  345A               	retlw	90
  1655  0538  348B               	retlw	139
  1656  0539  3442               	retlw	66
  1657  053A  3404               	retlw	4
  1658  053B  3444               	retlw	68
  1659  053C  3442               	retlw	66
  1660  053D  349C               	retlw	156
  1661  053E  344F               	retlw	79
  1662  053F  3441               	retlw	65
  1663  0540  3400               	retlw	0
  1664  0541  3480               	retlw	128
  1665  0542  343F               	retlw	63
  1666  0543                     __end_ofatan@coeff_b:	
  1667  0011                     _PIR1bits	set	17
  1668  000C                     _PORTA	set	12
  1669  000E                     _PORTC	set	14
  1670  000F                     _PORTD	set	15
  1671  000F                     _PORTDbits	set	15
  1672  0010                     _PORTE	set	16
  1673  0060                     _RA0	set	96
  1674  0061                     _RA1	set	97
  1675  0062                     _RA2	set	98
  1676  0063                     _RA3	set	99
  1677  0064                     _RA4	set	100
  1678  0065                     _RA5	set	101
  1679  0066                     _RA6	set	102
  1680  0067                     _RA7	set	103
  1681  0070                     _RC0	set	112
  1682  0071                     _RC1	set	113
  1683  0072                     _RC2	set	114
  1684  0075                     _RC5	set	117
  1685  0078                     _RD0	set	120
  1686  0079                     _RD1	set	121
  1687  007A                     _RD2	set	122
  1688  007B                     _RD3	set	123
  1689  0080                     _RE0	set	128
  1690  0081                     _RE1	set	129
  1691  0082                     _RE2	set	130
  1692  0095                     _OPTION_REGbits	set	149
  1693  0099                     _OSCCON	set	153
  1694  009A                     _OSCSTAT	set	154
  1695  0098                     _OSCTUNE	set	152
  1696  0091                     _PIE1bits	set	145
  1697  008C                     _TRISA	set	140
  1698  008D                     _TRISB	set	141
  1699  008E                     _TRISC	set	142
  1700  008F                     _TRISD	set	143
  1701  0090                     _TRISE	set	144
  1702  0473                     _TRISC3	set	1139
  1703  0474                     _TRISC4	set	1140
  1704  011D                     _APFCON	set	285
  1705  010C                     _LATA	set	268
  1706  010D                     _LATB	set	269
  1707  010E                     _LATC	set	270
  1708  010F                     _LATD	set	271
  1709  0110                     _LATE	set	272
  1710  018C                     _ANSELA	set	396
  1711  018D                     _ANSELB	set	397
  1712  018F                     _ANSELD	set	399
  1713  0190                     _ANSELE	set	400
  1714  019F                     _BAUDCON	set	415
  1715  0199                     _RCREG	set	409
  1716  019D                     _RCSTA	set	413
  1717  019D                     _RCSTAbits	set	413
  1718  019C                     _SPBRGH	set	412
  1719  019B                     _SPBRGL	set	411
  1720  019A                     _TXREG	set	410
  1721  019E                     _TXSTA	set	414
  1722  019E                     _TXSTAbits	set	414
  1723  0212                     _SSPADD	set	530
  1724  0211                     _SSPBUF	set	529
  1725  0215                     _SSPCON1	set	533
  1726  0216                     _SSPCON2	set	534
  1727  0214                     _SSPSTAT	set	532
  1728  020D                     _WPUB	set	525
  1729  0210                     _WPUE	set	528
  1730  10B5                     _ACKDT	set	4277
  1731  10B4                     _ACKEN	set	4276
  1732  10B2                     _PEN	set	4274
  1733  10B3                     _RCEN	set	4275
  1734  10B1                     _RSEN	set	4273
  1735  10B0                     _SEN	set	4272
  1736  0543                     STR_7:	
  1737  0543  3430               	retlw	48	;'0'
  1738  0544  3431               	retlw	49	;'1'
  1739  0545  3432               	retlw	50	;'2'
  1740  0546  3433               	retlw	51	;'3'
  1741  0547  3434               	retlw	52	;'4'
  1742  0548  3435               	retlw	53	;'5'
  1743  0549  3436               	retlw	54	;'6'
  1744  054A  3437               	retlw	55	;'7'
  1745  054B  3438               	retlw	56	;'8'
  1746  054C  3439               	retlw	57	;'9'
  1747  054D  3441               	retlw	65	;'A'
  1748  054E  3442               	retlw	66	;'B'
  1749  054F  3443               	retlw	67	;'C'
  1750  0550  3444               	retlw	68	;'D'
  1751  0551  3445               	retlw	69	;'E'
  1752  0552  3446               	retlw	70	;'F'
  1753  0553  3400               	retlw	0
  1754  0554                     STR_5:	
  1755  0554  3461               	retlw	97	;'a'
  1756  0555  346E               	retlw	110	;'n'
  1757  0556  3467               	retlw	103	;'g'
  1758  0557  346C               	retlw	108	;'l'
  1759  0558  3465               	retlw	101	;'e'
  1760  0559  343A               	retlw	58	;':'
  1761  055A  3420               	retlw	32	;' '
  1762  055B  3425               	retlw	37	;'%'
  1763  055C  3464               	retlw	100	;'d'
  1764  055D  3420               	retlw	32	;' '
  1765  055E  3464               	retlw	100	;'d'
  1766  055F  3465               	retlw	101	;'e'
  1767  0560  3467               	retlw	103	;'g'
  1768  0561  340D               	retlw	13
  1769  0562  340A               	retlw	10
  1770  0563  3400               	retlw	0
  1771  0564                     STR_6:	
  1772  0564  3443               	retlw	67	;'C'
  1773  0565  3461               	retlw	97	;'a'
  1774  0566  346C               	retlw	108	;'l'
  1775  0567  3469               	retlw	105	;'i'
  1776  0568  3462               	retlw	98	;'b'
  1777  0569  343A               	retlw	58	;':'
  1778  056A  3420               	retlw	32	;' '
  1779  056B  3400               	retlw	0
  1780  056C                     STR_2:	
  1781  056C  345B               	retlw	91	;'['
  1782  056D  3425               	retlw	37	;'%'
  1783  056E  3432               	retlw	50	;'2'
  1784  056F  3458               	retlw	88	;'X'
  1785  0570  345D               	retlw	93	;']'
  1786  0571  3400               	retlw	0
  1787  0572                     STR_4:	
  1788  0572  3473               	retlw	115	;'s'
  1789  0573  3474               	retlw	116	;'t'
  1790  0574  3472               	retlw	114	;'r'
  1791  0575  340D               	retlw	13
  1792  0576  3400               	retlw	0
  1793  0562                     
  1794                           ; #config settings
  1795  0000                     
  1796                           	psect	cinit
  1797  0018                     start_initialization:	
  1798  0018                     __initialization:		;BIGRAM
  1799                           
  1800                           ; Clear objects allocated to BIGRAM
  1801  0018  3090               	movlw	low (0+8848)
  1802  0019  0084               	movwf	4
  1803  001A  3022               	movlw	high (0+8848)
  1804  001B  0085               	movwf	5
  1805  001C  3060               	movlw	96
  1806  001D  00FE               	movwf	btemp
  1807  001E  3001               	movlw	1
  1808  001F  00FF               	movwf	btemp+1
  1809  0020  3195  2587  3180   	fcall	clear_ram0
  1810                           
  1811                           ; Clear objects allocated to COMMON
  1812  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1813  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1814  0025  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  1815                           
  1816                           ; Clear objects allocated to BANK1
  1817  0026  30C8               	movlw	low __pbssBANK1
  1818  0027  0084               	movwf	4
  1819  0028  3000               	movlw	high __pbssBANK1
  1820  0029  0085               	movwf	5
  1821  002A  301E               	movlw	30
  1822  002B  00FE               	movwf	btemp
  1823  002C  3000               	movlw	0
  1824  002D  00FF               	movwf	btemp+1
  1825  002E  3195  2587         	fcall	clear_ram0
  1826  0030                     end_of_initialization:	
  1827                           ;End of C runtime variable initialization code
  1828                           
  1829  0030                     __end_of__initialization:	
  1830  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1831  0031  0020               	movlb	0
  1832  0032  318A  2A71         	ljmp	_main	;jump to C main() function
  1833                           
  1834                           	psect	bssCOMMON
  1835  007A                     __pbssCOMMON:	
  1836  007A                     _charac:	
  1837  007A                     	ds	2
  1838  007C                     _CurrentSlot:	
  1839  007C                     	ds	1
  1840                           
  1841                           	psect	bssBANK1
  1842  00C8                     __pbssBANK1:	
  1843  00C8                     _Xoff:	
  1844  00C8                     	ds	3
  1845  00CB                     _Xsf:	
  1846  00CB                     	ds	3
  1847  00CE                     _Yoff:	
  1848  00CE                     	ds	3
  1849  00D1                     _Ysf:	
  1850  00D1                     	ds	3
  1851  00D4                     _MagAngle:	
  1852  00D4                     	ds	2
  1853  00D6                     _aX:	
  1854  00D6                     	ds	2
  1855  00D8                     _aY:	
  1856  00D8                     	ds	2
  1857  00DA                     _aZ:	
  1858  00DA                     	ds	2
  1859  00DC                     _errno:	
  1860  00DC                     	ds	2
  1861  00DE                     _lines:	
  1862  00DE                     	ds	2
  1863  00E0                     _mX:	
  1864  00E0                     	ds	2
  1865  00E2                     _mY:	
  1866  00E2                     	ds	2
  1867  00E4                     _mZ:	
  1868  00E4                     	ds	2
  1869                           
  1870                           	psect	clrtext
  1871  1587                     clear_ram0:	
  1872                           ;	Called with FSR0 containing the base address, and
  1873                           ;	btemp/btemp+1 has the size to clear
  1874                           
  1875  1587  0064               	clrwdt	;clear the watchdog before getting into this loop
  1876  1588                     clrloop0:	
  1877  1588  0180               	clrf	0	;clear RAM location pointed to by FSR
  1878  1589  3101               	addfsr 0,1
  1879  158A  3001               	movlw	1
  1880  158B  02FE               	subwf	126,f
  1881  158C  3000               	movlw	0
  1882  158D  3BFF               	subwfb	127,f
  1883  158E  087F               	movf	127,w
  1884  158F  047E               	iorwf	126,w
  1885  1590  1903               	btfsc	3,2
  1886  1591  3400               	retlw	0	;all done for this memory range, return
  1887  1592  2D88               	goto	clrloop0	;have we reached the end yet?
  1888                           
  1889                           	psect	cstackBANK1
  1890  00A0                     __pcstackBANK1:	
  1891  00A0                     atan@y:	
  1892                           
  1893                           ; 3 bytes @ 0x0
  1894  00A0                     	ds	3
  1895  00A3                     atan@x:	
  1896                           
  1897                           ; 3 bytes @ 0x3
  1898  00A3                     	ds	3
  1899  00A6                     atan@recip:	
  1900                           
  1901                           ; 1 bytes @ 0x6
  1902  00A6                     	ds	1
  1903  00A7                     atan@val_squared:	
  1904                           
  1905                           ; 3 bytes @ 0x7
  1906  00A7                     	ds	3
  1907  00AA                     atan@val:	
  1908                           
  1909                           ; 3 bytes @ 0xA
  1910  00AA                     	ds	3
  1911  00AD                     _atan2$1160:	
  1912                           
  1913                           ; 3 bytes @ 0xD
  1914  00AD                     	ds	3
  1915  00B0                     _atan2$1161:	
  1916                           
  1917                           ; 3 bytes @ 0x10
  1918  00B0                     	ds	3
  1919  00B3                     _atan2$1163:	
  1920                           
  1921                           ; 3 bytes @ 0x13
  1922  00B3                     	ds	3
  1923  00B6                     _atan2$1162:	
  1924                           
  1925                           ; 3 bytes @ 0x16
  1926  00B6                     	ds	3
  1927  00B9                     atan2@v:	
  1928                           
  1929                           ; 3 bytes @ 0x19
  1930  00B9                     	ds	3
  1931  00BC                     _UpdateMagneticAngle$1159:	
  1932                           
  1933                           ; 3 bytes @ 0x1C
  1934  00BC                     	ds	3
  1935  00BF                     UpdateMagneticAngle@angrad:	
  1936                           
  1937                           ; 3 bytes @ 0x1F
  1938  00BF                     	ds	3
  1939  00C2                     UpdateMagneticAngle@Acc:	
  1940                           
  1941                           ; 2 bytes @ 0x22
  1942  00C2                     	ds	2
  1943  00C4                     UpdateMagneticAngle@i:	
  1944                           
  1945                           ; 1 bytes @ 0x24
  1946  00C4                     	ds	1
  1947  00C5                     ??_main:	
  1948                           
  1949                           ; 0 bytes @ 0x25
  1950  00C5                     	ds	3
  1951                           
  1952                           	psect	cstackCOMMON
  1953  0070                     __pcstackCOMMON:	
  1954  0070                     ?_OSCILLATOR_Initialize:	
  1955  0070                     ?_i2c_Init:	
  1956                           ; 0 bytes @ 0x0
  1957                           
  1958  0070                     ?_OLEDCommand:	
  1959                           ; 0 bytes @ 0x0
  1960                           
  1961  0070                     ?_i2c_Start:	
  1962                           ; 0 bytes @ 0x0
  1963                           
  1964  0070                     ?_i2c_Write:	
  1965                           ; 0 bytes @ 0x0
  1966                           
  1967  0070                     ?_i2c_Stop:	
  1968                           ; 0 bytes @ 0x0
  1969                           
  1970  0070                     ?_LSM303D_init:	
  1971                           ; 0 bytes @ 0x0
  1972                           
  1973  0070                     ?_UpdateMagneticAngle:	
  1974                           ; 0 bytes @ 0x0
  1975                           
  1976  0070                     ?_LSM303D_Read_M:	
  1977                           ; 0 bytes @ 0x0
  1978                           
  1979  0070                     ?_i2c_Restart:	
  1980                           ; 0 bytes @ 0x0
  1981                           
  1982  0070                     ?_isdigit:	
  1983                           ; 0 bytes @ 0x0
  1984                           
  1985  0070                     ?_PIN_MANAGER_Initialize:	
  1986                           ; 1 bit 
  1987                           
  1988  0070                     ?_SYSTEM_Initialize:	
  1989                           ; 0 bytes @ 0x0
  1990                           
  1991  0070                     ?_OLEDClearBuffer:	
  1992                           ; 0 bytes @ 0x0
  1993                           
  1994  0070                     ?_OLEDUpdateDisplay:	
  1995                           ; 0 bytes @ 0x0
  1996                           
  1997  0070                     ?_main:	
  1998                           ; 0 bytes @ 0x0
  1999                           
  2000  0070                     ?_EUSART_Receive_ISR:	
  2001                           ; 0 bytes @ 0x0
  2002                           
  2003  0070                     ??_EUSART_Receive_ISR:	
  2004                           ; 0 bytes @ 0x0
  2005                           
  2006  0070                     ?_putch:	
  2007                           ; 0 bytes @ 0x0
  2008                           
  2009  0070                     ?_INTERRUPT_InterruptManager:	
  2010                           ; 0 bytes @ 0x0
  2011                           
  2012  0070                     ?_i2c_Wait:	
  2013                           ; 0 bytes @ 0x0
  2014                           
  2015  0070                     ?_i2c_Read:	
  2016                           ; 0 bytes @ 0x0
  2017                           
  2018  0070                     ?_OLEDSetUp:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0070                     ?_EUSART_Initialize:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024                           
  2025                           ; 2 bytes @ 0x0
  2026  0070                     	ds	8
  2027  0078                     EUSART_Receive_ISR@incoming:	
  2028                           
  2029                           ; 1 bytes @ 0x8
  2030  0078                     	ds	1
  2031  0079                     ??_INTERRUPT_InterruptManager:	
  2032                           
  2033                           ; 0 bytes @ 0x9
  2034  0079                     	ds	1
  2035                           
  2036                           	psect	cstackBANK0
  2037  0020                     __pcstackBANK0:	
  2038  0020                     ??_OSCILLATOR_Initialize:	
  2039  0020                     ??_EUSART_Initialize:	
  2040                           ; 0 bytes @ 0x0
  2041                           
  2042  0020                     ??_i2c_Init:	
  2043                           ; 0 bytes @ 0x0
  2044                           
  2045  0020                     ??_i2c_Start:	
  2046                           ; 0 bytes @ 0x0
  2047                           
  2048  0020                     ?_i2c_Address:	
  2049                           ; 0 bytes @ 0x0
  2050                           
  2051  0020                     ??_i2c_Write:	
  2052                           ; 0 bytes @ 0x0
  2053                           
  2054  0020                     ??_i2c_Stop:	
  2055                           ; 0 bytes @ 0x0
  2056                           
  2057  0020                     ??_i2c_Restart:	
  2058                           ; 0 bytes @ 0x0
  2059                           
  2060  0020                     ??_i2c_Read:	
  2061                           ; 0 bytes @ 0x0
  2062                           
  2063  0020                     ??_isdigit:	
  2064                           ; 0 bytes @ 0x0
  2065                           
  2066  0020                     ??_PIN_MANAGER_Initialize:	
  2067                           ; 0 bytes @ 0x0
  2068                           
  2069  0020                     ??_SYSTEM_Initialize:	
  2070                           ; 0 bytes @ 0x0
  2071                           
  2072  0020                     ??_putch:	
  2073                           ; 0 bytes @ 0x0
  2074                           
  2075  0020                     ??_i2c_Wait:	
  2076                           ; 0 bytes @ 0x0
  2077                           
  2078  0020                     ?___ftge:	
  2079                           ; 0 bytes @ 0x0
  2080                           
  2081  0020                     ?___wmul:	
  2082                           ; 1 bit 
  2083                           
  2084  0020                     ?___awdiv:	
  2085                           ; 2 bytes @ 0x0
  2086                           
  2087  0020                     ?___lwdiv:	
  2088                           ; 2 bytes @ 0x0
  2089                           
  2090  0020                     ?___ftpack:	
  2091                           ; 2 bytes @ 0x0
  2092                           
  2093  0020                     putch@byte:	
  2094                           ; 3 bytes @ 0x0
  2095                           
  2096  0020                     i2c_Write@data:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0020                     i2c_Address@mode:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0020                     _isdigit$871:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0020                     ___wmul@multiplier:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0020                     ___awdiv@divisor:	
  2109                           ; 2 bytes @ 0x0
  2110                           
  2111  0020                     ___lwdiv@divisor:	
  2112                           ; 2 bytes @ 0x0
  2113                           
  2114  0020                     ___ftpack@arg:	
  2115                           ; 2 bytes @ 0x0
  2116                           
  2117  0020                     ___ftge@ff1:	
  2118                           ; 3 bytes @ 0x0
  2119                           
  2120                           
  2121                           ; 3 bytes @ 0x0
  2122  0020                     	ds	1
  2123  0021                     ??_i2c_Address:	
  2124  0021                     ?_LSM303D_Write:	
  2125                           ; 0 bytes @ 0x1
  2126                           
  2127  0021                     LSM303D_Write@data:	
  2128                           ; 0 bytes @ 0x1
  2129                           
  2130  0021                     i2c_Read@ack:	
  2131                           ; 1 bytes @ 0x1
  2132                           
  2133  0021                     isdigit@c:	
  2134                           ; 1 bytes @ 0x1
  2135                           
  2136                           
  2137                           ; 1 bytes @ 0x1
  2138  0021                     	ds	1
  2139  0022                     ??_LSM303D_Write:	
  2140  0022                     LSM303D_Write@reg:	
  2141                           ; 0 bytes @ 0x2
  2142                           
  2143  0022                     i2c_Address@address:	
  2144                           ; 1 bytes @ 0x2
  2145                           
  2146  0022                     i2c_Read@i2cReadData:	
  2147                           ; 1 bytes @ 0x2
  2148                           
  2149  0022                     ___wmul@multiplicand:	
  2150                           ; 1 bytes @ 0x2
  2151                           
  2152  0022                     ___awdiv@dividend:	
  2153                           ; 2 bytes @ 0x2
  2154                           
  2155  0022                     ___lwdiv@dividend:	
  2156                           ; 2 bytes @ 0x2
  2157                           
  2158                           
  2159                           ; 2 bytes @ 0x2
  2160  0022                     	ds	1
  2161  0023                     ??_LSM303D_init:	
  2162  0023                     ??_LSM303D_Read_M:	
  2163                           ; 0 bytes @ 0x3
  2164                           
  2165  0023                     i2c_Address@l_address:	
  2166                           ; 0 bytes @ 0x3
  2167                           
  2168  0023                     ___ftpack@exp:	
  2169                           ; 1 bytes @ 0x3
  2170                           
  2171  0023                     ___ftge@ff2:	
  2172                           ; 1 bytes @ 0x3
  2173                           
  2174                           
  2175                           ; 3 bytes @ 0x3
  2176  0023                     	ds	1
  2177  0024                     ??_OLEDCommand:	
  2178  0024                     ??___wmul:	
  2179                           ; 0 bytes @ 0x4
  2180                           
  2181  0024                     ??___awdiv:	
  2182                           ; 0 bytes @ 0x4
  2183                           
  2184  0024                     ??___lwdiv:	
  2185                           ; 0 bytes @ 0x4
  2186                           
  2187  0024                     OLEDCommand@c:	
  2188                           ; 0 bytes @ 0x4
  2189                           
  2190  0024                     ___ftpack@sign:	
  2191                           ; 1 bytes @ 0x4
  2192                           
  2193  0024                     ___wmul@product:	
  2194                           ; 1 bytes @ 0x4
  2195                           
  2196                           
  2197                           ; 2 bytes @ 0x4
  2198  0024                     	ds	1
  2199  0025                     ??___ftpack:	
  2200  0025                     OLEDCommand@command:	
  2201                           ; 0 bytes @ 0x5
  2202                           
  2203  0025                     ___awdiv@counter:	
  2204                           ; 1 bytes @ 0x5
  2205                           
  2206  0025                     ___lwdiv@quotient:	
  2207                           ; 1 bytes @ 0x5
  2208                           
  2209                           
  2210                           ; 2 bytes @ 0x5
  2211  0025                     	ds	1
  2212  0026                     ??_OLEDSetUp:	
  2213  0026                     ??_OLEDClearBuffer:	
  2214                           ; 0 bytes @ 0x6
  2215                           
  2216  0026                     ?_ODOScroll_units:	
  2217                           ; 0 bytes @ 0x6
  2218                           
  2219  0026                     ?_ODOScroll_tens:	
  2220                           ; 0 bytes @ 0x6
  2221                           
  2222  0026                     ??___ftge:	
  2223                           ; 0 bytes @ 0x6
  2224                           
  2225  0026                     ___awdiv@sign:	
  2226                           ; 0 bytes @ 0x6
  2227                           
  2228  0026                     ODOScroll_units@position:	
  2229                           ; 1 bytes @ 0x6
  2230                           
  2231  0026                     ODOScroll_tens@position:	
  2232                           ; 2 bytes @ 0x6
  2233                           
  2234                           
  2235                           ; 2 bytes @ 0x6
  2236  0026                     	ds	1
  2237  0027                     ___lwdiv@counter:	
  2238  0027                     ___awdiv@quotient:	
  2239                           ; 1 bytes @ 0x7
  2240                           
  2241                           
  2242                           ; 2 bytes @ 0x7
  2243  0027                     	ds	1
  2244  0028                     ??_ODOScroll_units:	
  2245  0028                     ??_ODOScroll_tens:	
  2246                           ; 0 bytes @ 0x8
  2247                           
  2248  0028                     ?___lwmod:	
  2249                           ; 0 bytes @ 0x8
  2250                           
  2251  0028                     ?___awtoft:	
  2252                           ; 2 bytes @ 0x8
  2253                           
  2254  0028                     ?___ftdiv:	
  2255                           ; 3 bytes @ 0x8
  2256                           
  2257  0028                     LSM303D_Read_M@X_L:	
  2258                           ; 3 bytes @ 0x8
  2259                           
  2260  0028                     ___awtoft@c:	
  2261                           ; 1 bytes @ 0x8
  2262                           
  2263  0028                     ___lwmod@divisor:	
  2264                           ; 2 bytes @ 0x8
  2265                           
  2266  0028                     ___ftdiv@f2:	
  2267                           ; 2 bytes @ 0x8
  2268                           
  2269                           
  2270                           ; 3 bytes @ 0x8
  2271  0028                     	ds	1
  2272  0029                     LSM303D_Read_M@X_H:	
  2273                           
  2274                           ; 1 bytes @ 0x9
  2275  0029                     	ds	1
  2276  002A                     LSM303D_Read_M@Y_L:	
  2277  002A                     OLEDClearBuffer@ptr:	
  2278                           ; 1 bytes @ 0xA
  2279                           
  2280  002A                     ___lwmod@dividend:	
  2281                           ; 2 bytes @ 0xA
  2282                           
  2283                           
  2284                           ; 2 bytes @ 0xA
  2285  002A                     	ds	1
  2286  002B                     ??___awtoft:	
  2287  002B                     LSM303D_Read_M@Y_H:	
  2288                           ; 0 bytes @ 0xB
  2289                           
  2290  002B                     ODOScroll_units@ptrTEST:	
  2291                           ; 1 bytes @ 0xB
  2292                           
  2293  002B                     ODOScroll_tens@ptrTEST:	
  2294                           ; 2 bytes @ 0xB
  2295                           
  2296  002B                     ___ftdiv@f1:	
  2297                           ; 2 bytes @ 0xB
  2298                           
  2299                           
  2300                           ; 3 bytes @ 0xB
  2301  002B                     	ds	1
  2302  002C                     ??___lwmod:	
  2303  002C                     OLEDClearBuffer@ColumnAddress:	
  2304                           ; 0 bytes @ 0xC
  2305                           
  2306  002C                     LSM303D_Read_M@Z_L:	
  2307                           ; 1 bytes @ 0xC
  2308                           
  2309                           
  2310                           ; 1 bytes @ 0xC
  2311  002C                     	ds	1
  2312  002D                     OLEDClearBuffer@PageAddress:	
  2313  002D                     LSM303D_Read_M@Z_H:	
  2314                           ; 1 bytes @ 0xD
  2315                           
  2316  002D                     ___awtoft@sign:	
  2317                           ; 1 bytes @ 0xD
  2318                           
  2319  002D                     ___lwmod@counter:	
  2320                           ; 1 bytes @ 0xD
  2321                           
  2322  002D                     ODOScroll_units@buffer:	
  2323                           ; 1 bytes @ 0xD
  2324                           
  2325  002D                     ODOScroll_tens@buffer:	
  2326                           ; 2 bytes @ 0xD
  2327                           
  2328                           
  2329                           ; 2 bytes @ 0xD
  2330  002D                     	ds	1
  2331  002E                     ??_OLEDUpdateDisplay:	
  2332  002E                     ??___ftdiv:	
  2333                           ; 0 bytes @ 0xE
  2334                           
  2335  002E                     ?_printf:	
  2336                           ; 0 bytes @ 0xE
  2337                           
  2338  002E                     printf@f:	
  2339                           ; 2 bytes @ 0xE
  2340                           
  2341                           
  2342                           ; 2 bytes @ 0xE
  2343  002E                     	ds	1
  2344  002F                     ODOScroll_units@buffer2:	
  2345  002F                     ODOScroll_tens@buffer2:	
  2346                           ; 2 bytes @ 0xF
  2347                           
  2348                           
  2349                           ; 2 bytes @ 0xF
  2350  002F                     	ds	2
  2351  0031                     ODOScroll_units@ptrbuffer:	
  2352  0031                     ODOScroll_tens@ptrbuffer:	
  2353                           ; 2 bytes @ 0x11
  2354                           
  2355                           
  2356                           ; 2 bytes @ 0x11
  2357  0031                     	ds	1
  2358  0032                     ??_printf:	
  2359  0032                     ___ftdiv@cntr:	
  2360                           ; 0 bytes @ 0x12
  2361                           
  2362                           
  2363                           ; 1 bytes @ 0x12
  2364  0032                     	ds	1
  2365  0033                     ODOScroll_units@ptrbuffer2:	
  2366  0033                     ODOScroll_tens@ptrbuffer2:	
  2367                           ; 2 bytes @ 0x13
  2368                           
  2369  0033                     ___ftdiv@f3:	
  2370                           ; 2 bytes @ 0x13
  2371                           
  2372                           
  2373                           ; 3 bytes @ 0x13
  2374  0033                     	ds	1
  2375  0034                     OLEDUpdateDisplay@ptr:	
  2376                           
  2377                           ; 2 bytes @ 0x14
  2378  0034                     	ds	1
  2379  0035                     ODOScroll_units@byteIndex:	
  2380  0035                     ODOScroll_tens@byteIndex:	
  2381                           ; 2 bytes @ 0x15
  2382                           
  2383                           
  2384                           ; 2 bytes @ 0x15
  2385  0035                     	ds	1
  2386  0036                     OLEDUpdateDisplay@clear:	
  2387  0036                     printf@idx:	
  2388                           ; 1 bytes @ 0x16
  2389                           
  2390  0036                     ___ftdiv@exp:	
  2391                           ; 1 bytes @ 0x16
  2392                           
  2393                           
  2394                           ; 1 bytes @ 0x16
  2395  0036                     	ds	1
  2396  0037                     OLEDUpdateDisplay@ColumnAddress:	
  2397  0037                     printf@ap:	
  2398                           ; 1 bytes @ 0x17
  2399                           
  2400  0037                     ___ftdiv@sign:	
  2401                           ; 1 bytes @ 0x17
  2402                           
  2403  0037                     ODOScroll_units@ptrODOFonts:	
  2404                           ; 1 bytes @ 0x17
  2405                           
  2406  0037                     ODOScroll_tens@ptrODOFonts:	
  2407                           ; 2 bytes @ 0x17
  2408                           
  2409                           
  2410                           ; 2 bytes @ 0x17
  2411  0037                     	ds	1
  2412  0038                     ?___ftneg:	
  2413  0038                     OLEDUpdateDisplay@PageAddress:	
  2414                           ; 3 bytes @ 0x18
  2415                           
  2416  0038                     printf@prec:	
  2417                           ; 1 bytes @ 0x18
  2418                           
  2419  0038                     ___ftneg@f1:	
  2420                           ; 1 bytes @ 0x18
  2421                           
  2422                           
  2423                           ; 3 bytes @ 0x18
  2424  0038                     	ds	1
  2425  0039                     printf@flag:	
  2426  0039                     ODOScroll_units@i:	
  2427                           ; 1 bytes @ 0x19
  2428                           
  2429  0039                     ODOScroll_tens@i:	
  2430                           ; 2 bytes @ 0x19
  2431                           
  2432                           
  2433                           ; 2 bytes @ 0x19
  2434  0039                     	ds	1
  2435  003A                     printf@width:	
  2436                           
  2437                           ; 2 bytes @ 0x1A
  2438  003A                     	ds	1
  2439  003B                     ??___ftneg:	
  2440  003B                     ?_fabs:	
  2441                           ; 0 bytes @ 0x1B
  2442                           
  2443  003B                     ?___ftadd:	
  2444                           ; 3 bytes @ 0x1B
  2445                           
  2446  003B                     fabs@d:	
  2447                           ; 3 bytes @ 0x1B
  2448                           
  2449  003B                     ___ftadd@f1:	
  2450                           ; 3 bytes @ 0x1B
  2451                           
  2452                           
  2453                           ; 3 bytes @ 0x1B
  2454  003B                     	ds	1
  2455  003C                     printf@val:	
  2456                           
  2457                           ; 2 bytes @ 0x1C
  2458  003C                     	ds	2
  2459  003E                     ??_fabs:	
  2460  003E                     printf@c:	
  2461                           ; 0 bytes @ 0x1E
  2462                           
  2463  003E                     ___ftadd@f2:	
  2464                           ; 1 bytes @ 0x1E
  2465                           
  2466                           
  2467                           ; 3 bytes @ 0x1E
  2468  003E                     	ds	3
  2469  0041                     ??___ftadd:	
  2470                           
  2471                           ; 0 bytes @ 0x21
  2472  0041                     	ds	4
  2473  0045                     ___ftadd@sign:	
  2474                           
  2475                           ; 1 bytes @ 0x25
  2476  0045                     	ds	1
  2477  0046                     ___ftadd@exp2:	
  2478                           
  2479                           ; 1 bytes @ 0x26
  2480  0046                     	ds	1
  2481  0047                     ___ftadd@exp1:	
  2482                           
  2483                           ; 1 bytes @ 0x27
  2484  0047                     	ds	1
  2485  0048                     ?___ftmul:	
  2486  0048                     ?___ftsub:	
  2487                           ; 3 bytes @ 0x28
  2488                           
  2489  0048                     ___ftmul@f1:	
  2490                           ; 3 bytes @ 0x28
  2491                           
  2492  0048                     ___ftsub@f2:	
  2493                           ; 3 bytes @ 0x28
  2494                           
  2495                           
  2496                           ; 3 bytes @ 0x28
  2497  0048                     	ds	3
  2498  004B                     ___ftmul@f2:	
  2499  004B                     ___ftsub@f1:	
  2500                           ; 3 bytes @ 0x2B
  2501                           
  2502                           
  2503                           ; 3 bytes @ 0x2B
  2504  004B                     	ds	3
  2505  004E                     ??___ftmul:	
  2506  004E                     ??___ftsub:	
  2507                           ; 0 bytes @ 0x2E
  2508                           
  2509                           
  2510                           ; 0 bytes @ 0x2E
  2511  004E                     	ds	4
  2512  0052                     ___ftmul@exp:	
  2513                           
  2514                           ; 1 bytes @ 0x32
  2515  0052                     	ds	1
  2516  0053                     ___ftmul@f3_as_product:	
  2517                           
  2518                           ; 3 bytes @ 0x33
  2519  0053                     	ds	3
  2520  0056                     ___ftmul@cntr:	
  2521                           
  2522                           ; 1 bytes @ 0x36
  2523  0056                     	ds	1
  2524  0057                     ___ftmul@sign:	
  2525                           
  2526                           ; 1 bytes @ 0x37
  2527  0057                     	ds	1
  2528  0058                     ?_eval_poly:	
  2529  0058                     ?___fttol:	
  2530                           ; 3 bytes @ 0x38
  2531                           
  2532  0058                     ___fttol@f1:	
  2533                           ; 4 bytes @ 0x38
  2534                           
  2535  0058                     eval_poly@x:	
  2536                           ; 3 bytes @ 0x38
  2537                           
  2538                           
  2539                           ; 3 bytes @ 0x38
  2540  0058                     	ds	3
  2541  005B                     eval_poly@d:	
  2542                           
  2543                           ; 2 bytes @ 0x3B
  2544  005B                     	ds	1
  2545  005C                     ??___fttol:	
  2546                           
  2547                           ; 0 bytes @ 0x3C
  2548  005C                     	ds	1
  2549  005D                     eval_poly@n:	
  2550                           
  2551                           ; 2 bytes @ 0x3D
  2552  005D                     	ds	2
  2553  005F                     ??_eval_poly:	
  2554  005F                     eval_poly@res:	
  2555                           ; 0 bytes @ 0x3F
  2556                           
  2557                           
  2558                           ; 3 bytes @ 0x3F
  2559  005F                     	ds	1
  2560  0060                     ___fttol@sign1:	
  2561                           
  2562                           ; 1 bytes @ 0x40
  2563  0060                     	ds	1
  2564  0061                     ___fttol@lval:	
  2565                           
  2566                           ; 4 bytes @ 0x41
  2567  0061                     	ds	1
  2568  0062                     ?_atan:	
  2569  0062                     atan@f:	
  2570                           ; 3 bytes @ 0x42
  2571                           
  2572                           
  2573                           ; 3 bytes @ 0x42
  2574  0062                     	ds	3
  2575  0065                     ??_atan:	
  2576  0065                     ___fttol@exp1:	
  2577                           ; 0 bytes @ 0x45
  2578                           
  2579                           
  2580                           ; 1 bytes @ 0x45
  2581  0065                     	ds	1
  2582  0066                     ?_atan2:	
  2583  0066                     atan2@y:	
  2584                           ; 3 bytes @ 0x46
  2585                           
  2586                           
  2587                           ; 3 bytes @ 0x46
  2588  0066                     	ds	3
  2589  0069                     atan2@x:	
  2590                           
  2591                           ; 3 bytes @ 0x49
  2592  0069                     	ds	3
  2593  006C                     ??_UpdateMagneticAngle:	
  2594  006C                     ??_atan2:	
  2595                           ; 0 bytes @ 0x4C
  2596                           
  2597                           
  2598                           ; 0 bytes @ 0x4C
  2599  006C                     	ds	2
  2600  006E                     main@pos2:	
  2601                           
  2602                           ; 1 bytes @ 0x4E
  2603  006E                     	ds	1
  2604  006F                     main@pos:	
  2605                           
  2606                           ; 1 bytes @ 0x4F
  2607  006F                     	ds	1
  2608                           
  2609                           	psect	maintext
  2610  0A71                     __pmaintext:	
  2611 ;;
  2612 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2613 ;;
  2614 ;; *************** function _main *****************
  2615 ;; Defined at:
  2616 ;;		line 26 in file "main.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  pos             1   79[BANK0 ] unsigned char 
  2621 ;;  pos2            1   78[BANK0 ] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : B1F/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2633 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;Total ram usage:        5 bytes
  2636 ;; Hardware stack levels required when called:    8
  2637 ;; This function calls:
  2638 ;;		_LSM303D_init
  2639 ;;		_ODOScroll_tens
  2640 ;;		_ODOScroll_units
  2641 ;;		_OLEDSetUp
  2642 ;;		_OLEDUpdateDisplay
  2643 ;;		_SYSTEM_Initialize
  2644 ;;		_UpdateMagneticAngle
  2645 ;;		_printf
  2646 ;; This function is called by:
  2647 ;;		Startup code after reset
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _main
  2653  0A71                     _main:	
  2654                           
  2655                           ;main.c: 28: SYSTEM_Initialize();
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2659  0A71  3195  257B  318A   	fcall	_SYSTEM_Initialize
  2660                           
  2661                           ;main.c: 30: OLEDSetUp ( );
  2662  0A74  3188  20E6  318A   	fcall	_OLEDSetUp
  2663                           
  2664                           ;main.c: 35: char pos=0;
  2665  0A77  0020               	movlb	0	; select bank0
  2666  0A78  01EF               	clrf	main@pos
  2667                           
  2668                           ;main.c: 36: char pos2=0;
  2669  0A79  01EE               	clrf	main@pos2
  2670  0A7A                     l4228:	
  2671                           ;main.c: 38: while (1)
  2672                           
  2673                           
  2674                           ;main.c: 39: {
  2675                           ;main.c: 41: for(pos2=0;pos2<190;)
  2676  0A7A  01EE               	clrf	main@pos2
  2677  0A7B                     L1:	
  2678  0A7B  30BE               	movlw	190
  2679  0A7C  026E               	subwf	main@pos2,w
  2680  0A7D  1803               	btfsc	3,0
  2681  0A7E  2A7A               	goto	l4228
  2682                           
  2683                           ;main.c: 42: {
  2684                           ;main.c: 43: for(pos=0;pos<171;pos++)
  2685  0A7F  01EF               	clrf	main@pos
  2686  0A80  30AB               	movlw	171
  2687  0A81  026F               	subwf	main@pos,w
  2688  0A82  1803               	btfsc	3,0
  2689  0A83  2AA0               	goto	l4248
  2690  0A84                     l4240:	
  2691                           
  2692                           ;main.c: 44: {
  2693                           ;main.c: 45: ODOScroll_units(pos);
  2694  0A84  086F               	movf	main@pos,w
  2695  0A85  0021               	movlb	1	; select bank1
  2696  0A86  00C5               	movwf	??_main^(0+128)
  2697  0A87  01C6               	clrf	(??_main^(0+128)+1)
  2698  0A88  0845               	movf	??_main^(0+128),w
  2699  0A89  0020               	movlb	0	; select bank0
  2700  0A8A  00A6               	movwf	ODOScroll_units@position
  2701  0A8B  0021               	movlb	1	; select bank1
  2702  0A8C  0846               	movf	(??_main+1)^(0+128),w
  2703  0A8D  0020               	movlb	0	; select bank0
  2704  0A8E  00A7               	movwf	ODOScroll_units@position+1
  2705  0A8F  318E  2624  318A   	fcall	_ODOScroll_units
  2706                           
  2707                           ;main.c: 46: OLEDUpdateDisplay ( 0x00 );
  2708  0A92  3000               	movlw	0
  2709  0A93  3189  21E4  318A   	fcall	_OLEDUpdateDisplay
  2710  0A96  3001               	movlw	1
  2711  0A97  0021               	movlb	1	; select bank1
  2712  0A98  00C5               	movwf	??_main^(0+128)
  2713  0A99  0845               	movf	??_main^(0+128),w
  2714  0A9A  0020               	movlb	0	; select bank0
  2715  0A9B  07EF               	addwf	main@pos,f
  2716  0A9C  30AB               	movlw	171
  2717  0A9D  026F               	subwf	main@pos,w
  2718  0A9E  1C03               	skipc
  2719  0A9F  2A84               	goto	l4240
  2720  0AA0                     l4248:	
  2721                           
  2722                           ;main.c: 48: }
  2723                           ;main.c: 49: for(;pos<190;pos++)
  2724  0AA0  30BE               	movlw	190
  2725  0AA1  026F               	subwf	main@pos,w
  2726  0AA2  1803               	btfsc	3,0
  2727  0AA3  2A7B               	goto	L1
  2728                           
  2729                           ;main.c: 50: {
  2730                           ;main.c: 51: ODOScroll_tens(pos2++);
  2731  0AA4  086E               	movf	main@pos2,w
  2732  0AA5  0021               	movlb	1	; select bank1
  2733  0AA6  00C5               	movwf	??_main^(0+128)
  2734  0AA7  01C6               	clrf	(??_main^(0+128)+1)
  2735  0AA8  0845               	movf	??_main^(0+128),w
  2736  0AA9  0020               	movlb	0	; select bank0
  2737  0AAA  00A6               	movwf	ODOScroll_tens@position
  2738  0AAB  0021               	movlb	1	; select bank1
  2739  0AAC  0846               	movf	(??_main+1)^(0+128),w
  2740  0AAD  0020               	movlb	0	; select bank0
  2741  0AAE  00A7               	movwf	ODOScroll_tens@position+1
  2742  0AAF  318D  2537  318A   	fcall	_ODOScroll_tens
  2743  0AB2  3001               	movlw	1
  2744  0AB3  0021               	movlb	1	; select bank1
  2745  0AB4  00C5               	movwf	??_main^(0+128)
  2746  0AB5  0845               	movf	??_main^(0+128),w
  2747  0AB6  0020               	movlb	0	; select bank0
  2748  0AB7  07EE               	addwf	main@pos2,f
  2749                           
  2750                           ;main.c: 52: ODOScroll_units(pos);
  2751  0AB8  086F               	movf	main@pos,w
  2752  0AB9  0021               	movlb	1	; select bank1
  2753  0ABA  00C5               	movwf	??_main^(0+128)
  2754  0ABB  01C6               	clrf	(??_main^(0+128)+1)
  2755  0ABC  0845               	movf	??_main^(0+128),w
  2756  0ABD  0020               	movlb	0	; select bank0
  2757  0ABE  00A6               	movwf	ODOScroll_units@position
  2758  0ABF  0021               	movlb	1	; select bank1
  2759  0AC0  0846               	movf	(??_main+1)^(0+128),w
  2760  0AC1  0020               	movlb	0	; select bank0
  2761  0AC2  00A7               	movwf	ODOScroll_units@position+1
  2762  0AC3  318E  2624  318A   	fcall	_ODOScroll_units
  2763                           
  2764                           ;main.c: 53: OLEDUpdateDisplay ( 0x00 );
  2765  0AC6  3000               	movlw	0
  2766  0AC7  3189  21E4  318A   	fcall	_OLEDUpdateDisplay
  2767  0ACA  3001               	movlw	1
  2768  0ACB  0021               	movlb	1	; select bank1
  2769  0ACC  00C5               	movwf	??_main^(0+128)
  2770  0ACD  0845               	movf	??_main^(0+128),w
  2771  0ACE  0020               	movlb	0	; select bank0
  2772  0ACF  07EF               	addwf	main@pos,f
  2773  0AD0  2AA0               	goto	l4248
  2774  0AD1                     u5177:	
  2775                           ;main.c: 71: _delay((unsigned long)((100)*(16000000/4000.0)));
  2776                           
  2777                           ;main.c: 54: }
  2778                           ;main.c: 56: }
  2779                           ;main.c: 59: }
  2780                           ;main.c: 70: RC5 = 1;
  2781                           
  2782  0AD1  0BC5               	decfsz	??_main^(0+128),f
  2783  0AD2  2AD1               	goto	u5177
  2784  0AD3  0BC6               	decfsz	(??_main^(0+128)+1),f
  2785  0AD4  2AD1               	goto	u5177
  2786  0AD5  0BC7               	decfsz	(??_main^(0+128)+2),f
  2787  0AD6  2AD1               	goto	u5177
  2788                           
  2789                           ;main.c: 72: printf("str\r");
  2790  0AD7  3072               	movlw	low (STR_4| (0+32768))
  2791  0AD8  0020               	movlb	0	; select bank0
  2792  0AD9  00AE               	movwf	printf@f
  2793  0ADA  3085               	movlw	high (STR_4| (0+32768))
  2794  0ADB  00AF               	movwf	printf@f+1
  2795  0ADC  3182  2233  318A   	fcall	_printf
  2796                           
  2797                           ;main.c: 74: LSM303D_init();
  2798  0ADF  3195  25D9  318A   	fcall	_LSM303D_init
  2799  0AE2                     l4272:	
  2800                           ;main.c: 85: while (1)
  2801                           
  2802                           
  2803                           ;main.c: 86: {
  2804                           ;main.c: 100: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2805  0AE2  3015               	movlw	21
  2806  0AE3  0021               	movlb	1	; select bank1
  2807  0AE4  00C7               	movwf	(??_main^(0+128)+2)
  2808  0AE5  304B               	movlw	75
  2809  0AE6  00C6               	movwf	(??_main^(0+128)+1)
  2810  0AE7  30D1               	movlw	209
  2811  0AE8  00C5               	movwf	??_main^(0+128)
  2812  0AE9                     u5187:	
  2813  0AE9  0BC5               	decfsz	??_main^(0+128),f
  2814  0AEA  2AE9               	goto	u5187
  2815  0AEB  0BC6               	decfsz	(??_main^(0+128)+1),f
  2816  0AEC  2AE9               	goto	u5187
  2817  0AED  0BC7               	decfsz	(??_main^(0+128)+2),f
  2818  0AEE  2AE9               	goto	u5187
  2819  0AEF  0000               	nop
  2820                           
  2821                           ;main.c: 101: UpdateMagneticAngle();
  2822  0AF0  318C  2461  318A   	fcall	_UpdateMagneticAngle
  2823                           
  2824                           ;main.c: 102: printf("angle: %d deg\r\n",(int)MagAngle);
  2825  0AF3  3054               	movlw	low (STR_5| (0+32768))
  2826  0AF4  0020               	movlb	0	; select bank0
  2827  0AF5  00AE               	movwf	printf@f
  2828  0AF6  3085               	movlw	high (STR_5| (0+32768))
  2829  0AF7  00AF               	movwf	printf@f+1
  2830  0AF8  0021               	movlb	1	; select bank1
  2831  0AF9  0855               	movf	(_MagAngle+1)^(0+128),w
  2832  0AFA  0020               	movlb	0	; select bank0
  2833  0AFB  00B1               	movwf	?_printf+3
  2834  0AFC  0021               	movlb	1	; select bank1
  2835  0AFD  0854               	movf	_MagAngle^(0+128),w
  2836  0AFE  0020               	movlb	0	; select bank0
  2837  0AFF  00B0               	movwf	?_printf+2
  2838  0B00  3182  2233  318A   	fcall	_printf
  2839  0B03  2AE2               	goto	l4272
  2840  0B04                     __end_of_main:	
  2841                           
  2842                           	psect	text1
  2843  0233                     __ptext1:	
  2844 ;; *************** function _printf *****************
  2845 ;; Defined at:
  2846 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2849 ;;		 -> STR_6(8), STR_5(16), STR_4(5), STR_3(2), 
  2850 ;;		 -> STR_2(6), STR_1(2), 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  idx             1   22[BANK0 ] unsigned char 
  2853 ;;  tmpval          4    0        struct .
  2854 ;;  val             2   28[BANK0 ] unsigned int 
  2855 ;;  width           2   26[BANK0 ] int 
  2856 ;;  cp              2    0        PTR const unsigned char 
  2857 ;;  len             2    0        unsigned int 
  2858 ;;  c               1   30[BANK0 ] char 
  2859 ;;  flag            1   25[BANK0 ] unsigned char 
  2860 ;;  prec            1   24[BANK0 ] char 
  2861 ;;  ap              1   23[BANK0 ] PTR void [1]
  2862 ;;		 -> ?_printf(2), 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2   14[BANK0 ] int 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;Total ram usage:       17 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    3
  2879 ;; This function calls:
  2880 ;;		___lwdiv
  2881 ;;		___lwmod
  2882 ;;		___wmul
  2883 ;;		_isdigit
  2884 ;;		_putch
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;;		_printArrayTest
  2888 ;;		_Calib
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _printf
  2894  0233                     _printf:	
  2895                           
  2896                           ;doprnt.c: 466: va_list ap;
  2897                           ;doprnt.c: 499: signed char c;
  2898                           ;doprnt.c: 501: int width;
  2899                           ;doprnt.c: 506: signed char prec;
  2900                           ;doprnt.c: 508: unsigned char flag;
  2901                           ;doprnt.c: 523: union {
  2902                           ;doprnt.c: 524: unsigned long vd;
  2903                           ;doprnt.c: 525: double integ;
  2904                           ;doprnt.c: 526: } tmpval;
  2905                           ;doprnt.c: 528: unsigned int val;
  2906                           ;doprnt.c: 529: unsigned len;
  2907                           ;doprnt.c: 530: const char * cp;
  2908                           ;doprnt.c: 533: *ap = __va_start();
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2912  0233  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2913  0234  0020               	movlb	0	; select bank0
  2914  0235  00B2               	movwf	??_printf
  2915  0236  0832               	movf	??_printf,w
  2916  0237  00B7               	movwf	printf@ap
  2917  0238                     l3798:	
  2918                           ;doprnt.c: 536: while(c = *f++) {
  2919                           
  2920  0238  0020               	movlb	0	; select bank0
  2921  0239  082F               	movf	printf@f+1,w
  2922  023A  00B3               	movwf	??_printf+1
  2923  023B  082E               	movf	printf@f,w
  2924  023C  00B2               	movwf	??_printf
  2925  023D  0AAE               	incf	printf@f,f
  2926  023E  1903               	skipnz
  2927  023F  0AAF               	incf	printf@f+1,f
  2928  0240  0832               	movf	??_printf,w
  2929  0241  0084               	movwf	4
  2930  0242  0833               	movf	??_printf+1,w
  2931  0243  0085               	movwf	5
  2932  0244  0800               	movf	0,w	;code access
  2933  0245  00B4               	movwf	??_printf+2
  2934  0246  0834               	movf	??_printf+2,w
  2935  0247  00BE               	movwf	printf@c
  2936  0248  083E               	movf	printf@c,w
  2937  0249  1903               	btfsc	3,2
  2938  024A  0008               	return
  2939                           
  2940                           ;doprnt.c: 538: if(c != '%')
  2941  024B  3025               	movlw	37
  2942  024C  063E               	xorwf	printf@c,w
  2943  024D  1903               	btfsc	3,2
  2944  024E  2A54               	goto	l3706
  2945                           
  2946                           ;doprnt.c: 540: {
  2947                           ;doprnt.c: 541: (putch(c) );
  2948  024F  083E               	movf	printf@c,w
  2949  0250  3195  2565  3182   	fcall	_putch
  2950                           
  2951                           ;doprnt.c: 542: continue;
  2952  0253  2A38               	goto	l3798
  2953  0254                     l3706:	
  2954                           
  2955                           ;doprnt.c: 543: }
  2956                           ;doprnt.c: 546: width = 0;
  2957  0254  0020               	movlb	0	; select bank0
  2958  0255  01BA               	clrf	printf@width
  2959  0256  01BB               	clrf	printf@width+1
  2960                           
  2961                           ;doprnt.c: 548: flag = 0;
  2962  0257  01B9               	clrf	printf@flag
  2963                           
  2964                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2965  0258  082E               	movf	printf@f,w
  2966  0259  0084               	movwf	4
  2967  025A  082F               	movf	printf@f+1,w
  2968  025B  0085               	movwf	5
  2969  025C  0800               	movf	0,w	;code access
  2970  025D  3195  2593  3182   	fcall	_isdigit
  2971  0260  1C03               	btfss	3,0
  2972  0261  2A97               	goto	l3722
  2973                           
  2974                           ;doprnt.c: 598: width = 0;
  2975  0262  0020               	movlb	0	; select bank0
  2976  0263  01BA               	clrf	printf@width
  2977  0264  01BB               	clrf	printf@width+1
  2978  0265                     l3712:	
  2979                           ;doprnt.c: 599: do {
  2980                           
  2981                           
  2982                           ;doprnt.c: 600: width *= 10;
  2983  0265  300A               	movlw	10
  2984  0266  0020               	movlb	0	; select bank0
  2985  0267  00A0               	movwf	___wmul@multiplier
  2986  0268  3000               	movlw	0
  2987  0269  00A1               	movwf	___wmul@multiplier+1
  2988  026A  083B               	movf	printf@width+1,w
  2989  026B  00A3               	movwf	___wmul@multiplicand+1
  2990  026C  083A               	movf	printf@width,w
  2991  026D  00A2               	movwf	___wmul@multiplicand
  2992  026E  3196  260B  3182   	fcall	___wmul
  2993  0271  0020               	movlb	0	; select bank0
  2994  0272  0821               	movf	?___wmul+1,w
  2995  0273  00BB               	movwf	printf@width+1
  2996  0274  0820               	movf	?___wmul,w
  2997  0275  00BA               	movwf	printf@width
  2998                           
  2999                           ;doprnt.c: 601: width += *f++ - '0';
  3000  0276  082E               	movf	printf@f,w
  3001  0277  0084               	movwf	4
  3002  0278  082F               	movf	printf@f+1,w
  3003  0279  0085               	movwf	5
  3004  027A  0800               	movf	0,w	;code access
  3005  027B  3ED0               	addlw	208
  3006  027C  00B2               	movwf	??_printf
  3007  027D  30FF               	movlw	255
  3008  027E  1803               	skipnc
  3009  027F  3000               	movlw	0
  3010  0280  00B3               	movwf	??_printf+1
  3011  0281  0832               	movf	??_printf,w
  3012  0282  07BA               	addwf	printf@width,f
  3013  0283  0833               	movf	??_printf+1,w
  3014  0284  3DBB               	addwfc	printf@width+1,f
  3015  0285  3001               	movlw	1
  3016  0286  07AE               	addwf	printf@f,f
  3017  0287  3000               	movlw	0
  3018  0288  3DAF               	addwfc	printf@f+1,f
  3019                           
  3020                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3021  0289  082E               	movf	printf@f,w
  3022  028A  0084               	movwf	4
  3023  028B  082F               	movf	printf@f+1,w
  3024  028C  0085               	movwf	5
  3025  028D  0800               	movf	0,w	;code access
  3026  028E  3195  2593  3182   	fcall	_isdigit
  3027  0291  1C03               	btfss	3,0
  3028  0292  2A97               	goto	l3722
  3029  0293  2A65               	goto	l3712
  3030  0294                     l583:	
  3031                           ;doprnt.c: 712: case 'X':
  3032                           
  3033                           ;doprnt.c: 698: case 'i':
  3034                           ;doprnt.c: 699: break;
  3035                           
  3036                           ;doprnt.c: 697: case 'd':
  3037                           
  3038                           ;doprnt.c: 638: goto alldone;
  3039                           
  3040                           ;doprnt.c: 637: case 0:
  3041                           
  3042                           ;doprnt.c: 608: }
  3043                           ;doprnt.c: 635: switch(c = *f++) {
  3044                           
  3045                           
  3046                           ;doprnt.c: 718: case 'x':
  3047                           ;doprnt.c: 721: flag |= 0x80;
  3048  0294  0020               	movlb	0	; select bank0
  3049  0295  17B9               	bsf	printf@flag,7
  3050                           
  3051                           ;doprnt.c: 723: break;
  3052  0296  2AB5               	goto	l581
  3053  0297                     l3722:	
  3054                           ;doprnt.c: 822: }
  3055                           
  3056                           ;doprnt.c: 813: continue;
  3057                           
  3058                           ;doprnt.c: 802: default:
  3059                           
  3060  0297  0020               	movlb	0	; select bank0
  3061  0298  082F               	movf	printf@f+1,w
  3062  0299  00B3               	movwf	??_printf+1
  3063  029A  082E               	movf	printf@f,w
  3064  029B  00B2               	movwf	??_printf
  3065  029C  0AAE               	incf	printf@f,f
  3066  029D  1903               	skipnz
  3067  029E  0AAF               	incf	printf@f+1,f
  3068  029F  0832               	movf	??_printf,w
  3069  02A0  0084               	movwf	4
  3070  02A1  0833               	movf	??_printf+1,w
  3071  02A2  0085               	movwf	5
  3072  02A3  0800               	movf	0,w	;code access
  3073  02A4  00BE               	movwf	printf@c
  3074                           
  3075                           ; Switch size 1, requested type "space"
  3076                           ; Number of cases is 5, Range of values is 0 to 120
  3077                           ; switch strategies available:
  3078                           ; Name         Instructions Cycles
  3079                           ; simple_byte           16     9 (average)
  3080                           ; direct_byte          248     6 (fixed)
  3081                           ; jumptable            260     6 (fixed)
  3082                           ;	Chosen strategy is simple_byte
  3083  02A5  3A00               	xorlw	0	; case 0
  3084  02A6  1903               	skipnz
  3085  02A7  2BD7               	goto	l613
  3086  02A8  3A58               	xorlw	88	; case 88
  3087  02A9  1903               	skipnz
  3088  02AA  2A94               	goto	l583
  3089  02AB  3A3C               	xorlw	60	; case 100
  3090  02AC  1903               	skipnz
  3091  02AD  2AB5               	goto	l581
  3092  02AE  3A0D               	xorlw	13	; case 105
  3093  02AF  1903               	skipnz
  3094  02B0  2AB5               	goto	l581
  3095  02B1  3A11               	xorlw	17	; case 120
  3096  02B2  1903               	skipnz
  3097  02B3  2A94               	goto	l583
  3098  02B4  2A38               	goto	l3798
  3099  02B5                     l581:	
  3100                           
  3101                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  3102  02B5  0020               	movlb	0	; select bank0
  3103  02B6  1BB9               	btfsc	printf@flag,7
  3104  02B7  2ACF               	goto	l3734
  3105                           
  3106                           ;doprnt.c: 1253: {
  3107                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3108  02B8  0837               	movf	printf@ap,w
  3109  02B9  0086               	movwf	6
  3110  02BA  0187               	clrf	7
  3111  02BB  3F40               	moviw [0]fsr1
  3112  02BC  00BC               	movwf	printf@val
  3113  02BD  3F41               	moviw [1]fsr1
  3114  02BE  00BD               	movwf	printf@val+1
  3115  02BF  3002               	movlw	2
  3116  02C0  00B2               	movwf	??_printf
  3117  02C1  0832               	movf	??_printf,w
  3118  02C2  07B7               	addwf	printf@ap,f
  3119                           
  3120                           ;doprnt.c: 1261: if((int)val < 0) {
  3121  02C3  1FBD               	btfss	printf@val+1,7
  3122  02C4  2B1F               	goto	l3760
  3123                           
  3124                           ;doprnt.c: 1262: flag |= 0x03;
  3125  02C5  3003               	movlw	3
  3126  02C6  00B2               	movwf	??_printf
  3127  02C7  0832               	movf	??_printf,w
  3128  02C8  04B9               	iorwf	printf@flag,f
  3129                           
  3130                           ;doprnt.c: 1263: val = -val;
  3131  02C9  09BC               	comf	printf@val,f
  3132  02CA  09BD               	comf	printf@val+1,f
  3133  02CB  0ABC               	incf	printf@val,f
  3134  02CC  1903               	skipnz
  3135  02CD  0ABD               	incf	printf@val+1,f
  3136                           
  3137                           ;doprnt.c: 1264: }
  3138                           ;doprnt.c: 1266: }
  3139  02CE  2B1F               	goto	l3760
  3140  02CF                     l3734:	
  3141                           
  3142                           ;doprnt.c: 1268: else
  3143                           ;doprnt.c: 1273: {
  3144                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3145  02CF  0837               	movf	printf@ap,w
  3146  02D0  0086               	movwf	6
  3147  02D1  0187               	clrf	7
  3148  02D2  3F40               	moviw [0]fsr1
  3149  02D3  00BC               	movwf	printf@val
  3150  02D4  3F41               	moviw [1]fsr1
  3151  02D5  00BD               	movwf	printf@val+1
  3152  02D6  3002               	movlw	2
  3153  02D7  00B2               	movwf	??_printf
  3154  02D8  0832               	movf	??_printf,w
  3155  02D9  07B7               	addwf	printf@ap,f
  3156                           
  3157                           ;doprnt.c: 1287: }
  3158                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  3159  02DA  2B1F               	goto	l3760
  3160  02DB                     l589:	
  3161                           ;doprnt.c: 1299: case 0x00:
  3162                           
  3163                           
  3164                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3165  02DB  01BE               	clrf	printf@c
  3166  02DC  0ABE               	incf	printf@c,f
  3167  02DD                     L4:	
  3168  02DD  3005               	movlw	5
  3169  02DE  063E               	xorwf	printf@c,w
  3170  02DF  1903               	btfsc	3,2
  3171  02E0  2B28               	goto	l3762
  3172                           
  3173                           ;doprnt.c: 1306: if(val < dpowers[c])
  3174  02E1  083E               	movf	printf@c,w
  3175  02E2  00B2               	movwf	??_printf
  3176  02E3  01B3               	clrf	??_printf+1
  3177  02E4  35B2               	lslf	??_printf,f
  3178  02E5  0DB3               	rlf	??_printf+1,f
  3179  02E6  30D8               	movlw	low (_dpowers| (0+32768))
  3180  02E7  0732               	addwf	??_printf,w
  3181  02E8  0084               	movwf	4
  3182  02E9  3083               	movlw	high (_dpowers| (0+32768))
  3183  02EA  3D33               	addwfc	??_printf+1,w
  3184  02EB  0085               	movwf	5
  3185  02EC  3F00               	moviw [0]fsr0
  3186  02ED  00B4               	movwf	??_printf+2
  3187  02EE  3F01               	moviw [1]fsr0
  3188  02EF  00B5               	movwf	??_printf+3
  3189  02F0  0835               	movf	??_printf+3,w
  3190  02F1  023D               	subwf	printf@val+1,w
  3191  02F2  1D03               	skipz
  3192  02F3  2AF6               	goto	u4025
  3193  02F4  0834               	movf	??_printf+2,w
  3194  02F5  023C               	subwf	printf@val,w
  3195  02F6                     u4025:	
  3196  02F6  1C03               	btfss	3,0
  3197  02F7  2B28               	goto	l3762
  3198                           
  3199                           ;doprnt.c: 1307: break;
  3200  02F8  3001               	movlw	1
  3201  02F9  00B2               	movwf	??_printf
  3202  02FA  0832               	movf	??_printf,w
  3203  02FB  07BE               	addwf	printf@c,f
  3204  02FC  2ADD               	goto	L4
  3205  02FD                     l594:	
  3206                           ;doprnt.c: 1314: case 0x80:
  3207                           
  3208                           ;doprnt.c: 1309: break;
  3209                           
  3210                           
  3211                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3212  02FD  01BE               	clrf	printf@c
  3213  02FE  0ABE               	incf	printf@c,f
  3214  02FF                     L5:	
  3215  02FF  3004               	movlw	4
  3216  0300  063E               	xorwf	printf@c,w
  3217  0301  1903               	btfsc	3,2
  3218  0302  2B28               	goto	l3762
  3219                           
  3220                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3221  0303  083E               	movf	printf@c,w
  3222  0304  00B2               	movwf	??_printf
  3223  0305  01B3               	clrf	??_printf+1
  3224  0306  35B2               	lslf	??_printf,f
  3225  0307  0DB3               	rlf	??_printf+1,f
  3226  0308  30E2               	movlw	low (_hexpowers| (0+32768))
  3227  0309  0732               	addwf	??_printf,w
  3228  030A  0084               	movwf	4
  3229  030B  3083               	movlw	high (_hexpowers| (0+32768))
  3230  030C  3D33               	addwfc	??_printf+1,w
  3231  030D  0085               	movwf	5
  3232  030E  3F00               	moviw [0]fsr0
  3233  030F  00B4               	movwf	??_printf+2
  3234  0310  3F01               	moviw [1]fsr0
  3235  0311  00B5               	movwf	??_printf+3
  3236  0312  0835               	movf	??_printf+3,w
  3237  0313  023D               	subwf	printf@val+1,w
  3238  0314  1D03               	skipz
  3239  0315  2B18               	goto	u4055
  3240  0316  0834               	movf	??_printf+2,w
  3241  0317  023C               	subwf	printf@val,w
  3242  0318                     u4055:	
  3243  0318  1C03               	btfss	3,0
  3244  0319  2B28               	goto	l3762
  3245                           
  3246                           ;doprnt.c: 1318: break;
  3247  031A  3001               	movlw	1
  3248  031B  00B2               	movwf	??_printf
  3249  031C  0832               	movf	??_printf,w
  3250  031D  07BE               	addwf	printf@c,f
  3251  031E  2AFF               	goto	L5
  3252  031F                     l3760:	
  3253                           ;doprnt.c: 1336: }
  3254                           
  3255                           ;doprnt.c: 1320: break;
  3256                           
  3257  031F  0839               	movf	printf@flag,w
  3258  0320  3980               	andlw	128
  3259                           
  3260                           ; Switch size 1, requested type "space"
  3261                           ; Number of cases is 2, Range of values is 0 to 128
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte            7     4 (average)
  3265                           ; jumptable            260     6 (fixed)
  3266                           ;	Chosen strategy is simple_byte
  3267  0321  3A00               	xorlw	0	; case 0
  3268  0322  1903               	skipnz
  3269  0323  2ADB               	goto	l589
  3270  0324  3A80               	xorlw	128	; case 128
  3271  0325  1903               	skipnz
  3272  0326  2AFD               	goto	l594
  3273  0327  2B28               	goto	l3762
  3274  0328                     l3762:	
  3275                           
  3276                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3277  0328  083A               	movf	printf@width,w
  3278  0329  043B               	iorwf	printf@width+1,w
  3279  032A  1903               	btfsc	3,2
  3280  032B  2B34               	goto	l598
  3281  032C  0839               	movf	printf@flag,w
  3282  032D  3903               	andlw	3
  3283  032E  1903               	btfsc	3,2
  3284  032F  2B34               	goto	l598
  3285                           
  3286                           ;doprnt.c: 1346: width--;
  3287  0330  30FF               	movlw	255
  3288  0331  07BA               	addwf	printf@width,f
  3289  0332  30FF               	movlw	255
  3290  0333  3DBB               	addwfc	printf@width+1,f
  3291  0334                     l598:	
  3292                           
  3293                           ;doprnt.c: 1381: if(width > c)
  3294  0334  083E               	movf	printf@c,w
  3295  0335  00B2               	movwf	??_printf
  3296  0336  01B3               	clrf	??_printf+1
  3297  0337  1BB2               	btfsc	??_printf,7
  3298  0338  03B3               	decf	??_printf+1,f
  3299  0339  0833               	movf	??_printf+1,w
  3300  033A  3A80               	xorlw	128
  3301  033B  00B4               	movwf	??_printf+2
  3302  033C  083B               	movf	printf@width+1,w
  3303  033D  3A80               	xorlw	128
  3304  033E  0234               	subwf	??_printf+2,w
  3305  033F  1D03               	skipz
  3306  0340  2B43               	goto	u4095
  3307  0341  083A               	movf	printf@width,w
  3308  0342  0232               	subwf	??_printf,w
  3309  0343                     u4095:	
  3310  0343  1803               	skipnc
  3311  0344  2B50               	goto	l3770
  3312                           
  3313                           ;doprnt.c: 1382: width -= c;
  3314  0345  0020               	movlb	0	; select bank0
  3315  0346  083E               	movf	printf@c,w
  3316  0347  00B2               	movwf	??_printf
  3317  0348  01B3               	clrf	??_printf+1
  3318  0349  1BB2               	btfsc	??_printf,7
  3319  034A  03B3               	decf	??_printf+1,f
  3320  034B  0832               	movf	??_printf,w
  3321  034C  02BA               	subwf	printf@width,f
  3322  034D  0833               	movf	??_printf+1,w
  3323  034E  3BBB               	subwfb	printf@width+1,f
  3324  034F  2B53               	goto	l3772
  3325  0350                     l3770:	
  3326                           
  3327                           ;doprnt.c: 1383: else
  3328                           ;doprnt.c: 1384: width = 0;
  3329  0350  0020               	movlb	0	; select bank0
  3330  0351  01BA               	clrf	printf@width
  3331  0352  01BB               	clrf	printf@width+1
  3332  0353                     l3772:	
  3333                           
  3334                           ;doprnt.c: 1422: {
  3335                           ;doprnt.c: 1424: if(width
  3336                           ;doprnt.c: 1428: )
  3337  0353  083A               	movf	printf@width,w
  3338  0354  043B               	iorwf	printf@width+1,w
  3339  0355  1903               	btfsc	3,2
  3340  0356  2B64               	goto	l3778
  3341  0357                     l3774:	
  3342                           ;doprnt.c: 1429: do
  3343                           
  3344                           
  3345                           ;doprnt.c: 1430: (putch(' ') );
  3346  0357  3020               	movlw	32
  3347  0358  3195  2565  3182   	fcall	_putch
  3348                           
  3349                           ;doprnt.c: 1431: while(--width);
  3350  035B  30FF               	movlw	255
  3351  035C  0020               	movlb	0	; select bank0
  3352  035D  07BA               	addwf	printf@width,f
  3353  035E  30FF               	movlw	255
  3354  035F  3DBB               	addwfc	printf@width+1,f
  3355  0360  083A               	movf	printf@width,w
  3356  0361  043B               	iorwf	printf@width+1,w
  3357  0362  1D03               	btfss	3,2
  3358  0363  2B57               	goto	l3774
  3359  0364                     l3778:	
  3360                           
  3361                           ;doprnt.c: 1438: if(flag & 0x03)
  3362  0364  0839               	movf	printf@flag,w
  3363  0365  3903               	andlw	3
  3364  0366  1903               	btfsc	3,2
  3365  0367  2B6C               	goto	l3782
  3366                           
  3367                           ;doprnt.c: 1439: (putch('-') );
  3368  0368  302D               	movlw	45
  3369  0369  3195  2565  3182   	fcall	_putch
  3370  036C                     l3782:	
  3371                           
  3372                           ;doprnt.c: 1469: }
  3373                           ;doprnt.c: 1472: prec = c;
  3374  036C  0020               	movlb	0	; select bank0
  3375  036D  083E               	movf	printf@c,w
  3376  036E  00B2               	movwf	??_printf
  3377  036F  0832               	movf	??_printf,w
  3378  0370  00B8               	movwf	printf@prec
  3379                           
  3380                           ;doprnt.c: 1474: while(prec--) {
  3381  0371  2BC5               	goto	l3796
  3382  0372                     l3784:	
  3383                           ;doprnt.c: 1478: {
  3384                           ;doprnt.c: 1483: case 0x00:
  3385                           
  3386                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  3387                           
  3388                           
  3389                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3390  0372  300A               	movlw	10
  3391  0373  00A8               	movwf	___lwmod@divisor
  3392  0374  3000               	movlw	0
  3393  0375  00A9               	movwf	___lwmod@divisor+1
  3394  0376  0838               	movf	printf@prec,w
  3395  0377  00B2               	movwf	??_printf
  3396  0378  01B3               	clrf	??_printf+1
  3397  0379  35B2               	lslf	??_printf,f
  3398  037A  0DB3               	rlf	??_printf+1,f
  3399  037B  30D8               	movlw	low (_dpowers| (0+32768))
  3400  037C  0732               	addwf	??_printf,w
  3401  037D  0084               	movwf	4
  3402  037E  3083               	movlw	high (_dpowers| (0+32768))
  3403  037F  3D33               	addwfc	??_printf+1,w
  3404  0380  0085               	movwf	5
  3405  0381  3F00               	moviw [0]fsr0
  3406  0382  00A0               	movwf	___lwdiv@divisor
  3407  0383  3F01               	moviw [1]fsr0
  3408  0384  00A1               	movwf	___lwdiv@divisor+1
  3409  0385  083D               	movf	printf@val+1,w
  3410  0386  00A3               	movwf	___lwdiv@dividend+1
  3411  0387  083C               	movf	printf@val,w
  3412  0388  00A2               	movwf	___lwdiv@dividend
  3413  0389  3196  26BF  3182   	fcall	___lwdiv
  3414  038C  0020               	movlb	0	; select bank0
  3415  038D  0821               	movf	?___lwdiv+1,w
  3416  038E  00AB               	movwf	___lwmod@dividend+1
  3417  038F  0820               	movf	?___lwdiv,w
  3418  0390  00AA               	movwf	___lwmod@dividend
  3419  0391  3196  2692  3182   	fcall	___lwmod
  3420  0394  0020               	movlb	0	; select bank0
  3421  0395  0828               	movf	?___lwmod,w
  3422  0396  3E30               	addlw	48
  3423  0397  00B4               	movwf	??_printf+2
  3424  0398  0834               	movf	??_printf+2,w
  3425  0399  2BC0               	goto	L3
  3426  039A                     l3786:	
  3427                           ;doprnt.c: 1497: case 0x80:
  3428                           
  3429                           ;doprnt.c: 1491: break;
  3430                           
  3431                           
  3432                           ;doprnt.c: 1499: {
  3433                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3434  039A  0838               	movf	printf@prec,w
  3435  039B  00B2               	movwf	??_printf
  3436  039C  01B3               	clrf	??_printf+1
  3437  039D  35B2               	lslf	??_printf,f
  3438  039E  0DB3               	rlf	??_printf+1,f
  3439  039F  30E2               	movlw	low (_hexpowers| (0+32768))
  3440  03A0  0732               	addwf	??_printf,w
  3441  03A1  0084               	movwf	4
  3442  03A2  3083               	movlw	high (_hexpowers| (0+32768))
  3443  03A3  3D33               	addwfc	??_printf+1,w
  3444  03A4  0085               	movwf	5
  3445  03A5  3F00               	moviw [0]fsr0
  3446  03A6  00A0               	movwf	___lwdiv@divisor
  3447  03A7  3F01               	moviw [1]fsr0
  3448  03A8  00A1               	movwf	___lwdiv@divisor+1
  3449  03A9  083D               	movf	printf@val+1,w
  3450  03AA  00A3               	movwf	___lwdiv@dividend+1
  3451  03AB  083C               	movf	printf@val,w
  3452  03AC  00A2               	movwf	___lwdiv@dividend
  3453  03AD  3196  26BF  3182   	fcall	___lwdiv
  3454  03B0  0020               	movlb	0	; select bank0
  3455  03B1  0820               	movf	?___lwdiv,w
  3456  03B2  390F               	andlw	15
  3457  03B3  00B4               	movwf	??_printf+2
  3458  03B4  0834               	movf	??_printf+2,w
  3459  03B5  00B6               	movwf	printf@idx
  3460                           
  3461                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  3462  03B6  0836               	movf	printf@idx,w
  3463  03B7  3E43               	addlw	low (STR_7| (0+32768))
  3464  03B8  0084               	movwf	4
  3465  03B9  3085               	movlw	high (STR_7| (0+32768))
  3466  03BA  1803               	skipnc
  3467  03BB  3E01               	addlw	1
  3468  03BC  0085               	movwf	5
  3469  03BD  0800               	movf	0,w	;code access
  3470  03BE  00B2               	movwf	??_printf
  3471  03BF  0832               	movf	??_printf,w
  3472  03C0                     L3:	
  3473  03C0  00BE               	movwf	printf@c
  3474  03C1                     l3794:	
  3475                           ;doprnt.c: 1523: }
  3476                           
  3477                           ;doprnt.c: 1508: }
  3478                           ;doprnt.c: 1510: break;
  3479                           
  3480                           
  3481                           ;doprnt.c: 1524: (putch(c) );
  3482  03C1  083E               	movf	printf@c,w
  3483  03C2  3195  2565  3182   	fcall	_putch
  3484  03C5                     l3796:	
  3485  03C5  30FF               	movlw	255
  3486  03C6  0020               	movlb	0	; select bank0
  3487  03C7  00B2               	movwf	??_printf
  3488  03C8  0832               	movf	??_printf,w
  3489  03C9  07B8               	addwf	printf@prec,f
  3490  03CA  0A38               	incf	printf@prec,w
  3491  03CB  1903               	btfsc	3,2
  3492  03CC  2A38               	goto	l3798
  3493  03CD  0839               	movf	printf@flag,w
  3494  03CE  3980               	andlw	128
  3495                           
  3496                           ; Switch size 1, requested type "space"
  3497                           ; Number of cases is 2, Range of values is 0 to 128
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte            7     4 (average)
  3501                           ; jumptable            260     6 (fixed)
  3502                           ;	Chosen strategy is simple_byte
  3503  03CF  3A00               	xorlw	0	; case 0
  3504  03D0  1903               	skipnz
  3505  03D1  2B72               	goto	l3784
  3506  03D2  3A80               	xorlw	128	; case 128
  3507  03D3  1903               	skipnz
  3508  03D4  2B9A               	goto	l3786
  3509  03D5  2BC1               	goto	l3794
  3510  03D6  2BC1               	goto	l3794
  3511  03D7                     l613:	
  3512                           ;doprnt.c: 1540: return 0;
  3513                           ;	Return value of _printf is never used
  3514                           
  3515                           ;doprnt.c: 1525: }
  3516                           ;doprnt.c: 1533: }
  3517                           ;doprnt.c: 1535: alldone:
  3518                           
  3519  03D7  0008               	return
  3520  03D8                     __end_of_printf:	
  3521                           
  3522                           	psect	text2
  3523  1565                     __ptext2:	
  3524 ;; *************** function _putch *****************
  3525 ;; Defined at:
  3526 ;;		line 77 in file "eusart.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  byte            1    wreg     unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  byte            1    0[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;Total ram usage:        1 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    2
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_printf
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _putch
  3556  1565                     _putch:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _putch: [wreg]
  3560                           ;putch@byte stored from wreg
  3561  1565  0020               	movlb	0	; select bank0
  3562  1566  00A0               	movwf	putch@byte
  3563  1567                     l427:	
  3564                           ;eusart.c: 79: while(!TXSTAbits.TRMT);
  3565                           
  3566  1567  0023               	movlb	3	; select bank3
  3567  1568  1C9E               	btfss	30,1	;volatile
  3568  1569  2D67               	goto	l427
  3569                           
  3570                           ;eusart.c: 80: TXREG = byte;
  3571  156A  0020               	movlb	0	; select bank0
  3572  156B  0820               	movf	putch@byte,w
  3573  156C  0023               	movlb	3	; select bank3
  3574  156D  009A               	movwf	26	;volatile
  3575  156E  0008               	return
  3576  156F                     __end_of_putch:	
  3577                           
  3578                           	psect	text3
  3579  1593                     __ptext3:	
  3580 ;; *************** function _isdigit *****************
  3581 ;; Defined at:
  3582 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  c               1    wreg     unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  c               1    1[BANK0 ] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;		None               void
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;Total ram usage:        2 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    2
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_printf
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _isdigit
  3612  1593                     _isdigit:	
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3616                           ;isdigit@c stored from wreg
  3617  1593  0020               	movlb	0	; select bank0
  3618  1594  00A1               	movwf	isdigit@c
  3619  1595  01A0               	clrf	_isdigit$871
  3620  1596  303A               	movlw	58
  3621  1597  0221               	subwf	isdigit@c,w
  3622  1598  1803               	skipnc
  3623  1599  2DA0               	goto	l3394
  3624  159A  3030               	movlw	48
  3625  159B  0221               	subwf	isdigit@c,w
  3626  159C  1C03               	skipc
  3627  159D  2DA0               	goto	l3394
  3628  159E  01A0               	clrf	_isdigit$871
  3629  159F  0AA0               	incf	_isdigit$871,f
  3630  15A0                     l3394:	
  3631  15A0  0C20               	rrf	_isdigit$871,w
  3632  15A1  0008               	return
  3633  15A2                     __end_of_isdigit:	
  3634                           
  3635                           	psect	text4
  3636  1692                     __ptext4:	
  3637 ;; *************** function ___lwmod *****************
  3638 ;; Defined at:
  3639 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  divisor         2    8[BANK0 ] unsigned int 
  3642 ;;  dividend        2   10[BANK0 ] unsigned int 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  counter         1   13[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2    8[BANK0 ] unsigned int 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3655 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3657 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3658 ;;Total ram usage:        6 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_printf
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function ___lwmod
  3670  1692                     ___lwmod:	
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3674  1692  0020               	movlb	0	; select bank0
  3675  1693  0828               	movf	___lwmod@divisor,w
  3676  1694  0429               	iorwf	___lwmod@divisor+1,w
  3677  1695  1903               	btfsc	3,2
  3678  1696  2EBA               	goto	l3540
  3679  1697  01AD               	clrf	___lwmod@counter
  3680  1698  0AAD               	incf	___lwmod@counter,f
  3681  1699                     l3530:	
  3682  1699  1BA9               	btfsc	___lwmod@divisor+1,7
  3683  169A  2EA5               	goto	l3532
  3684  169B  3001               	movlw	1
  3685  169C                     u3795:	
  3686  169C  35A8               	lslf	___lwmod@divisor,f
  3687  169D  0DA9               	rlf	___lwmod@divisor+1,f
  3688  169E  0B89               	decfsz	9,f
  3689  169F  2E9C               	goto	u3795
  3690  16A0  3001               	movlw	1
  3691  16A1  00AC               	movwf	??___lwmod
  3692  16A2  082C               	movf	??___lwmod,w
  3693  16A3  07AD               	addwf	___lwmod@counter,f
  3694  16A4  2E99               	goto	l3530
  3695  16A5                     l3532:	
  3696  16A5  0829               	movf	___lwmod@divisor+1,w
  3697  16A6  022B               	subwf	___lwmod@dividend+1,w
  3698  16A7  1D03               	skipz
  3699  16A8  2EAB               	goto	u3815
  3700  16A9  0828               	movf	___lwmod@divisor,w
  3701  16AA  022A               	subwf	___lwmod@dividend,w
  3702  16AB                     u3815:	
  3703  16AB  1C03               	skipc
  3704  16AC  2EB1               	goto	l3536
  3705  16AD  0828               	movf	___lwmod@divisor,w
  3706  16AE  02AA               	subwf	___lwmod@dividend,f
  3707  16AF  0829               	movf	___lwmod@divisor+1,w
  3708  16B0  3BAB               	subwfb	___lwmod@dividend+1,f
  3709  16B1                     l3536:	
  3710  16B1  3001               	movlw	1
  3711  16B2                     u3825:	
  3712  16B2  36A9               	lsrf	___lwmod@divisor+1,f
  3713  16B3  0CA8               	rrf	___lwmod@divisor,f
  3714  16B4  0B89               	decfsz	9,f
  3715  16B5  2EB2               	goto	u3825
  3716  16B6  3001               	movlw	1
  3717  16B7  02AD               	subwf	___lwmod@counter,f
  3718  16B8  1D03               	btfss	3,2
  3719  16B9  2EA5               	goto	l3532
  3720  16BA                     l3540:	
  3721  16BA  082B               	movf	___lwmod@dividend+1,w
  3722  16BB  00A9               	movwf	?___lwmod+1
  3723  16BC  082A               	movf	___lwmod@dividend,w
  3724  16BD  00A8               	movwf	?___lwmod
  3725  16BE  0008               	return
  3726  16BF                     __end_of___lwmod:	
  3727                           
  3728                           	psect	text5
  3729  16BF                     __ptext5:	
  3730 ;; *************** function ___lwdiv *****************
  3731 ;; Defined at:
  3732 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  divisor         2    0[BANK0 ] unsigned int 
  3735 ;;  dividend        2    2[BANK0 ] unsigned int 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  quotient        2    5[BANK0 ] unsigned int 
  3738 ;;  counter         1    7[BANK0 ] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2    0[BANK0 ] unsigned int 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        8 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    2
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_printf
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           
  3763                           ;psect for function ___lwdiv
  3764  16BF                     ___lwdiv:	
  3765                           
  3766                           ;incstack = 0
  3767                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3768  16BF  0020               	movlb	0	; select bank0
  3769  16C0  01A5               	clrf	___lwdiv@quotient
  3770  16C1  01A6               	clrf	___lwdiv@quotient+1
  3771  16C2  0820               	movf	___lwdiv@divisor,w
  3772  16C3  0421               	iorwf	___lwdiv@divisor+1,w
  3773  16C4  1903               	btfsc	3,2
  3774  16C5  2EEF               	goto	l3518
  3775  16C6  01A7               	clrf	___lwdiv@counter
  3776  16C7  0AA7               	incf	___lwdiv@counter,f
  3777  16C8                     l3506:	
  3778  16C8  1BA1               	btfsc	___lwdiv@divisor+1,7
  3779  16C9  2ED4               	goto	l3508
  3780  16CA  3001               	movlw	1
  3781  16CB                     u3725:	
  3782  16CB  35A0               	lslf	___lwdiv@divisor,f
  3783  16CC  0DA1               	rlf	___lwdiv@divisor+1,f
  3784  16CD  0B89               	decfsz	9,f
  3785  16CE  2ECB               	goto	u3725
  3786  16CF  3001               	movlw	1
  3787  16D0  00A4               	movwf	??___lwdiv
  3788  16D1  0824               	movf	??___lwdiv,w
  3789  16D2  07A7               	addwf	___lwdiv@counter,f
  3790  16D3  2EC8               	goto	l3506
  3791  16D4                     l3508:	
  3792  16D4  3001               	movlw	1
  3793  16D5                     u3745:	
  3794  16D5  35A5               	lslf	___lwdiv@quotient,f
  3795  16D6  0DA6               	rlf	___lwdiv@quotient+1,f
  3796  16D7  0B89               	decfsz	9,f
  3797  16D8  2ED5               	goto	u3745
  3798  16D9  0821               	movf	___lwdiv@divisor+1,w
  3799  16DA  0223               	subwf	___lwdiv@dividend+1,w
  3800  16DB  1D03               	skipz
  3801  16DC  2EDF               	goto	u3755
  3802  16DD  0820               	movf	___lwdiv@divisor,w
  3803  16DE  0222               	subwf	___lwdiv@dividend,w
  3804  16DF                     u3755:	
  3805  16DF  1C03               	skipc
  3806  16E0  2EE6               	goto	l3514
  3807  16E1  0820               	movf	___lwdiv@divisor,w
  3808  16E2  02A2               	subwf	___lwdiv@dividend,f
  3809  16E3  0821               	movf	___lwdiv@divisor+1,w
  3810  16E4  3BA3               	subwfb	___lwdiv@dividend+1,f
  3811  16E5  1425               	bsf	___lwdiv@quotient,0
  3812  16E6                     l3514:	
  3813  16E6  3001               	movlw	1
  3814  16E7                     u3765:	
  3815  16E7  36A1               	lsrf	___lwdiv@divisor+1,f
  3816  16E8  0CA0               	rrf	___lwdiv@divisor,f
  3817  16E9  0B89               	decfsz	9,f
  3818  16EA  2EE7               	goto	u3765
  3819  16EB  3001               	movlw	1
  3820  16EC  02A7               	subwf	___lwdiv@counter,f
  3821  16ED  1D03               	btfss	3,2
  3822  16EE  2ED4               	goto	l3508
  3823  16EF                     l3518:	
  3824  16EF  0826               	movf	___lwdiv@quotient+1,w
  3825  16F0  00A1               	movwf	?___lwdiv+1
  3826  16F1  0825               	movf	___lwdiv@quotient,w
  3827  16F2  00A0               	movwf	?___lwdiv
  3828  16F3  0008               	return
  3829  16F4                     __end_of___lwdiv:	
  3830                           
  3831                           	psect	text6
  3832  0C61                     __ptext6:	
  3833 ;; *************** function _UpdateMagneticAngle *****************
  3834 ;; Defined at:
  3835 ;;		line 216 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  i               1   36[BANK1 ] unsigned char 
  3840 ;;  angrad          3   31[BANK1 ] unsigned char 
  3841 ;;  Acc             2   34[BANK1 ] int 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;		None               void
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Totals:         0       2       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;Total ram usage:       11 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    7
  3858 ;; This function calls:
  3859 ;;		_LSM303D_Read_M
  3860 ;;		_LSM303D_Write
  3861 ;;		___awdiv
  3862 ;;		___awtoft
  3863 ;;		___ftadd
  3864 ;;		___ftmul
  3865 ;;		___fttol
  3866 ;;		_atan2
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           
  3873                           ;psect for function _UpdateMagneticAngle
  3874  0C61                     _UpdateMagneticAngle:	
  3875                           
  3876                           ;main.c: 218: double angrad=0;
  3877                           
  3878                           ;incstack = 0
  3879                           ; Regs used in _UpdateMagneticAngle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3880  0C61  3000               	movlw	0
  3881  0C62  0021               	movlb	1	; select bank1
  3882  0C63  00BF               	movwf	UpdateMagneticAngle@angrad^(0+128)
  3883  0C64  3000               	movlw	0
  3884  0C65  00C0               	movwf	(UpdateMagneticAngle@angrad+1)^(0+128)
  3885  0C66  3000               	movlw	0
  3886  0C67  00C1               	movwf	(UpdateMagneticAngle@angrad+2)^(0+128)
  3887                           
  3888                           ;main.c: 219: int Acc = 0;
  3889  0C68  01C2               	clrf	UpdateMagneticAngle@Acc^(0+128)
  3890  0C69  01C3               	clrf	(UpdateMagneticAngle@Acc+1)^(0+128)
  3891                           
  3892                           ;main.c: 221: for(char i=0;i<5;i++)
  3893  0C6A  01C4               	clrf	UpdateMagneticAngle@i^(0+128)
  3894  0C6B                     L6:	
  3895  0C6B  3005               	movlw	5
  3896  0C6C  0244               	subwf	UpdateMagneticAngle@i^(0+128),w
  3897  0C6D  1803               	btfsc	3,0
  3898  0C6E  0008               	return
  3899                           
  3900                           ;main.c: 222: {
  3901                           ;main.c: 223: LSM303D_Write(0x26,0x01);
  3902  0C6F  0020               	movlb	0	; select bank0
  3903  0C70  01A1               	clrf	LSM303D_Write@data
  3904  0C71  0AA1               	incf	LSM303D_Write@data,f
  3905  0C72  3026               	movlw	38
  3906  0C73  3195  25C3  318C   	fcall	_LSM303D_Write
  3907                           
  3908                           ;main.c: 224: LSM303D_Read_M();
  3909  0C76  318F  2711  318C   	fcall	_LSM303D_Read_M
  3910                           
  3911                           ;main.c: 227: angrad = atan2(mY,mX);
  3912  0C79  0021               	movlb	1	; select bank1
  3913  0C7A  0863               	movf	(_mY+1)^(0+128),w
  3914  0C7B  0020               	movlb	0	; select bank0
  3915  0C7C  00A9               	movwf	___awtoft@c+1
  3916  0C7D  0021               	movlb	1	; select bank1
  3917  0C7E  0862               	movf	_mY^(0+128),w
  3918  0C7F  0020               	movlb	0	; select bank0
  3919  0C80  00A8               	movwf	___awtoft@c
  3920  0C81  3196  2645  318C   	fcall	___awtoft
  3921  0C84  0020               	movlb	0	; select bank0
  3922  0C85  0828               	movf	?___awtoft,w
  3923  0C86  00E6               	movwf	atan2@y
  3924  0C87  0829               	movf	?___awtoft+1,w
  3925  0C88  00E7               	movwf	atan2@y+1
  3926  0C89  082A               	movf	?___awtoft+2,w
  3927  0C8A  00E8               	movwf	atan2@y+2
  3928  0C8B  0021               	movlb	1	; select bank1
  3929  0C8C  0861               	movf	(_mX+1)^(0+128),w
  3930  0C8D  0020               	movlb	0	; select bank0
  3931  0C8E  00A9               	movwf	___awtoft@c+1
  3932  0C8F  0021               	movlb	1	; select bank1
  3933  0C90  0860               	movf	_mX^(0+128),w
  3934  0C91  0020               	movlb	0	; select bank0
  3935  0C92  00A8               	movwf	___awtoft@c
  3936  0C93  3196  2645  318C   	fcall	___awtoft
  3937  0C96  0020               	movlb	0	; select bank0
  3938  0C97  0828               	movf	?___awtoft,w
  3939  0C98  00E9               	movwf	atan2@x
  3940  0C99  0829               	movf	?___awtoft+1,w
  3941  0C9A  00EA               	movwf	atan2@x+1
  3942  0C9B  082A               	movf	?___awtoft+2,w
  3943  0C9C  00EB               	movwf	atan2@x+2
  3944  0C9D  3180  2034  318C   	fcall	_atan2
  3945  0CA0  0020               	movlb	0	; select bank0
  3946  0CA1  0866               	movf	?_atan2,w
  3947  0CA2  0021               	movlb	1	; select bank1
  3948  0CA3  00BF               	movwf	UpdateMagneticAngle@angrad^(0+128)
  3949  0CA4  0020               	movlb	0	; select bank0
  3950  0CA5  0867               	movf	?_atan2+1,w
  3951  0CA6  0021               	movlb	1	; select bank1
  3952  0CA7  00C0               	movwf	(UpdateMagneticAngle@angrad+1)^(0+128)
  3953  0CA8  0020               	movlb	0	; select bank0
  3954  0CA9  0868               	movf	?_atan2+2,w
  3955  0CAA  0021               	movlb	1	; select bank1
  3956  0CAB  00C1               	movwf	(UpdateMagneticAngle@angrad+2)^(0+128)
  3957                           
  3958                           ;main.c: 228: Acc=((angrad+3.14)*57.32)+Acc;
  3959  0CAC  083F               	movf	UpdateMagneticAngle@angrad^(0+128),w
  3960  0CAD  0020               	movlb	0	; select bank0
  3961  0CAE  00BE               	movwf	___ftadd@f2
  3962  0CAF  0021               	movlb	1	; select bank1
  3963  0CB0  0840               	movf	(UpdateMagneticAngle@angrad+1)^(0+128),w
  3964  0CB1  0020               	movlb	0	; select bank0
  3965  0CB2  00BF               	movwf	___ftadd@f2+1
  3966  0CB3  0021               	movlb	1	; select bank1
  3967  0CB4  0841               	movf	(UpdateMagneticAngle@angrad+2)^(0+128),w
  3968  0CB5  0020               	movlb	0	; select bank0
  3969  0CB6  00C0               	movwf	___ftadd@f2+2
  3970  0CB7  30F6               	movlw	246
  3971  0CB8  00BB               	movwf	___ftadd@f1
  3972  0CB9  3048               	movlw	72
  3973  0CBA  00BC               	movwf	___ftadd@f1+1
  3974  0CBB  3040               	movlw	64
  3975  0CBC  00BD               	movwf	___ftadd@f1+2
  3976  0CBD  3186  26E7  318C   	fcall	___ftadd
  3977  0CC0  0020               	movlb	0	; select bank0
  3978  0CC1  083B               	movf	?___ftadd,w
  3979  0CC2  00CB               	movwf	___ftmul@f2
  3980  0CC3  083C               	movf	?___ftadd+1,w
  3981  0CC4  00CC               	movwf	___ftmul@f2+1
  3982  0CC5  083D               	movf	?___ftadd+2,w
  3983  0CC6  00CD               	movwf	___ftmul@f2+2
  3984  0CC7  3048               	movlw	72
  3985  0CC8  00C8               	movwf	___ftmul@f1
  3986  0CC9  3065               	movlw	101
  3987  0CCA  00C9               	movwf	___ftmul@f1+1
  3988  0CCB  3042               	movlw	66
  3989  0CCC  00CA               	movwf	___ftmul@f1+2
  3990  0CCD  318B  23AD  318C   	fcall	___ftmul
  3991  0CD0  0020               	movlb	0	; select bank0
  3992  0CD1  0848               	movf	?___ftmul,w
  3993  0CD2  0021               	movlb	1	; select bank1
  3994  0CD3  00BC               	movwf	_UpdateMagneticAngle$1159^(0+128)
  3995  0CD4  0020               	movlb	0	; select bank0
  3996  0CD5  0849               	movf	?___ftmul+1,w
  3997  0CD6  0021               	movlb	1	; select bank1
  3998  0CD7  00BD               	movwf	(_UpdateMagneticAngle$1159+1)^(0+128)
  3999  0CD8  0020               	movlb	0	; select bank0
  4000  0CD9  084A               	movf	?___ftmul+2,w
  4001  0CDA  0021               	movlb	1	; select bank1
  4002  0CDB  00BE               	movwf	(_UpdateMagneticAngle$1159+2)^(0+128)
  4003                           
  4004                           ;main.c: 228: Acc=((angrad+3.14)*57.32)+Acc;
  4005  0CDC  083C               	movf	_UpdateMagneticAngle$1159^(0+128),w
  4006  0CDD  0020               	movlb	0	; select bank0
  4007  0CDE  00BE               	movwf	___ftadd@f2
  4008  0CDF  0021               	movlb	1	; select bank1
  4009  0CE0  083D               	movf	(_UpdateMagneticAngle$1159+1)^(0+128),w
  4010  0CE1  0020               	movlb	0	; select bank0
  4011  0CE2  00BF               	movwf	___ftadd@f2+1
  4012  0CE3  0021               	movlb	1	; select bank1
  4013  0CE4  083E               	movf	(_UpdateMagneticAngle$1159+2)^(0+128),w
  4014  0CE5  0020               	movlb	0	; select bank0
  4015  0CE6  00C0               	movwf	___ftadd@f2+2
  4016  0CE7  0021               	movlb	1	; select bank1
  4017  0CE8  0843               	movf	(UpdateMagneticAngle@Acc+1)^(0+128),w
  4018  0CE9  0020               	movlb	0	; select bank0
  4019  0CEA  00A9               	movwf	___awtoft@c+1
  4020  0CEB  0021               	movlb	1	; select bank1
  4021  0CEC  0842               	movf	UpdateMagneticAngle@Acc^(0+128),w
  4022  0CED  0020               	movlb	0	; select bank0
  4023  0CEE  00A8               	movwf	___awtoft@c
  4024  0CEF  3196  2645  318C   	fcall	___awtoft
  4025  0CF2  0020               	movlb	0	; select bank0
  4026  0CF3  0828               	movf	?___awtoft,w
  4027  0CF4  00BB               	movwf	___ftadd@f1
  4028  0CF5  0829               	movf	?___awtoft+1,w
  4029  0CF6  00BC               	movwf	___ftadd@f1+1
  4030  0CF7  082A               	movf	?___awtoft+2,w
  4031  0CF8  00BD               	movwf	___ftadd@f1+2
  4032  0CF9  3186  26E7  318C   	fcall	___ftadd
  4033  0CFC  0020               	movlb	0	; select bank0
  4034  0CFD  083B               	movf	?___ftadd,w
  4035  0CFE  00D8               	movwf	___fttol@f1
  4036  0CFF  083C               	movf	?___ftadd+1,w
  4037  0D00  00D9               	movwf	___fttol@f1+1
  4038  0D01  083D               	movf	?___ftadd+2,w
  4039  0D02  00DA               	movwf	___fttol@f1+2
  4040  0D03  3189  215D  318C   	fcall	___fttol
  4041  0D06  0020               	movlb	0	; select bank0
  4042  0D07  0859               	movf	?___fttol+1,w
  4043  0D08  0021               	movlb	1	; select bank1
  4044  0D09  00C3               	movwf	(UpdateMagneticAngle@Acc+1)^(0+128)
  4045  0D0A  0020               	movlb	0	; select bank0
  4046  0D0B  0858               	movf	?___fttol,w
  4047  0D0C  0021               	movlb	1	; select bank1
  4048  0D0D  00C2               	movwf	UpdateMagneticAngle@Acc^(0+128)
  4049                           
  4050                           ;main.c: 229: MagAngle = (int)(Acc/5);
  4051  0D0E  3005               	movlw	5
  4052  0D0F  0020               	movlb	0	; select bank0
  4053  0D10  00A0               	movwf	___awdiv@divisor
  4054  0D11  3000               	movlw	0
  4055  0D12  00A1               	movwf	___awdiv@divisor+1
  4056  0D13  0021               	movlb	1	; select bank1
  4057  0D14  0843               	movf	(UpdateMagneticAngle@Acc+1)^(0+128),w
  4058  0D15  0020               	movlb	0	; select bank0
  4059  0D16  00A3               	movwf	___awdiv@dividend+1
  4060  0D17  0021               	movlb	1	; select bank1
  4061  0D18  0842               	movf	UpdateMagneticAngle@Acc^(0+128),w
  4062  0D19  0020               	movlb	0	; select bank0
  4063  0D1A  00A2               	movwf	___awdiv@dividend
  4064  0D1B  3197  27AE  318C   	fcall	___awdiv
  4065  0D1E  0020               	movlb	0	; select bank0
  4066  0D1F  0821               	movf	?___awdiv+1,w
  4067  0D20  0021               	movlb	1	; select bank1
  4068  0D21  00D5               	movwf	(_MagAngle+1)^(0+128)
  4069  0D22  0020               	movlb	0	; select bank0
  4070  0D23  0820               	movf	?___awdiv,w
  4071  0D24  0021               	movlb	1	; select bank1
  4072  0D25  00D4               	movwf	_MagAngle^(0+128)
  4073                           
  4074                           ;main.c: 230: _delay((unsigned long)((5)*(16000000/4000.0)));
  4075  0D26  301A               	movlw	26
  4076  0D27  0020               	movlb	0	; select bank0
  4077  0D28  00ED               	movwf	??_UpdateMagneticAngle+1
  4078  0D29  30F8               	movlw	248
  4079  0D2A  00EC               	movwf	??_UpdateMagneticAngle
  4080  0D2B                     u5197:	
  4081  0D2B  0BEC               	decfsz	??_UpdateMagneticAngle,f
  4082  0D2C  2D2B               	goto	u5197
  4083  0D2D  0BED               	decfsz	??_UpdateMagneticAngle+1,f
  4084  0D2E  2D2B               	goto	u5197
  4085  0D2F  0000               	nop
  4086  0D30  3001               	movlw	1
  4087  0D31  0020               	movlb	0	; select bank0
  4088  0D32  00EC               	movwf	??_UpdateMagneticAngle
  4089  0D33  086C               	movf	??_UpdateMagneticAngle,w
  4090  0D34  0021               	movlb	1	; select bank1
  4091  0D35  07C4               	addwf	UpdateMagneticAngle@i^(0+128),f
  4092  0D36  2C6B               	goto	L6
  4093  0D37                     __end_of_UpdateMagneticAngle:	
  4094                           
  4095                           	psect	text7
  4096  0034                     __ptext7:	
  4097 ;; *************** function _atan2 *****************
  4098 ;; Defined at:
  4099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan2.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  y               3   70[BANK0 ] int 
  4102 ;;  x               3   73[BANK0 ] int 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  v               3   25[BANK1 ] int 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  3   70[BANK0 ] int 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4114 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;      Totals:         0       6      15       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;Total ram usage:       21 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    6
  4121 ;; This function calls:
  4122 ;;		___ftadd
  4123 ;;		___ftdiv
  4124 ;;		___ftge
  4125 ;;		___ftneg
  4126 ;;		___ftsub
  4127 ;;		_atan
  4128 ;;		_fabs
  4129 ;; This function is called by:
  4130 ;;		_UpdateMagneticAngle
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function _atan2
  4136  0034                     _atan2:	
  4137                           
  4138                           ;incstack = 0
  4139                           ; Regs used in _atan2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4140  0034  0020               	movlb	0	; select bank0
  4141  0035  086B               	movf	atan2@x+2,w
  4142  0036  046A               	iorwf	atan2@x+1,w
  4143  0037  0469               	iorwf	atan2@x,w
  4144  0038  1D03               	skipz
  4145  0039  286D               	goto	l3334
  4146  003A  0868               	movf	atan2@y+2,w
  4147  003B  0467               	iorwf	atan2@y+1,w
  4148  003C  0466               	iorwf	atan2@y,w
  4149  003D  1D03               	skipz
  4150  003E  284C               	goto	l3322
  4151  003F  3021               	movlw	33
  4152  0040  0021               	movlb	1	; select bank1
  4153  0041  00DC               	movwf	_errno^(0+128)
  4154  0042  3000               	movlw	0
  4155  0043  00DD               	movwf	(_errno^(0+128)+1)
  4156  0044  3000               	movlw	0
  4157  0045  0020               	movlb	0	; select bank0
  4158  0046  00E6               	movwf	?_atan2
  4159  0047  3000               	movlw	0
  4160  0048  00E7               	movwf	?_atan2+1
  4161  0049  3000               	movlw	0
  4162  004A  00E8               	movwf	?_atan2+2
  4163  004B  0008               	return
  4164  004C                     l3322:	
  4165  004C  3000               	movlw	0
  4166  004D  00A0               	movwf	___ftge@ff1
  4167  004E  3000               	movlw	0
  4168  004F  00A1               	movwf	___ftge@ff1+1
  4169  0050  3000               	movlw	0
  4170  0051  00A2               	movwf	___ftge@ff1+2
  4171  0052  0866               	movf	atan2@y,w
  4172  0053  00A3               	movwf	___ftge@ff2
  4173  0054  0867               	movf	atan2@y+1,w
  4174  0055  00A4               	movwf	___ftge@ff2+1
  4175  0056  0868               	movf	atan2@y+2,w
  4176  0057  00A5               	movwf	___ftge@ff2+2
  4177  0058  3197  272D  3180   	fcall	___ftge
  4178  005B  1803               	btfsc	3,0
  4179  005C  2865               	goto	l3330
  4180  005D  3010               	movlw	16
  4181  005E  0020               	movlb	0	; select bank0
  4182  005F  00E6               	movwf	?_atan2
  4183  0060  30C9               	movlw	201
  4184  0061  00E7               	movwf	?_atan2+1
  4185  0062  303F               	movlw	63
  4186  0063  00E8               	movwf	?_atan2+2
  4187  0064  0008               	return
  4188  0065                     l3330:	
  4189  0065  3010               	movlw	16
  4190  0066  0020               	movlb	0	; select bank0
  4191  0067  00E6               	movwf	?_atan2
  4192  0068  30C9               	movlw	201
  4193  0069  00E7               	movwf	?_atan2+1
  4194  006A  30BF               	movlw	191
  4195  006B  00E8               	movwf	?_atan2+2
  4196  006C  0008               	return
  4197  006D                     l3334:	
  4198  006D  0868               	movf	atan2@y+2,w
  4199  006E  0467               	iorwf	atan2@y+1,w
  4200  006F  0466               	iorwf	atan2@y,w
  4201  0070  1D03               	skipz
  4202  0071  2893               	goto	l3348
  4203  0072  3000               	movlw	0
  4204  0073  00A0               	movwf	___ftge@ff1
  4205  0074  3000               	movlw	0
  4206  0075  00A1               	movwf	___ftge@ff1+1
  4207  0076  3000               	movlw	0
  4208  0077  00A2               	movwf	___ftge@ff1+2
  4209  0078  0869               	movf	atan2@x,w
  4210  0079  00A3               	movwf	___ftge@ff2
  4211  007A  086A               	movf	atan2@x+1,w
  4212  007B  00A4               	movwf	___ftge@ff2+1
  4213  007C  086B               	movf	atan2@x+2,w
  4214  007D  00A5               	movwf	___ftge@ff2+2
  4215  007E  3197  272D  3180   	fcall	___ftge
  4216  0081  1803               	btfsc	3,0
  4217  0082  288B               	goto	l3344
  4218  0083  3000               	movlw	0
  4219  0084  0020               	movlb	0	; select bank0
  4220  0085  00E6               	movwf	?_atan2
  4221  0086  3000               	movlw	0
  4222  0087  00E7               	movwf	?_atan2+1
  4223  0088  3000               	movlw	0
  4224  0089  00E8               	movwf	?_atan2+2
  4225  008A  0008               	return
  4226  008B                     l3344:	
  4227  008B  3010               	movlw	16
  4228  008C  0020               	movlb	0	; select bank0
  4229  008D  00E6               	movwf	?_atan2
  4230  008E  3049               	movlw	73
  4231  008F  00E7               	movwf	?_atan2+1
  4232  0090  3040               	movlw	64
  4233  0091  00E8               	movwf	?_atan2+2
  4234  0092  0008               	return
  4235  0093                     l3348:	
  4236  0093  0869               	movf	atan2@x,w
  4237  0094  00BB               	movwf	fabs@d
  4238  0095  086A               	movf	atan2@x+1,w
  4239  0096  00BC               	movwf	fabs@d+1
  4240  0097  086B               	movf	atan2@x+2,w
  4241  0098  00BD               	movwf	fabs@d+2
  4242  0099  3187  27DD  3180   	fcall	_fabs
  4243  009C  0020               	movlb	0	; select bank0
  4244  009D  083B               	movf	?_fabs,w
  4245  009E  0021               	movlb	1	; select bank1
  4246  009F  00AD               	movwf	_atan2$1160^(0+128)
  4247  00A0  0020               	movlb	0	; select bank0
  4248  00A1  083C               	movf	?_fabs+1,w
  4249  00A2  0021               	movlb	1	; select bank1
  4250  00A3  00AE               	movwf	(_atan2$1160+1)^(0+128)
  4251  00A4  0020               	movlb	0	; select bank0
  4252  00A5  083D               	movf	?_fabs+2,w
  4253  00A6  0021               	movlb	1	; select bank1
  4254  00A7  00AF               	movwf	(_atan2$1160+2)^(0+128)
  4255  00A8  0020               	movlb	0	; select bank0
  4256  00A9  0866               	movf	atan2@y,w
  4257  00AA  00BB               	movwf	fabs@d
  4258  00AB  0867               	movf	atan2@y+1,w
  4259  00AC  00BC               	movwf	fabs@d+1
  4260  00AD  0868               	movf	atan2@y+2,w
  4261  00AE  00BD               	movwf	fabs@d+2
  4262  00AF  3187  27DD  3180   	fcall	_fabs
  4263  00B2  0020               	movlb	0	; select bank0
  4264  00B3  083B               	movf	?_fabs,w
  4265  00B4  0021               	movlb	1	; select bank1
  4266  00B5  00B0               	movwf	_atan2$1161^(0+128)
  4267  00B6  0020               	movlb	0	; select bank0
  4268  00B7  083C               	movf	?_fabs+1,w
  4269  00B8  0021               	movlb	1	; select bank1
  4270  00B9  00B1               	movwf	(_atan2$1161+1)^(0+128)
  4271  00BA  0020               	movlb	0	; select bank0
  4272  00BB  083D               	movf	?_fabs+2,w
  4273  00BC  0021               	movlb	1	; select bank1
  4274  00BD  00B2               	movwf	(_atan2$1161+2)^(0+128)
  4275  00BE  082D               	movf	_atan2$1160^(0+128),w
  4276  00BF  0020               	movlb	0	; select bank0
  4277  00C0  00A0               	movwf	___ftge@ff1
  4278  00C1  0021               	movlb	1	; select bank1
  4279  00C2  082E               	movf	(_atan2$1160+1)^(0+128),w
  4280  00C3  0020               	movlb	0	; select bank0
  4281  00C4  00A1               	movwf	___ftge@ff1+1
  4282  00C5  0021               	movlb	1	; select bank1
  4283  00C6  082F               	movf	(_atan2$1160+2)^(0+128),w
  4284  00C7  0020               	movlb	0	; select bank0
  4285  00C8  00A2               	movwf	___ftge@ff1+2
  4286  00C9  0021               	movlb	1	; select bank1
  4287  00CA  0830               	movf	_atan2$1161^(0+128),w
  4288  00CB  0020               	movlb	0	; select bank0
  4289  00CC  00A3               	movwf	___ftge@ff2
  4290  00CD  0021               	movlb	1	; select bank1
  4291  00CE  0831               	movf	(_atan2$1161+1)^(0+128),w
  4292  00CF  0020               	movlb	0	; select bank0
  4293  00D0  00A4               	movwf	___ftge@ff2+1
  4294  00D1  0021               	movlb	1	; select bank1
  4295  00D2  0832               	movf	(_atan2$1161+2)^(0+128),w
  4296  00D3  0020               	movlb	0	; select bank0
  4297  00D4  00A5               	movwf	___ftge@ff2+2
  4298  00D5  3197  272D  3180   	fcall	___ftge
  4299  00D8  1C03               	btfss	3,0
  4300  00D9  2983               	goto	l3366
  4301  00DA  0020               	movlb	0	; select bank0
  4302  00DB  0869               	movf	atan2@x,w
  4303  00DC  00A8               	movwf	___ftdiv@f2
  4304  00DD  086A               	movf	atan2@x+1,w
  4305  00DE  00A9               	movwf	___ftdiv@f2+1
  4306  00DF  086B               	movf	atan2@x+2,w
  4307  00E0  00AA               	movwf	___ftdiv@f2+2
  4308  00E1  0866               	movf	atan2@y,w
  4309  00E2  00AB               	movwf	___ftdiv@f1
  4310  00E3  0867               	movf	atan2@y+1,w
  4311  00E4  00AC               	movwf	___ftdiv@f1+1
  4312  00E5  0868               	movf	atan2@y+2,w
  4313  00E6  00AD               	movwf	___ftdiv@f1+2
  4314  00E7  318B  2304  3180   	fcall	___ftdiv
  4315  00EA  0020               	movlb	0	; select bank0
  4316  00EB  0828               	movf	?___ftdiv,w
  4317  00EC  0021               	movlb	1	; select bank1
  4318  00ED  00B6               	movwf	_atan2$1162^(0+128)
  4319  00EE  0020               	movlb	0	; select bank0
  4320  00EF  0829               	movf	?___ftdiv+1,w
  4321  00F0  0021               	movlb	1	; select bank1
  4322  00F1  00B7               	movwf	(_atan2$1162+1)^(0+128)
  4323  00F2  0020               	movlb	0	; select bank0
  4324  00F3  082A               	movf	?___ftdiv+2,w
  4325  00F4  0021               	movlb	1	; select bank1
  4326  00F5  00B8               	movwf	(_atan2$1162+2)^(0+128)
  4327  00F6  0836               	movf	_atan2$1162^(0+128),w
  4328  00F7  0020               	movlb	0	; select bank0
  4329  00F8  00E2               	movwf	atan@f
  4330  00F9  0021               	movlb	1	; select bank1
  4331  00FA  0837               	movf	(_atan2$1162+1)^(0+128),w
  4332  00FB  0020               	movlb	0	; select bank0
  4333  00FC  00E3               	movwf	atan@f+1
  4334  00FD  0021               	movlb	1	; select bank1
  4335  00FE  0838               	movf	(_atan2$1162+2)^(0+128),w
  4336  00FF  0020               	movlb	0	; select bank0
  4337  0100  00E4               	movwf	atan@f+2
  4338  0101  3185  2577  3180   	fcall	_atan
  4339  0104  0020               	movlb	0	; select bank0
  4340  0105  0862               	movf	?_atan,w
  4341  0106  0021               	movlb	1	; select bank1
  4342  0107  00B9               	movwf	atan2@v^(0+128)
  4343  0108  0020               	movlb	0	; select bank0
  4344  0109  0863               	movf	?_atan+1,w
  4345  010A  0021               	movlb	1	; select bank1
  4346  010B  00BA               	movwf	(atan2@v+1)^(0+128)
  4347  010C  0020               	movlb	0	; select bank0
  4348  010D  0864               	movf	?_atan+2,w
  4349  010E  0021               	movlb	1	; select bank1
  4350  010F  00BB               	movwf	(atan2@v+2)^(0+128)
  4351  0110  0020               	movlb	0	; select bank0
  4352  0111  0869               	movf	atan2@x,w
  4353  0112  00A0               	movwf	___ftge@ff1
  4354  0113  086A               	movf	atan2@x+1,w
  4355  0114  00A1               	movwf	___ftge@ff1+1
  4356  0115  086B               	movf	atan2@x+2,w
  4357  0116  00A2               	movwf	___ftge@ff1+2
  4358  0117  3000               	movlw	0
  4359  0118  00A3               	movwf	___ftge@ff2
  4360  0119  3000               	movlw	0
  4361  011A  00A4               	movwf	___ftge@ff2+1
  4362  011B  3000               	movlw	0
  4363  011C  00A5               	movwf	___ftge@ff2+2
  4364  011D  3197  272D  3180   	fcall	___ftge
  4365  0120  1803               	btfsc	3,0
  4366  0121  2976               	goto	l3362
  4367  0122  0020               	movlb	0	; select bank0
  4368  0123  0866               	movf	atan2@y,w
  4369  0124  00A0               	movwf	___ftge@ff1
  4370  0125  0867               	movf	atan2@y+1,w
  4371  0126  00A1               	movwf	___ftge@ff1+1
  4372  0127  0868               	movf	atan2@y+2,w
  4373  0128  00A2               	movwf	___ftge@ff1+2
  4374  0129  3000               	movlw	0
  4375  012A  00A3               	movwf	___ftge@ff2
  4376  012B  3000               	movlw	0
  4377  012C  00A4               	movwf	___ftge@ff2+1
  4378  012D  3000               	movlw	0
  4379  012E  00A5               	movwf	___ftge@ff2+2
  4380  012F  3197  272D  3180   	fcall	___ftge
  4381  0132  1C03               	btfss	3,0
  4382  0133  2955               	goto	l3360
  4383  0134  3010               	movlw	16
  4384  0135  0020               	movlb	0	; select bank0
  4385  0136  00BB               	movwf	___ftadd@f1
  4386  0137  3049               	movlw	73
  4387  0138  00BC               	movwf	___ftadd@f1+1
  4388  0139  3040               	movlw	64
  4389  013A  00BD               	movwf	___ftadd@f1+2
  4390  013B  0021               	movlb	1	; select bank1
  4391  013C  0839               	movf	atan2@v^(0+128),w
  4392  013D  0020               	movlb	0	; select bank0
  4393  013E  00BE               	movwf	___ftadd@f2
  4394  013F  0021               	movlb	1	; select bank1
  4395  0140  083A               	movf	(atan2@v+1)^(0+128),w
  4396  0141  0020               	movlb	0	; select bank0
  4397  0142  00BF               	movwf	___ftadd@f2+1
  4398  0143  0021               	movlb	1	; select bank1
  4399  0144  083B               	movf	(atan2@v+2)^(0+128),w
  4400  0145  0020               	movlb	0	; select bank0
  4401  0146  00C0               	movwf	___ftadd@f2+2
  4402  0147  3186  26E7  3180   	fcall	___ftadd
  4403  014A  0020               	movlb	0	; select bank0
  4404  014B  083B               	movf	?___ftadd,w
  4405  014C  0021               	movlb	1	; select bank1
  4406  014D  00B9               	movwf	atan2@v^(0+128)
  4407  014E  0020               	movlb	0	; select bank0
  4408  014F  083C               	movf	?___ftadd+1,w
  4409  0150  0021               	movlb	1	; select bank1
  4410  0151  00BA               	movwf	(atan2@v+1)^(0+128)
  4411  0152  0020               	movlb	0	; select bank0
  4412  0153  083D               	movf	?___ftadd+2,w
  4413  0154  2974               	goto	L7
  4414  0155                     l3360:	
  4415  0155  3010               	movlw	16
  4416  0156  0020               	movlb	0	; select bank0
  4417  0157  00C8               	movwf	___ftsub@f2
  4418  0158  3049               	movlw	73
  4419  0159  00C9               	movwf	___ftsub@f2+1
  4420  015A  3040               	movlw	64
  4421  015B  00CA               	movwf	___ftsub@f2+2
  4422  015C  0021               	movlb	1	; select bank1
  4423  015D  0839               	movf	atan2@v^(0+128),w
  4424  015E  0020               	movlb	0	; select bank0
  4425  015F  00CB               	movwf	___ftsub@f1
  4426  0160  0021               	movlb	1	; select bank1
  4427  0161  083A               	movf	(atan2@v+1)^(0+128),w
  4428  0162  0020               	movlb	0	; select bank0
  4429  0163  00CC               	movwf	___ftsub@f1+1
  4430  0164  0021               	movlb	1	; select bank1
  4431  0165  083B               	movf	(atan2@v+2)^(0+128),w
  4432  0166  0020               	movlb	0	; select bank0
  4433  0167  00CD               	movwf	___ftsub@f1+2
  4434  0168  3196  2627         	fcall	___ftsub
  4435  016A  0020               	movlb	0	; select bank0
  4436  016B  0848               	movf	?___ftsub,w
  4437  016C  0021               	movlb	1	; select bank1
  4438  016D  00B9               	movwf	atan2@v^(0+128)
  4439  016E  0020               	movlb	0	; select bank0
  4440  016F  0849               	movf	?___ftsub+1,w
  4441  0170  0021               	movlb	1	; select bank1
  4442  0171  00BA               	movwf	(atan2@v+1)^(0+128)
  4443  0172  0020               	movlb	0	; select bank0
  4444  0173  084A               	movf	?___ftsub+2,w
  4445  0174                     L7:	
  4446  0174  0021               	movlb	1	; select bank1
  4447  0175  00BB               	movwf	(atan2@v+2)^(0+128)
  4448  0176                     l3362:	
  4449  0176  0021               	movlb	1	; select bank1
  4450  0177  0839               	movf	atan2@v^(0+128),w
  4451  0178  0020               	movlb	0	; select bank0
  4452  0179  00E6               	movwf	?_atan2
  4453  017A  0021               	movlb	1	; select bank1
  4454  017B  083A               	movf	(atan2@v+1)^(0+128),w
  4455  017C  0020               	movlb	0	; select bank0
  4456  017D  00E7               	movwf	?_atan2+1
  4457  017E  0021               	movlb	1	; select bank1
  4458  017F  083B               	movf	(atan2@v+2)^(0+128),w
  4459  0180  0020               	movlb	0	; select bank0
  4460  0181  00E8               	movwf	?_atan2+2
  4461  0182  0008               	return
  4462  0183                     l3366:	
  4463  0183  0020               	movlb	0	; select bank0
  4464  0184  0869               	movf	atan2@x,w
  4465  0185  00AB               	movwf	___ftdiv@f1
  4466  0186  086A               	movf	atan2@x+1,w
  4467  0187  00AC               	movwf	___ftdiv@f1+1
  4468  0188  086B               	movf	atan2@x+2,w
  4469  0189  00AD               	movwf	___ftdiv@f1+2
  4470  018A  0866               	movf	atan2@y,w
  4471  018B  00A8               	movwf	___ftdiv@f2
  4472  018C  0867               	movf	atan2@y+1,w
  4473  018D  00A9               	movwf	___ftdiv@f2+1
  4474  018E  0868               	movf	atan2@y+2,w
  4475  018F  00AA               	movwf	___ftdiv@f2+2
  4476  0190  318B  2304  3180   	fcall	___ftdiv
  4477  0193  0020               	movlb	0	; select bank0
  4478  0194  0828               	movf	?___ftdiv,w
  4479  0195  0021               	movlb	1	; select bank1
  4480  0196  00B6               	movwf	_atan2$1162^(0+128)
  4481  0197  0020               	movlb	0	; select bank0
  4482  0198  0829               	movf	?___ftdiv+1,w
  4483  0199  0021               	movlb	1	; select bank1
  4484  019A  00B7               	movwf	(_atan2$1162+1)^(0+128)
  4485  019B  0020               	movlb	0	; select bank0
  4486  019C  082A               	movf	?___ftdiv+2,w
  4487  019D  0021               	movlb	1	; select bank1
  4488  019E  00B8               	movwf	(_atan2$1162+2)^(0+128)
  4489  019F  0836               	movf	_atan2$1162^(0+128),w
  4490  01A0  0020               	movlb	0	; select bank0
  4491  01A1  00E2               	movwf	atan@f
  4492  01A2  0021               	movlb	1	; select bank1
  4493  01A3  0837               	movf	(_atan2$1162+1)^(0+128),w
  4494  01A4  0020               	movlb	0	; select bank0
  4495  01A5  00E3               	movwf	atan@f+1
  4496  01A6  0021               	movlb	1	; select bank1
  4497  01A7  0838               	movf	(_atan2$1162+2)^(0+128),w
  4498  01A8  0020               	movlb	0	; select bank0
  4499  01A9  00E4               	movwf	atan@f+2
  4500  01AA  3185  2577  3180   	fcall	_atan
  4501  01AD  0020               	movlb	0	; select bank0
  4502  01AE  0862               	movf	?_atan,w
  4503  01AF  0021               	movlb	1	; select bank1
  4504  01B0  00B3               	movwf	_atan2$1163^(0+128)
  4505  01B1  0020               	movlb	0	; select bank0
  4506  01B2  0863               	movf	?_atan+1,w
  4507  01B3  0021               	movlb	1	; select bank1
  4508  01B4  00B4               	movwf	(_atan2$1163+1)^(0+128)
  4509  01B5  0020               	movlb	0	; select bank0
  4510  01B6  0864               	movf	?_atan+2,w
  4511  01B7  0021               	movlb	1	; select bank1
  4512  01B8  00B5               	movwf	(_atan2$1163+2)^(0+128)
  4513  01B9  0833               	movf	_atan2$1163^(0+128),w
  4514  01BA  0020               	movlb	0	; select bank0
  4515  01BB  00B8               	movwf	___ftneg@f1
  4516  01BC  0021               	movlb	1	; select bank1
  4517  01BD  0834               	movf	(_atan2$1163+1)^(0+128),w
  4518  01BE  0020               	movlb	0	; select bank0
  4519  01BF  00B9               	movwf	___ftneg@f1+1
  4520  01C0  0021               	movlb	1	; select bank1
  4521  01C1  0835               	movf	(_atan2$1163+2)^(0+128),w
  4522  01C2  0020               	movlb	0	; select bank0
  4523  01C3  00BA               	movwf	___ftneg@f1+2
  4524  01C4  3195  255C  3180   	fcall	___ftneg
  4525  01C7  0020               	movlb	0	; select bank0
  4526  01C8  0838               	movf	?___ftneg,w
  4527  01C9  0021               	movlb	1	; select bank1
  4528  01CA  00B9               	movwf	atan2@v^(0+128)
  4529  01CB  0020               	movlb	0	; select bank0
  4530  01CC  0839               	movf	?___ftneg+1,w
  4531  01CD  0021               	movlb	1	; select bank1
  4532  01CE  00BA               	movwf	(atan2@v+1)^(0+128)
  4533  01CF  0020               	movlb	0	; select bank0
  4534  01D0  083A               	movf	?___ftneg+2,w
  4535  01D1  0021               	movlb	1	; select bank1
  4536  01D2  00BB               	movwf	(atan2@v+2)^(0+128)
  4537  01D3  0020               	movlb	0	; select bank0
  4538  01D4  0866               	movf	atan2@y,w
  4539  01D5  00A0               	movwf	___ftge@ff1
  4540  01D6  0867               	movf	atan2@y+1,w
  4541  01D7  00A1               	movwf	___ftge@ff1+1
  4542  01D8  0868               	movf	atan2@y+2,w
  4543  01D9  00A2               	movwf	___ftge@ff1+2
  4544  01DA  3000               	movlw	0
  4545  01DB  00A3               	movwf	___ftge@ff2
  4546  01DC  3000               	movlw	0
  4547  01DD  00A4               	movwf	___ftge@ff2+1
  4548  01DE  3000               	movlw	0
  4549  01DF  00A5               	movwf	___ftge@ff2+2
  4550  01E0  3197  272D  3180   	fcall	___ftge
  4551  01E3  1803               	btfsc	3,0
  4552  01E4  2A06               	goto	l3376
  4553  01E5  3010               	movlw	16
  4554  01E6  0020               	movlb	0	; select bank0
  4555  01E7  00C8               	movwf	___ftsub@f2
  4556  01E8  30C9               	movlw	201
  4557  01E9  00C9               	movwf	___ftsub@f2+1
  4558  01EA  303F               	movlw	63
  4559  01EB  00CA               	movwf	___ftsub@f2+2
  4560  01EC  0021               	movlb	1	; select bank1
  4561  01ED  0839               	movf	atan2@v^(0+128),w
  4562  01EE  0020               	movlb	0	; select bank0
  4563  01EF  00CB               	movwf	___ftsub@f1
  4564  01F0  0021               	movlb	1	; select bank1
  4565  01F1  083A               	movf	(atan2@v+1)^(0+128),w
  4566  01F2  0020               	movlb	0	; select bank0
  4567  01F3  00CC               	movwf	___ftsub@f1+1
  4568  01F4  0021               	movlb	1	; select bank1
  4569  01F5  083B               	movf	(atan2@v+2)^(0+128),w
  4570  01F6  0020               	movlb	0	; select bank0
  4571  01F7  00CD               	movwf	___ftsub@f1+2
  4572  01F8  3196  2627  3180   	fcall	___ftsub
  4573  01FB  0020               	movlb	0	; select bank0
  4574  01FC  0848               	movf	?___ftsub,w
  4575  01FD  0021               	movlb	1	; select bank1
  4576  01FE  00B9               	movwf	atan2@v^(0+128)
  4577  01FF  0020               	movlb	0	; select bank0
  4578  0200  0849               	movf	?___ftsub+1,w
  4579  0201  0021               	movlb	1	; select bank1
  4580  0202  00BA               	movwf	(atan2@v+1)^(0+128)
  4581  0203  0020               	movlb	0	; select bank0
  4582  0204  084A               	movf	?___ftsub+2,w
  4583  0205  2A25               	goto	L8
  4584  0206                     l3376:	
  4585  0206  3010               	movlw	16
  4586  0207  0020               	movlb	0	; select bank0
  4587  0208  00BB               	movwf	___ftadd@f1
  4588  0209  30C9               	movlw	201
  4589  020A  00BC               	movwf	___ftadd@f1+1
  4590  020B  303F               	movlw	63
  4591  020C  00BD               	movwf	___ftadd@f1+2
  4592  020D  0021               	movlb	1	; select bank1
  4593  020E  0839               	movf	atan2@v^(0+128),w
  4594  020F  0020               	movlb	0	; select bank0
  4595  0210  00BE               	movwf	___ftadd@f2
  4596  0211  0021               	movlb	1	; select bank1
  4597  0212  083A               	movf	(atan2@v+1)^(0+128),w
  4598  0213  0020               	movlb	0	; select bank0
  4599  0214  00BF               	movwf	___ftadd@f2+1
  4600  0215  0021               	movlb	1	; select bank1
  4601  0216  083B               	movf	(atan2@v+2)^(0+128),w
  4602  0217  0020               	movlb	0	; select bank0
  4603  0218  00C0               	movwf	___ftadd@f2+2
  4604  0219  3186  26E7         	fcall	___ftadd
  4605  021B  0020               	movlb	0	; select bank0
  4606  021C  083B               	movf	?___ftadd,w
  4607  021D  0021               	movlb	1	; select bank1
  4608  021E  00B9               	movwf	atan2@v^(0+128)
  4609  021F  0020               	movlb	0	; select bank0
  4610  0220  083C               	movf	?___ftadd+1,w
  4611  0221  0021               	movlb	1	; select bank1
  4612  0222  00BA               	movwf	(atan2@v+1)^(0+128)
  4613  0223  0020               	movlb	0	; select bank0
  4614  0224  083D               	movf	?___ftadd+2,w
  4615  0225                     L8:	
  4616  0225  0021               	movlb	1	; select bank1
  4617  0226  00BB               	movwf	(atan2@v+2)^(0+128)
  4618  0227  0839               	movf	atan2@v^(0+128),w
  4619  0228  0020               	movlb	0	; select bank0
  4620  0229  00E6               	movwf	?_atan2
  4621  022A  0021               	movlb	1	; select bank1
  4622  022B  083A               	movf	(atan2@v+1)^(0+128),w
  4623  022C  0020               	movlb	0	; select bank0
  4624  022D  00E7               	movwf	?_atan2+1
  4625  022E  0021               	movlb	1	; select bank1
  4626  022F  083B               	movf	(atan2@v+2)^(0+128),w
  4627  0230  0020               	movlb	0	; select bank0
  4628  0231  00E8               	movwf	?_atan2+2
  4629  0232  0008               	return
  4630  0233                     __end_of_atan2:	
  4631                           
  4632                           	psect	text8
  4633  0577                     __ptext8:	
  4634 ;; *************** function _atan *****************
  4635 ;; Defined at:
  4636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  f               3   66[BANK0 ] int 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  val             3   10[BANK1 ] int 
  4641 ;;  val_squared     3    7[BANK1 ] int 
  4642 ;;  x               3    3[BANK1 ] int 
  4643 ;;  y               3    0[BANK1 ] int 
  4644 ;;  recip           1    6[BANK1 ] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  3   66[BANK0 ] unsigned char 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4654 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Totals:         0       4      13       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;Total ram usage:       17 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    5
  4661 ;; This function calls:
  4662 ;;		___ftadd
  4663 ;;		___ftdiv
  4664 ;;		___ftge
  4665 ;;		___ftmul
  4666 ;;		___ftneg
  4667 ;;		_eval_poly
  4668 ;;		_fabs
  4669 ;; This function is called by:
  4670 ;;		_atan2
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function _atan
  4676  0577                     _atan:	
  4677                           
  4678                           ;incstack = 0
  4679                           ; Regs used in _atan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4680  0577  0020               	movlb	0	; select bank0
  4681  0578  0862               	movf	atan@f,w
  4682  0579  00BB               	movwf	fabs@d
  4683  057A  0863               	movf	atan@f+1,w
  4684  057B  00BC               	movwf	fabs@d+1
  4685  057C  0864               	movf	atan@f+2,w
  4686  057D  00BD               	movwf	fabs@d+2
  4687  057E  3187  27DD  3185   	fcall	_fabs
  4688  0581  0020               	movlb	0	; select bank0
  4689  0582  083B               	movf	?_fabs,w
  4690  0583  0021               	movlb	1	; select bank1
  4691  0584  00AA               	movwf	atan@val^(0+128)
  4692  0585  0020               	movlb	0	; select bank0
  4693  0586  083C               	movf	?_fabs+1,w
  4694  0587  0021               	movlb	1	; select bank1
  4695  0588  00AB               	movwf	(atan@val+1)^(0+128)
  4696  0589  0020               	movlb	0	; select bank0
  4697  058A  083D               	movf	?_fabs+2,w
  4698  058B  0021               	movlb	1	; select bank1
  4699  058C  00AC               	movwf	(atan@val+2)^(0+128)
  4700  058D  082C               	movf	(atan@val+2)^(0+128),w
  4701  058E  042B               	iorwf	(atan@val+1)^(0+128),w
  4702  058F  042A               	iorwf	atan@val^(0+128),w
  4703  0590  1D03               	skipz
  4704  0591  2D9A               	goto	l3118
  4705  0592  3000               	movlw	0
  4706  0593  0020               	movlb	0	; select bank0
  4707  0594  00E2               	movwf	?_atan
  4708  0595  3000               	movlw	0
  4709  0596  00E3               	movwf	?_atan+1
  4710  0597  3000               	movlw	0
  4711  0598  00E4               	movwf	?_atan+2
  4712  0599  0008               	return
  4713  059A                     l3118:	
  4714  059A  3000               	movlw	0
  4715  059B  0020               	movlb	0	; select bank0
  4716  059C  00A0               	movwf	___ftge@ff1
  4717  059D  3080               	movlw	128
  4718  059E  00A1               	movwf	___ftge@ff1+1
  4719  059F  303F               	movlw	63
  4720  05A0  00A2               	movwf	___ftge@ff1+2
  4721  05A1  0021               	movlb	1	; select bank1
  4722  05A2  082A               	movf	atan@val^(0+128),w
  4723  05A3  0020               	movlb	0	; select bank0
  4724  05A4  00A3               	movwf	___ftge@ff2
  4725  05A5  0021               	movlb	1	; select bank1
  4726  05A6  082B               	movf	(atan@val+1)^(0+128),w
  4727  05A7  0020               	movlb	0	; select bank0
  4728  05A8  00A4               	movwf	___ftge@ff2+1
  4729  05A9  0021               	movlb	1	; select bank1
  4730  05AA  082C               	movf	(atan@val+2)^(0+128),w
  4731  05AB  0020               	movlb	0	; select bank0
  4732  05AC  00A5               	movwf	___ftge@ff2+2
  4733  05AD  3197  272D  3185   	fcall	___ftge
  4734  05B0  1803               	btfsc	3,0
  4735  05B1  2DB4               	goto	u3280
  4736  05B2  3001               	movlw	1
  4737  05B3  2DB5               	goto	u3290
  4738  05B4                     u3280:	
  4739  05B4  3000               	movlw	0
  4740  05B5                     u3290:	
  4741  05B5  0020               	movlb	0	; select bank0
  4742  05B6  00E5               	movwf	??_atan
  4743  05B7  0865               	movf	??_atan,w
  4744  05B8  0021               	movlb	1	; select bank1
  4745  05B9  00A6               	movwf	atan@recip^(0+128)
  4746  05BA  0826               	movf	atan@recip^(0+128),w
  4747  05BB  1903               	btfsc	3,2
  4748  05BC  2DDD               	goto	l1101
  4749  05BD  082A               	movf	atan@val^(0+128),w
  4750  05BE  0020               	movlb	0	; select bank0
  4751  05BF  00A8               	movwf	___ftdiv@f2
  4752  05C0  0021               	movlb	1	; select bank1
  4753  05C1  082B               	movf	(atan@val+1)^(0+128),w
  4754  05C2  0020               	movlb	0	; select bank0
  4755  05C3  00A9               	movwf	___ftdiv@f2+1
  4756  05C4  0021               	movlb	1	; select bank1
  4757  05C5  082C               	movf	(atan@val+2)^(0+128),w
  4758  05C6  0020               	movlb	0	; select bank0
  4759  05C7  00AA               	movwf	___ftdiv@f2+2
  4760  05C8  3000               	movlw	0
  4761  05C9  00AB               	movwf	___ftdiv@f1
  4762  05CA  3080               	movlw	128
  4763  05CB  00AC               	movwf	___ftdiv@f1+1
  4764  05CC  303F               	movlw	63
  4765  05CD  00AD               	movwf	___ftdiv@f1+2
  4766  05CE  318B  2304  3185   	fcall	___ftdiv
  4767  05D1  0020               	movlb	0	; select bank0
  4768  05D2  0828               	movf	?___ftdiv,w
  4769  05D3  0021               	movlb	1	; select bank1
  4770  05D4  00AA               	movwf	atan@val^(0+128)
  4771  05D5  0020               	movlb	0	; select bank0
  4772  05D6  0829               	movf	?___ftdiv+1,w
  4773  05D7  0021               	movlb	1	; select bank1
  4774  05D8  00AB               	movwf	(atan@val+1)^(0+128)
  4775  05D9  0020               	movlb	0	; select bank0
  4776  05DA  082A               	movf	?___ftdiv+2,w
  4777  05DB  0021               	movlb	1	; select bank1
  4778  05DC  00AC               	movwf	(atan@val+2)^(0+128)
  4779  05DD                     l1101:	
  4780  05DD  082A               	movf	atan@val^(0+128),w
  4781  05DE  0020               	movlb	0	; select bank0
  4782  05DF  00C8               	movwf	___ftmul@f1
  4783  05E0  0021               	movlb	1	; select bank1
  4784  05E1  082B               	movf	(atan@val+1)^(0+128),w
  4785  05E2  0020               	movlb	0	; select bank0
  4786  05E3  00C9               	movwf	___ftmul@f1+1
  4787  05E4  0021               	movlb	1	; select bank1
  4788  05E5  082C               	movf	(atan@val+2)^(0+128),w
  4789  05E6  0020               	movlb	0	; select bank0
  4790  05E7  00CA               	movwf	___ftmul@f1+2
  4791  05E8  0021               	movlb	1	; select bank1
  4792  05E9  082A               	movf	atan@val^(0+128),w
  4793  05EA  0020               	movlb	0	; select bank0
  4794  05EB  00CB               	movwf	___ftmul@f2
  4795  05EC  0021               	movlb	1	; select bank1
  4796  05ED  082B               	movf	(atan@val+1)^(0+128),w
  4797  05EE  0020               	movlb	0	; select bank0
  4798  05EF  00CC               	movwf	___ftmul@f2+1
  4799  05F0  0021               	movlb	1	; select bank1
  4800  05F1  082C               	movf	(atan@val+2)^(0+128),w
  4801  05F2  0020               	movlb	0	; select bank0
  4802  05F3  00CD               	movwf	___ftmul@f2+2
  4803  05F4  318B  23AD  3185   	fcall	___ftmul
  4804  05F7  0020               	movlb	0	; select bank0
  4805  05F8  0848               	movf	?___ftmul,w
  4806  05F9  0021               	movlb	1	; select bank1
  4807  05FA  00A7               	movwf	atan@val_squared^(0+128)
  4808  05FB  0020               	movlb	0	; select bank0
  4809  05FC  0849               	movf	?___ftmul+1,w
  4810  05FD  0021               	movlb	1	; select bank1
  4811  05FE  00A8               	movwf	(atan@val_squared+1)^(0+128)
  4812  05FF  0020               	movlb	0	; select bank0
  4813  0600  084A               	movf	?___ftmul+2,w
  4814  0601  0021               	movlb	1	; select bank1
  4815  0602  00A9               	movwf	(atan@val_squared+2)^(0+128)
  4816  0603  0827               	movf	atan@val_squared^(0+128),w
  4817  0604  0020               	movlb	0	; select bank0
  4818  0605  00D8               	movwf	eval_poly@x
  4819  0606  0021               	movlb	1	; select bank1
  4820  0607  0828               	movf	(atan@val_squared+1)^(0+128),w
  4821  0608  0020               	movlb	0	; select bank0
  4822  0609  00D9               	movwf	eval_poly@x+1
  4823  060A  0021               	movlb	1	; select bank1
  4824  060B  0829               	movf	(atan@val_squared+2)^(0+128),w
  4825  060C  0020               	movlb	0	; select bank0
  4826  060D  00DA               	movwf	eval_poly@x+2
  4827  060E  3034               	movlw	low (atan@coeff_b| (0+32768))
  4828  060F  00DB               	movwf	eval_poly@d
  4829  0610  3085               	movlw	high (atan@coeff_b| (0+32768))
  4830  0611  00DC               	movwf	eval_poly@d+1
  4831  0612  3004               	movlw	4
  4832  0613  00DD               	movwf	eval_poly@n
  4833  0614  3000               	movlw	0
  4834  0615  00DE               	movwf	eval_poly@n+1
  4835  0616  3188  2021  3185   	fcall	_eval_poly
  4836  0619  0020               	movlb	0	; select bank0
  4837  061A  0858               	movf	?_eval_poly,w
  4838  061B  0021               	movlb	1	; select bank1
  4839  061C  00A0               	movwf	atan@y^(0+128)
  4840  061D  0020               	movlb	0	; select bank0
  4841  061E  0859               	movf	?_eval_poly+1,w
  4842  061F  0021               	movlb	1	; select bank1
  4843  0620  00A1               	movwf	(atan@y+1)^(0+128)
  4844  0621  0020               	movlb	0	; select bank0
  4845  0622  085A               	movf	?_eval_poly+2,w
  4846  0623  0021               	movlb	1	; select bank1
  4847  0624  00A2               	movwf	(atan@y+2)^(0+128)
  4848  0625  0827               	movf	atan@val_squared^(0+128),w
  4849  0626  0020               	movlb	0	; select bank0
  4850  0627  00D8               	movwf	eval_poly@x
  4851  0628  0021               	movlb	1	; select bank1
  4852  0629  0828               	movf	(atan@val_squared+1)^(0+128),w
  4853  062A  0020               	movlb	0	; select bank0
  4854  062B  00D9               	movwf	eval_poly@x+1
  4855  062C  0021               	movlb	1	; select bank1
  4856  062D  0829               	movf	(atan@val_squared+2)^(0+128),w
  4857  062E  0020               	movlb	0	; select bank0
  4858  062F  00DA               	movwf	eval_poly@x+2
  4859  0630  3022               	movlw	low (atan@coeff_a| (0+32768))
  4860  0631  00DB               	movwf	eval_poly@d
  4861  0632  3085               	movlw	high (atan@coeff_a| (0+32768))
  4862  0633  00DC               	movwf	eval_poly@d+1
  4863  0634  3005               	movlw	5
  4864  0635  00DD               	movwf	eval_poly@n
  4865  0636  3000               	movlw	0
  4866  0637  00DE               	movwf	eval_poly@n+1
  4867  0638  3188  2021  3185   	fcall	_eval_poly
  4868  063B  0020               	movlb	0	; select bank0
  4869  063C  0858               	movf	?_eval_poly,w
  4870  063D  0021               	movlb	1	; select bank1
  4871  063E  00A3               	movwf	atan@x^(0+128)
  4872  063F  0020               	movlb	0	; select bank0
  4873  0640  0859               	movf	?_eval_poly+1,w
  4874  0641  0021               	movlb	1	; select bank1
  4875  0642  00A4               	movwf	(atan@x+1)^(0+128)
  4876  0643  0020               	movlb	0	; select bank0
  4877  0644  085A               	movf	?_eval_poly+2,w
  4878  0645  0021               	movlb	1	; select bank1
  4879  0646  00A5               	movwf	(atan@x+2)^(0+128)
  4880  0647  0823               	movf	atan@x^(0+128),w
  4881  0648  0020               	movlb	0	; select bank0
  4882  0649  00AB               	movwf	___ftdiv@f1
  4883  064A  0021               	movlb	1	; select bank1
  4884  064B  0824               	movf	(atan@x+1)^(0+128),w
  4885  064C  0020               	movlb	0	; select bank0
  4886  064D  00AC               	movwf	___ftdiv@f1+1
  4887  064E  0021               	movlb	1	; select bank1
  4888  064F  0825               	movf	(atan@x+2)^(0+128),w
  4889  0650  0020               	movlb	0	; select bank0
  4890  0651  00AD               	movwf	___ftdiv@f1+2
  4891  0652  0021               	movlb	1	; select bank1
  4892  0653  0820               	movf	atan@y^(0+128),w
  4893  0654  0020               	movlb	0	; select bank0
  4894  0655  00A8               	movwf	___ftdiv@f2
  4895  0656  0021               	movlb	1	; select bank1
  4896  0657  0821               	movf	(atan@y+1)^(0+128),w
  4897  0658  0020               	movlb	0	; select bank0
  4898  0659  00A9               	movwf	___ftdiv@f2+1
  4899  065A  0021               	movlb	1	; select bank1
  4900  065B  0822               	movf	(atan@y+2)^(0+128),w
  4901  065C  0020               	movlb	0	; select bank0
  4902  065D  00AA               	movwf	___ftdiv@f2+2
  4903  065E  318B  2304  3185   	fcall	___ftdiv
  4904  0661  0020               	movlb	0	; select bank0
  4905  0662  0828               	movf	?___ftdiv,w
  4906  0663  00C8               	movwf	___ftmul@f1
  4907  0664  0829               	movf	?___ftdiv+1,w
  4908  0665  00C9               	movwf	___ftmul@f1+1
  4909  0666  082A               	movf	?___ftdiv+2,w
  4910  0667  00CA               	movwf	___ftmul@f1+2
  4911  0668  0021               	movlb	1	; select bank1
  4912  0669  082A               	movf	atan@val^(0+128),w
  4913  066A  0020               	movlb	0	; select bank0
  4914  066B  00CB               	movwf	___ftmul@f2
  4915  066C  0021               	movlb	1	; select bank1
  4916  066D  082B               	movf	(atan@val+1)^(0+128),w
  4917  066E  0020               	movlb	0	; select bank0
  4918  066F  00CC               	movwf	___ftmul@f2+1
  4919  0670  0021               	movlb	1	; select bank1
  4920  0671  082C               	movf	(atan@val+2)^(0+128),w
  4921  0672  0020               	movlb	0	; select bank0
  4922  0673  00CD               	movwf	___ftmul@f2+2
  4923  0674  318B  23AD  3185   	fcall	___ftmul
  4924  0677  0020               	movlb	0	; select bank0
  4925  0678  0848               	movf	?___ftmul,w
  4926  0679  0021               	movlb	1	; select bank1
  4927  067A  00AA               	movwf	atan@val^(0+128)
  4928  067B  0020               	movlb	0	; select bank0
  4929  067C  0849               	movf	?___ftmul+1,w
  4930  067D  0021               	movlb	1	; select bank1
  4931  067E  00AB               	movwf	(atan@val+1)^(0+128)
  4932  067F  0020               	movlb	0	; select bank0
  4933  0680  084A               	movf	?___ftmul+2,w
  4934  0681  0021               	movlb	1	; select bank1
  4935  0682  00AC               	movwf	(atan@val+2)^(0+128)
  4936  0683  0826               	movf	atan@recip^(0+128),w
  4937  0684  1903               	btfsc	3,2
  4938  0685  2EB2               	goto	l1102
  4939  0686  3010               	movlw	16
  4940  0687  0020               	movlb	0	; select bank0
  4941  0688  00BB               	movwf	___ftadd@f1
  4942  0689  30C9               	movlw	201
  4943  068A  00BC               	movwf	___ftadd@f1+1
  4944  068B  303F               	movlw	63
  4945  068C  00BD               	movwf	___ftadd@f1+2
  4946  068D  0021               	movlb	1	; select bank1
  4947  068E  082A               	movf	atan@val^(0+128),w
  4948  068F  0020               	movlb	0	; select bank0
  4949  0690  00B8               	movwf	___ftneg@f1
  4950  0691  0021               	movlb	1	; select bank1
  4951  0692  082B               	movf	(atan@val+1)^(0+128),w
  4952  0693  0020               	movlb	0	; select bank0
  4953  0694  00B9               	movwf	___ftneg@f1+1
  4954  0695  0021               	movlb	1	; select bank1
  4955  0696  082C               	movf	(atan@val+2)^(0+128),w
  4956  0697  0020               	movlb	0	; select bank0
  4957  0698  00BA               	movwf	___ftneg@f1+2
  4958  0699  3195  255C  3185   	fcall	___ftneg
  4959  069C  0020               	movlb	0	; select bank0
  4960  069D  0838               	movf	?___ftneg,w
  4961  069E  00BE               	movwf	___ftadd@f2
  4962  069F  0839               	movf	?___ftneg+1,w
  4963  06A0  00BF               	movwf	___ftadd@f2+1
  4964  06A1  083A               	movf	?___ftneg+2,w
  4965  06A2  00C0               	movwf	___ftadd@f2+2
  4966  06A3  3186  26E7  3185   	fcall	___ftadd
  4967  06A6  0020               	movlb	0	; select bank0
  4968  06A7  083B               	movf	?___ftadd,w
  4969  06A8  0021               	movlb	1	; select bank1
  4970  06A9  00AA               	movwf	atan@val^(0+128)
  4971  06AA  0020               	movlb	0	; select bank0
  4972  06AB  083C               	movf	?___ftadd+1,w
  4973  06AC  0021               	movlb	1	; select bank1
  4974  06AD  00AB               	movwf	(atan@val+1)^(0+128)
  4975  06AE  0020               	movlb	0	; select bank0
  4976  06AF  083D               	movf	?___ftadd+2,w
  4977  06B0  0021               	movlb	1	; select bank1
  4978  06B1  00AC               	movwf	(atan@val+2)^(0+128)
  4979  06B2                     l1102:	
  4980  06B2  0020               	movlb	0	; select bank0
  4981  06B3  0862               	movf	atan@f,w
  4982  06B4  00A0               	movwf	___ftge@ff1
  4983  06B5  0863               	movf	atan@f+1,w
  4984  06B6  00A1               	movwf	___ftge@ff1+1
  4985  06B7  0864               	movf	atan@f+2,w
  4986  06B8  00A2               	movwf	___ftge@ff1+2
  4987  06B9  3000               	movlw	0
  4988  06BA  00A3               	movwf	___ftge@ff2
  4989  06BB  3000               	movlw	0
  4990  06BC  00A4               	movwf	___ftge@ff2+1
  4991  06BD  3000               	movlw	0
  4992  06BE  00A5               	movwf	___ftge@ff2+2
  4993  06BF  3197  272D  3185   	fcall	___ftge
  4994  06C2  1C03               	btfss	3,0
  4995  06C3  2ED1               	goto	l3132
  4996  06C4  0021               	movlb	1	; select bank1
  4997  06C5  082A               	movf	atan@val^(0+128),w
  4998  06C6  0020               	movlb	0	; select bank0
  4999  06C7  00E2               	movwf	?_atan
  5000  06C8  0021               	movlb	1	; select bank1
  5001  06C9  082B               	movf	(atan@val+1)^(0+128),w
  5002  06CA  0020               	movlb	0	; select bank0
  5003  06CB  00E3               	movwf	?_atan+1
  5004  06CC  0021               	movlb	1	; select bank1
  5005  06CD  082C               	movf	(atan@val+2)^(0+128),w
  5006  06CE  0020               	movlb	0	; select bank0
  5007  06CF  00E4               	movwf	?_atan+2
  5008  06D0  0008               	return
  5009  06D1                     l3132:	
  5010  06D1  0021               	movlb	1	; select bank1
  5011  06D2  082A               	movf	atan@val^(0+128),w
  5012  06D3  0020               	movlb	0	; select bank0
  5013  06D4  00B8               	movwf	___ftneg@f1
  5014  06D5  0021               	movlb	1	; select bank1
  5015  06D6  082B               	movf	(atan@val+1)^(0+128),w
  5016  06D7  0020               	movlb	0	; select bank0
  5017  06D8  00B9               	movwf	___ftneg@f1+1
  5018  06D9  0021               	movlb	1	; select bank1
  5019  06DA  082C               	movf	(atan@val+2)^(0+128),w
  5020  06DB  0020               	movlb	0	; select bank0
  5021  06DC  00BA               	movwf	___ftneg@f1+2
  5022  06DD  3195  255C         	fcall	___ftneg
  5023  06DF  0020               	movlb	0	; select bank0
  5024  06E0  0838               	movf	?___ftneg,w
  5025  06E1  00E2               	movwf	?_atan
  5026  06E2  0839               	movf	?___ftneg+1,w
  5027  06E3  00E3               	movwf	?_atan+1
  5028  06E4  083A               	movf	?___ftneg+2,w
  5029  06E5  00E4               	movwf	?_atan+2
  5030  06E6  0008               	return
  5031  06E7                     __end_of_atan:	
  5032                           
  5033                           	psect	text9
  5034  07DD                     __ptext9:	
  5035 ;; *************** function _fabs *****************
  5036 ;; Defined at:
  5037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  d               3   27[BANK0 ] unsigned char 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  3   27[BANK0 ] unsigned char 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0, pclath, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5051 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;Total ram usage:        3 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    3
  5058 ;; This function calls:
  5059 ;;		___ftge
  5060 ;;		___ftneg
  5061 ;; This function is called by:
  5062 ;;		_atan2
  5063 ;;		_atan
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function _fabs
  5069  07DD                     _fabs:	
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
  5073  07DD  0020               	movlb	0	; select bank0
  5074  07DE  083B               	movf	fabs@d,w
  5075  07DF  00A0               	movwf	___ftge@ff1
  5076  07E0  083C               	movf	fabs@d+1,w
  5077  07E1  00A1               	movwf	___ftge@ff1+1
  5078  07E2  083D               	movf	fabs@d+2,w
  5079  07E3  00A2               	movwf	___ftge@ff1+2
  5080  07E4  3000               	movlw	0
  5081  07E5  00A3               	movwf	___ftge@ff2
  5082  07E6  3000               	movlw	0
  5083  07E7  00A4               	movwf	___ftge@ff2+1
  5084  07E8  3000               	movlw	0
  5085  07E9  00A5               	movwf	___ftge@ff2+2
  5086  07EA  3197  272D  3187   	fcall	___ftge
  5087  07ED  1803               	btfsc	3,0
  5088  07EE  0008               	return
  5089  07EF  0020               	movlb	0	; select bank0
  5090  07F0  083B               	movf	fabs@d,w
  5091  07F1  00B8               	movwf	___ftneg@f1
  5092  07F2  083C               	movf	fabs@d+1,w
  5093  07F3  00B9               	movwf	___ftneg@f1+1
  5094  07F4  083D               	movf	fabs@d+2,w
  5095  07F5  00BA               	movwf	___ftneg@f1+2
  5096  07F6  3195  255C         	fcall	___ftneg
  5097  07F8  0020               	movlb	0	; select bank0
  5098  07F9  0838               	movf	?___ftneg,w
  5099  07FA  00BB               	movwf	?_fabs
  5100  07FB  0839               	movf	?___ftneg+1,w
  5101  07FC  00BC               	movwf	?_fabs+1
  5102  07FD  083A               	movf	?___ftneg+2,w
  5103  07FE  00BD               	movwf	?_fabs+2
  5104  07FF  0008               	return
  5105  0800                     __end_of_fabs:	
  5106                           
  5107                           	psect	text10
  5108  155C                     __ptext10:	
  5109 ;; *************** function ___ftneg *****************
  5110 ;; Defined at:
  5111 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  f1              3   24[BANK0 ] float 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  3   24[BANK0 ] float 
  5118 ;; Registers used:
  5119 ;;		wreg
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5125 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;Total ram usage:        3 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_atan2
  5136 ;;		_fabs
  5137 ;;		_atan
  5138 ;;		_Calib
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function ___ftneg
  5144  155C                     ___ftneg:	
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in ___ftneg: [wreg]
  5148  155C  0020               	movlb	0	; select bank0
  5149  155D  083A               	movf	___ftneg@f1+2,w
  5150  155E  0439               	iorwf	___ftneg@f1+1,w
  5151  155F  0438               	iorwf	___ftneg@f1,w
  5152  1560  1903               	skipnz
  5153  1561  0008               	return
  5154  1562  3080               	movlw	128
  5155  1563  06BA               	xorwf	___ftneg@f1+2,f
  5156  1564  0008               	return
  5157  1565                     __end_of___ftneg:	
  5158                           
  5159                           	psect	text11
  5160  172D                     __ptext11:	
  5161 ;; *************** function ___ftge *****************
  5162 ;; Defined at:
  5163 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  ff1             3    0[BANK0 ] float 
  5166 ;;  ff2             3    3[BANK0 ] float 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;		None               void
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5178 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5181 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;Total ram usage:        9 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    2
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_atan2
  5189 ;;		_fabs
  5190 ;;		_atan
  5191 ;;		_Calib
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function ___ftge
  5197  172D                     ___ftge:	
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5201  172D  0020               	movlb	0	; select bank0
  5202  172E  1FA2               	btfss	___ftge@ff1+2,7
  5203  172F  2F44               	goto	l2936
  5204  1730  0920               	comf	___ftge@ff1,w
  5205  1731  00A6               	movwf	??___ftge
  5206  1732  0921               	comf	___ftge@ff1+1,w
  5207  1733  00A7               	movwf	??___ftge+1
  5208  1734  0922               	comf	___ftge@ff1+2,w
  5209  1735  00A8               	movwf	??___ftge+2
  5210  1736  0AA6               	incf	??___ftge,f
  5211  1737  1903               	skipnz
  5212  1738  0AA7               	incf	??___ftge+1,f
  5213  1739  1903               	skipnz
  5214  173A  0AA8               	incf	??___ftge+2,f
  5215  173B  3000               	movlw	0
  5216  173C  0726               	addwf	??___ftge,w
  5217  173D  00A0               	movwf	___ftge@ff1
  5218  173E  3000               	movlw	0
  5219  173F  3D27               	addwfc	??___ftge+1,w
  5220  1740  00A1               	movwf	___ftge@ff1+1
  5221  1741  3080               	movlw	128
  5222  1742  3D28               	addwfc	??___ftge+2,w
  5223  1743  00A2               	movwf	___ftge@ff1+2
  5224  1744                     l2936:	
  5225  1744  1FA5               	btfss	___ftge@ff2+2,7
  5226  1745  2F5A               	goto	l2940
  5227  1746  0923               	comf	___ftge@ff2,w
  5228  1747  00A6               	movwf	??___ftge
  5229  1748  0924               	comf	___ftge@ff2+1,w
  5230  1749  00A7               	movwf	??___ftge+1
  5231  174A  0925               	comf	___ftge@ff2+2,w
  5232  174B  00A8               	movwf	??___ftge+2
  5233  174C  0AA6               	incf	??___ftge,f
  5234  174D  1903               	skipnz
  5235  174E  0AA7               	incf	??___ftge+1,f
  5236  174F  1903               	skipnz
  5237  1750  0AA8               	incf	??___ftge+2,f
  5238  1751  3000               	movlw	0
  5239  1752  0726               	addwf	??___ftge,w
  5240  1753  00A3               	movwf	___ftge@ff2
  5241  1754  3000               	movlw	0
  5242  1755  3D27               	addwfc	??___ftge+1,w
  5243  1756  00A4               	movwf	___ftge@ff2+1
  5244  1757  3080               	movlw	128
  5245  1758  3D28               	addwfc	??___ftge+2,w
  5246  1759  00A5               	movwf	___ftge@ff2+2
  5247  175A                     l2940:	
  5248  175A  3080               	movlw	128
  5249  175B  06A2               	xorwf	___ftge@ff1+2,f
  5250  175C  3080               	movlw	128
  5251  175D  06A5               	xorwf	___ftge@ff2+2,f
  5252  175E  0825               	movf	___ftge@ff2+2,w
  5253  175F  0222               	subwf	___ftge@ff1+2,w
  5254  1760  1D03               	skipz
  5255  1761  0008               	return
  5256  1762  0824               	movf	___ftge@ff2+1,w
  5257  1763  0221               	subwf	___ftge@ff1+1,w
  5258  1764  1D03               	skipz
  5259  1765  0008               	return
  5260  1766  0823               	movf	___ftge@ff2,w
  5261  1767  0220               	subwf	___ftge@ff1,w
  5262  1768  0008               	return
  5263  1769                     __end_of___ftge:	
  5264                           
  5265                           	psect	text12
  5266  0821                     __ptext12:	
  5267 ;; *************** function _eval_poly *****************
  5268 ;; Defined at:
  5269 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  x               3   56[BANK0 ] float 
  5272 ;;  d               2   59[BANK0 ] PTR const 
  5273 ;;		 -> atan@coeff_a(18), atan@coeff_b(15), 
  5274 ;;  n               2   61[BANK0 ] int 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  res             3   63[BANK0 ] int 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  3   56[BANK0 ] int 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5286 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;Total ram usage:       10 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    4
  5293 ;; This function calls:
  5294 ;;		___ftadd
  5295 ;;		___ftmul
  5296 ;;		___wmul
  5297 ;; This function is called by:
  5298 ;;		_atan
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _eval_poly
  5304  0821                     _eval_poly:	
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5308  0821  0020               	movlb	0	; select bank0
  5309  0822  085E               	movf	eval_poly@n+1,w
  5310  0823  00A1               	movwf	___wmul@multiplier+1
  5311  0824  085D               	movf	eval_poly@n,w
  5312  0825  00A0               	movwf	___wmul@multiplier
  5313  0826  3003               	movlw	3
  5314  0827  00A2               	movwf	___wmul@multiplicand
  5315  0828  3000               	movlw	0
  5316  0829  00A3               	movwf	___wmul@multiplicand+1
  5317  082A  3196  260B  3188   	fcall	___wmul
  5318  082D  0020               	movlb	0	; select bank0
  5319  082E  085B               	movf	eval_poly@d,w
  5320  082F  0720               	addwf	?___wmul,w
  5321  0830  0084               	movwf	4
  5322  0831  085C               	movf	eval_poly@d+1,w
  5323  0832  3D21               	addwfc	?___wmul+1,w
  5324  0833  0085               	movwf	5
  5325  0834  3F00               	moviw [0]fsr0
  5326  0835  00DF               	movwf	eval_poly@res
  5327  0836  3F01               	moviw [1]fsr0
  5328  0837  00E0               	movwf	eval_poly@res+1
  5329  0838  3F02               	moviw [2]fsr0
  5330  0839                     L10:	
  5331  0839  00E1               	movwf	eval_poly@res+2
  5332  083A  085D               	movf	eval_poly@n,w
  5333  083B  045E               	iorwf	eval_poly@n+1,w
  5334  083C  1903               	btfsc	3,2
  5335  083D  287A               	goto	l3070
  5336  083E  30FF               	movlw	255
  5337  083F  07DD               	addwf	eval_poly@n,f
  5338  0840  30FF               	movlw	255
  5339  0841  3DDE               	addwfc	eval_poly@n+1,f
  5340  0842  085E               	movf	eval_poly@n+1,w
  5341  0843  00A1               	movwf	___wmul@multiplier+1
  5342  0844  085D               	movf	eval_poly@n,w
  5343  0845  00A0               	movwf	___wmul@multiplier
  5344  0846  3003               	movlw	3
  5345  0847  00A2               	movwf	___wmul@multiplicand
  5346  0848  3000               	movlw	0
  5347  0849  00A3               	movwf	___wmul@multiplicand+1
  5348  084A  3196  260B  3188   	fcall	___wmul
  5349  084D  0020               	movlb	0	; select bank0
  5350  084E  085B               	movf	eval_poly@d,w
  5351  084F  0720               	addwf	?___wmul,w
  5352  0850  0084               	movwf	4
  5353  0851  085C               	movf	eval_poly@d+1,w
  5354  0852  3D21               	addwfc	?___wmul+1,w
  5355  0853  0085               	movwf	5
  5356  0854  3F00               	moviw [0]fsr0
  5357  0855  00BB               	movwf	___ftadd@f1
  5358  0856  3F01               	moviw [1]fsr0
  5359  0857  00BC               	movwf	___ftadd@f1+1
  5360  0858  3F02               	moviw [2]fsr0
  5361  0859  00BD               	movwf	___ftadd@f1+2
  5362  085A  085F               	movf	eval_poly@res,w
  5363  085B  00C8               	movwf	___ftmul@f1
  5364  085C  0860               	movf	eval_poly@res+1,w
  5365  085D  00C9               	movwf	___ftmul@f1+1
  5366  085E  0861               	movf	eval_poly@res+2,w
  5367  085F  00CA               	movwf	___ftmul@f1+2
  5368  0860  0858               	movf	eval_poly@x,w
  5369  0861  00CB               	movwf	___ftmul@f2
  5370  0862  0859               	movf	eval_poly@x+1,w
  5371  0863  00CC               	movwf	___ftmul@f2+1
  5372  0864  085A               	movf	eval_poly@x+2,w
  5373  0865  00CD               	movwf	___ftmul@f2+2
  5374  0866  318B  23AD  3188   	fcall	___ftmul
  5375  0869  0020               	movlb	0	; select bank0
  5376  086A  0848               	movf	?___ftmul,w
  5377  086B  00BE               	movwf	___ftadd@f2
  5378  086C  0849               	movf	?___ftmul+1,w
  5379  086D  00BF               	movwf	___ftadd@f2+1
  5380  086E  084A               	movf	?___ftmul+2,w
  5381  086F  00C0               	movwf	___ftadd@f2+2
  5382  0870  3186  26E7  3188   	fcall	___ftadd
  5383  0873  0020               	movlb	0	; select bank0
  5384  0874  083B               	movf	?___ftadd,w
  5385  0875  00DF               	movwf	eval_poly@res
  5386  0876  083C               	movf	?___ftadd+1,w
  5387  0877  00E0               	movwf	eval_poly@res+1
  5388  0878  083D               	movf	?___ftadd+2,w
  5389  0879  2839               	goto	L10
  5390  087A                     l3070:	
  5391  087A  085F               	movf	eval_poly@res,w
  5392  087B  00D8               	movwf	?_eval_poly
  5393  087C  0860               	movf	eval_poly@res+1,w
  5394  087D  00D9               	movwf	?_eval_poly+1
  5395  087E  0861               	movf	eval_poly@res+2,w
  5396  087F  00DA               	movwf	?_eval_poly+2
  5397  0880  0008               	return
  5398  0881                     __end_of_eval_poly:	
  5399                           
  5400                           	psect	text13
  5401  0BAD                     __ptext13:	
  5402 ;; *************** function ___ftmul *****************
  5403 ;; Defined at:
  5404 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  f1              3   40[BANK0 ] float 
  5407 ;;  f2              3   43[BANK0 ] float 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
  5410 ;;  sign            1   55[BANK0 ] unsigned char 
  5411 ;;  cntr            1   54[BANK0 ] unsigned char 
  5412 ;;  exp             1   50[BANK0 ] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  3   40[BANK0 ] float 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0, pclath, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5422 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;Total ram usage:       16 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    3
  5429 ;; This function calls:
  5430 ;;		___ftpack
  5431 ;; This function is called by:
  5432 ;;		_UpdateMagneticAngle
  5433 ;;		_atan
  5434 ;;		_eval_poly
  5435 ;;		_Calib
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           
  5440                           ;psect for function ___ftmul
  5441  0BAD                     ___ftmul:	
  5442                           
  5443                           ;incstack = 0
  5444                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5445  0BAD  0020               	movlb	0	; select bank0
  5446  0BAE  0848               	movf	___ftmul@f1,w
  5447  0BAF  00CE               	movwf	??___ftmul
  5448  0BB0  0849               	movf	___ftmul@f1+1,w
  5449  0BB1  00CF               	movwf	??___ftmul+1
  5450  0BB2  084A               	movf	___ftmul@f1+2,w
  5451  0BB3  00D0               	movwf	??___ftmul+2
  5452  0BB4  1003               	clrc
  5453  0BB5  0D4F               	rlf	??___ftmul+1,w
  5454  0BB6  0D50               	rlf	??___ftmul+2,w
  5455  0BB7  00D1               	movwf	??___ftmul+3
  5456  0BB8  0851               	movf	??___ftmul+3,w
  5457  0BB9  00D2               	movwf	___ftmul@exp
  5458  0BBA  0852               	movf	___ftmul@exp,w
  5459  0BBB  1D03               	btfss	3,2
  5460  0BBC  2BC4               	goto	l2958
  5461  0BBD  3000               	movlw	0
  5462  0BBE  00C8               	movwf	?___ftmul
  5463  0BBF  3000               	movlw	0
  5464  0BC0  00C9               	movwf	?___ftmul+1
  5465  0BC1  3000               	movlw	0
  5466  0BC2  00CA               	movwf	?___ftmul+2
  5467  0BC3  0008               	return
  5468  0BC4                     l2958:	
  5469  0BC4  084B               	movf	___ftmul@f2,w
  5470  0BC5  00CE               	movwf	??___ftmul
  5471  0BC6  084C               	movf	___ftmul@f2+1,w
  5472  0BC7  00CF               	movwf	??___ftmul+1
  5473  0BC8  084D               	movf	___ftmul@f2+2,w
  5474  0BC9  00D0               	movwf	??___ftmul+2
  5475  0BCA  1003               	clrc
  5476  0BCB  0D4F               	rlf	??___ftmul+1,w
  5477  0BCC  0D50               	rlf	??___ftmul+2,w
  5478  0BCD  00D1               	movwf	??___ftmul+3
  5479  0BCE  0851               	movf	??___ftmul+3,w
  5480  0BCF  00D7               	movwf	___ftmul@sign
  5481  0BD0  0857               	movf	___ftmul@sign,w
  5482  0BD1  1D03               	btfss	3,2
  5483  0BD2  2BDA               	goto	l2964
  5484  0BD3  3000               	movlw	0
  5485  0BD4  00C8               	movwf	?___ftmul
  5486  0BD5  3000               	movlw	0
  5487  0BD6  00C9               	movwf	?___ftmul+1
  5488  0BD7  3000               	movlw	0
  5489  0BD8  00CA               	movwf	?___ftmul+2
  5490  0BD9  0008               	return
  5491  0BDA                     l2964:	
  5492  0BDA  0857               	movf	___ftmul@sign,w
  5493  0BDB  3E7B               	addlw	123
  5494  0BDC  00CE               	movwf	??___ftmul
  5495  0BDD  084E               	movf	??___ftmul,w
  5496  0BDE  07D2               	addwf	___ftmul@exp,f
  5497  0BDF  0848               	movf	___ftmul@f1,w
  5498  0BE0  00CE               	movwf	??___ftmul
  5499  0BE1  0849               	movf	___ftmul@f1+1,w
  5500  0BE2  00CF               	movwf	??___ftmul+1
  5501  0BE3  084A               	movf	___ftmul@f1+2,w
  5502  0BE4  00D0               	movwf	??___ftmul+2
  5503  0BE5  3010               	movlw	16
  5504  0BE6                     u3035:	
  5505  0BE6  36D0               	lsrf	??___ftmul+2,f
  5506  0BE7  0CCF               	rrf	??___ftmul+1,f
  5507  0BE8  0CCE               	rrf	??___ftmul,f
  5508  0BE9  0B89               	decfsz	9,f
  5509  0BEA  2BE6               	goto	u3035
  5510  0BEB  084E               	movf	??___ftmul,w
  5511  0BEC  00D1               	movwf	??___ftmul+3
  5512  0BED  0851               	movf	??___ftmul+3,w
  5513  0BEE  00D7               	movwf	___ftmul@sign
  5514  0BEF  084B               	movf	___ftmul@f2,w
  5515  0BF0  00CE               	movwf	??___ftmul
  5516  0BF1  084C               	movf	___ftmul@f2+1,w
  5517  0BF2  00CF               	movwf	??___ftmul+1
  5518  0BF3  084D               	movf	___ftmul@f2+2,w
  5519  0BF4  00D0               	movwf	??___ftmul+2
  5520  0BF5  3010               	movlw	16
  5521  0BF6                     u3045:	
  5522  0BF6  36D0               	lsrf	??___ftmul+2,f
  5523  0BF7  0CCF               	rrf	??___ftmul+1,f
  5524  0BF8  0CCE               	rrf	??___ftmul,f
  5525  0BF9  0B89               	decfsz	9,f
  5526  0BFA  2BF6               	goto	u3045
  5527  0BFB  084E               	movf	??___ftmul,w
  5528  0BFC  00D1               	movwf	??___ftmul+3
  5529  0BFD  0851               	movf	??___ftmul+3,w
  5530  0BFE  06D7               	xorwf	___ftmul@sign,f
  5531  0BFF  3080               	movlw	128
  5532  0C00  00CE               	movwf	??___ftmul
  5533  0C01  084E               	movf	??___ftmul,w
  5534  0C02  05D7               	andwf	___ftmul@sign,f
  5535  0C03  17C9               	bsf	___ftmul@f1+1,7
  5536  0C04  17CC               	bsf	___ftmul@f2+1,7
  5537  0C05  30FF               	movlw	255
  5538  0C06  05CB               	andwf	___ftmul@f2,f
  5539  0C07  30FF               	movlw	255
  5540  0C08  05CC               	andwf	___ftmul@f2+1,f
  5541  0C09  3000               	movlw	0
  5542  0C0A  05CD               	andwf	___ftmul@f2+2,f
  5543  0C0B  3000               	movlw	0
  5544  0C0C  00D3               	movwf	___ftmul@f3_as_product
  5545  0C0D  3000               	movlw	0
  5546  0C0E  00D4               	movwf	___ftmul@f3_as_product+1
  5547  0C0F  3000               	movlw	0
  5548  0C10  00D5               	movwf	___ftmul@f3_as_product+2
  5549  0C11  3007               	movlw	7
  5550  0C12  00CE               	movwf	??___ftmul
  5551  0C13  084E               	movf	??___ftmul,w
  5552  0C14  00D6               	movwf	___ftmul@cntr
  5553  0C15                     l2976:	
  5554  0C15  1C48               	btfss	___ftmul@f1,0
  5555  0C16  2C1D               	goto	l2980
  5556  0C17  084B               	movf	___ftmul@f2,w
  5557  0C18  07D3               	addwf	___ftmul@f3_as_product,f
  5558  0C19  084C               	movf	___ftmul@f2+1,w
  5559  0C1A  3DD4               	addwfc	___ftmul@f3_as_product+1,f
  5560  0C1B  084D               	movf	___ftmul@f2+2,w
  5561  0C1C  3DD5               	addwfc	___ftmul@f3_as_product+2,f
  5562  0C1D                     l2980:	
  5563  0C1D  3001               	movlw	1
  5564  0C1E                     u3065:	
  5565  0C1E  36CA               	lsrf	___ftmul@f1+2,f
  5566  0C1F  0CC9               	rrf	___ftmul@f1+1,f
  5567  0C20  0CC8               	rrf	___ftmul@f1,f
  5568  0C21  0B89               	decfsz	9,f
  5569  0C22  2C1E               	goto	u3065
  5570  0C23  3001               	movlw	1
  5571  0C24                     u3075:	
  5572  0C24  35CB               	lslf	___ftmul@f2,f
  5573  0C25  0DCC               	rlf	___ftmul@f2+1,f
  5574  0C26  0DCD               	rlf	___ftmul@f2+2,f
  5575  0C27  0B89               	decfsz	9,f
  5576  0C28  2C24               	goto	u3075
  5577  0C29  3001               	movlw	1
  5578  0C2A  02D6               	subwf	___ftmul@cntr,f
  5579  0C2B  1D03               	btfss	3,2
  5580  0C2C  2C15               	goto	l2976
  5581  0C2D  3009               	movlw	9
  5582  0C2E  00CE               	movwf	??___ftmul
  5583  0C2F  084E               	movf	??___ftmul,w
  5584  0C30  00D6               	movwf	___ftmul@cntr
  5585  0C31                     l2988:	
  5586  0C31  1C48               	btfss	___ftmul@f1,0
  5587  0C32  2C39               	goto	l2992
  5588  0C33  084B               	movf	___ftmul@f2,w
  5589  0C34  07D3               	addwf	___ftmul@f3_as_product,f
  5590  0C35  084C               	movf	___ftmul@f2+1,w
  5591  0C36  3DD4               	addwfc	___ftmul@f3_as_product+1,f
  5592  0C37  084D               	movf	___ftmul@f2+2,w
  5593  0C38  3DD5               	addwfc	___ftmul@f3_as_product+2,f
  5594  0C39                     l2992:	
  5595  0C39  3001               	movlw	1
  5596  0C3A                     u3105:	
  5597  0C3A  36CA               	lsrf	___ftmul@f1+2,f
  5598  0C3B  0CC9               	rrf	___ftmul@f1+1,f
  5599  0C3C  0CC8               	rrf	___ftmul@f1,f
  5600  0C3D  0B89               	decfsz	9,f
  5601  0C3E  2C3A               	goto	u3105
  5602  0C3F  3001               	movlw	1
  5603  0C40                     u3115:	
  5604  0C40  36D5               	lsrf	___ftmul@f3_as_product+2,f
  5605  0C41  0CD4               	rrf	___ftmul@f3_as_product+1,f
  5606  0C42  0CD3               	rrf	___ftmul@f3_as_product,f
  5607  0C43  0B89               	decfsz	9,f
  5608  0C44  2C40               	goto	u3115
  5609  0C45  3001               	movlw	1
  5610  0C46  02D6               	subwf	___ftmul@cntr,f
  5611  0C47  1D03               	btfss	3,2
  5612  0C48  2C31               	goto	l2988
  5613  0C49  0853               	movf	___ftmul@f3_as_product,w
  5614  0C4A  00A0               	movwf	___ftpack@arg
  5615  0C4B  0854               	movf	___ftmul@f3_as_product+1,w
  5616  0C4C  00A1               	movwf	___ftpack@arg+1
  5617  0C4D  0855               	movf	___ftmul@f3_as_product+2,w
  5618  0C4E  00A2               	movwf	___ftpack@arg+2
  5619  0C4F  0852               	movf	___ftmul@exp,w
  5620  0C50  00CE               	movwf	??___ftmul
  5621  0C51  084E               	movf	??___ftmul,w
  5622  0C52  00A3               	movwf	___ftpack@exp
  5623  0C53  0857               	movf	___ftmul@sign,w
  5624  0C54  00CF               	movwf	??___ftmul+1
  5625  0C55  084F               	movf	??___ftmul+1,w
  5626  0C56  00A4               	movwf	___ftpack@sign
  5627  0C57  3188  2081         	fcall	___ftpack
  5628  0C59  0020               	movlb	0	; select bank0
  5629  0C5A  0820               	movf	?___ftpack,w
  5630  0C5B  00C8               	movwf	?___ftmul
  5631  0C5C  0821               	movf	?___ftpack+1,w
  5632  0C5D  00C9               	movwf	?___ftmul+1
  5633  0C5E  0822               	movf	?___ftpack+2,w
  5634  0C5F  00CA               	movwf	?___ftmul+2
  5635  0C60  0008               	return
  5636  0C61                     __end_of___ftmul:	
  5637                           
  5638                           	psect	text14
  5639  0B04                     __ptext14:	
  5640 ;; *************** function ___ftdiv *****************
  5641 ;; Defined at:
  5642 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  f2              3    8[BANK0 ] float 
  5645 ;;  f1              3   11[BANK0 ] float 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  f3              3   19[BANK0 ] float 
  5648 ;;  sign            1   23[BANK0 ] unsigned char 
  5649 ;;  exp             1   22[BANK0 ] unsigned char 
  5650 ;;  cntr            1   18[BANK0 ] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  3    8[BANK0 ] float 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0, pclath, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5660 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5664 ;;Total ram usage:       16 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    3
  5667 ;; This function calls:
  5668 ;;		___ftpack
  5669 ;; This function is called by:
  5670 ;;		_atan2
  5671 ;;		_atan
  5672 ;;		_AngleToSlot
  5673 ;;		_Calib
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           
  5678                           ;psect for function ___ftdiv
  5679  0B04                     ___ftdiv:	
  5680                           
  5681                           ;incstack = 0
  5682                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5683  0B04  0020               	movlb	0	; select bank0
  5684  0B05  082B               	movf	___ftdiv@f1,w
  5685  0B06  00AE               	movwf	??___ftdiv
  5686  0B07  082C               	movf	___ftdiv@f1+1,w
  5687  0B08  00AF               	movwf	??___ftdiv+1
  5688  0B09  082D               	movf	___ftdiv@f1+2,w
  5689  0B0A  00B0               	movwf	??___ftdiv+2
  5690  0B0B  1003               	clrc
  5691  0B0C  0D2F               	rlf	??___ftdiv+1,w
  5692  0B0D  0D30               	rlf	??___ftdiv+2,w
  5693  0B0E  00B1               	movwf	??___ftdiv+3
  5694  0B0F  0831               	movf	??___ftdiv+3,w
  5695  0B10  00B6               	movwf	___ftdiv@exp
  5696  0B11  0836               	movf	___ftdiv@exp,w
  5697  0B12  1D03               	btfss	3,2
  5698  0B13  2B1B               	goto	l3028
  5699  0B14  3000               	movlw	0
  5700  0B15  00A8               	movwf	?___ftdiv
  5701  0B16  3000               	movlw	0
  5702  0B17  00A9               	movwf	?___ftdiv+1
  5703  0B18  3000               	movlw	0
  5704  0B19  00AA               	movwf	?___ftdiv+2
  5705  0B1A  0008               	return
  5706  0B1B                     l3028:	
  5707  0B1B  0828               	movf	___ftdiv@f2,w
  5708  0B1C  00AE               	movwf	??___ftdiv
  5709  0B1D  0829               	movf	___ftdiv@f2+1,w
  5710  0B1E  00AF               	movwf	??___ftdiv+1
  5711  0B1F  082A               	movf	___ftdiv@f2+2,w
  5712  0B20  00B0               	movwf	??___ftdiv+2
  5713  0B21  1003               	clrc
  5714  0B22  0D2F               	rlf	??___ftdiv+1,w
  5715  0B23  0D30               	rlf	??___ftdiv+2,w
  5716  0B24  00B1               	movwf	??___ftdiv+3
  5717  0B25  0831               	movf	??___ftdiv+3,w
  5718  0B26  00B7               	movwf	___ftdiv@sign
  5719  0B27  0837               	movf	___ftdiv@sign,w
  5720  0B28  1D03               	btfss	3,2
  5721  0B29  2B31               	goto	l3034
  5722  0B2A  3000               	movlw	0
  5723  0B2B  00A8               	movwf	?___ftdiv
  5724  0B2C  3000               	movlw	0
  5725  0B2D  00A9               	movwf	?___ftdiv+1
  5726  0B2E  3000               	movlw	0
  5727  0B2F  00AA               	movwf	?___ftdiv+2
  5728  0B30  0008               	return
  5729  0B31                     l3034:	
  5730  0B31  3000               	movlw	0
  5731  0B32  00B3               	movwf	___ftdiv@f3
  5732  0B33  3000               	movlw	0
  5733  0B34  00B4               	movwf	___ftdiv@f3+1
  5734  0B35  3000               	movlw	0
  5735  0B36  00B5               	movwf	___ftdiv@f3+2
  5736  0B37  3089               	movlw	137
  5737  0B38  0737               	addwf	___ftdiv@sign,w
  5738  0B39  00AE               	movwf	??___ftdiv
  5739  0B3A  082E               	movf	??___ftdiv,w
  5740  0B3B  02B6               	subwf	___ftdiv@exp,f
  5741  0B3C  082B               	movf	___ftdiv@f1,w
  5742  0B3D  00AE               	movwf	??___ftdiv
  5743  0B3E  082C               	movf	___ftdiv@f1+1,w
  5744  0B3F  00AF               	movwf	??___ftdiv+1
  5745  0B40  082D               	movf	___ftdiv@f1+2,w
  5746  0B41  00B0               	movwf	??___ftdiv+2
  5747  0B42  3010               	movlw	16
  5748  0B43                     u3195:	
  5749  0B43  36B0               	lsrf	??___ftdiv+2,f
  5750  0B44  0CAF               	rrf	??___ftdiv+1,f
  5751  0B45  0CAE               	rrf	??___ftdiv,f
  5752  0B46  0B89               	decfsz	9,f
  5753  0B47  2B43               	goto	u3195
  5754  0B48  082E               	movf	??___ftdiv,w
  5755  0B49  00B1               	movwf	??___ftdiv+3
  5756  0B4A  0831               	movf	??___ftdiv+3,w
  5757  0B4B  00B7               	movwf	___ftdiv@sign
  5758  0B4C  0828               	movf	___ftdiv@f2,w
  5759  0B4D  00AE               	movwf	??___ftdiv
  5760  0B4E  0829               	movf	___ftdiv@f2+1,w
  5761  0B4F  00AF               	movwf	??___ftdiv+1
  5762  0B50  082A               	movf	___ftdiv@f2+2,w
  5763  0B51  00B0               	movwf	??___ftdiv+2
  5764  0B52  3010               	movlw	16
  5765  0B53                     u3205:	
  5766  0B53  36B0               	lsrf	??___ftdiv+2,f
  5767  0B54  0CAF               	rrf	??___ftdiv+1,f
  5768  0B55  0CAE               	rrf	??___ftdiv,f
  5769  0B56  0B89               	decfsz	9,f
  5770  0B57  2B53               	goto	u3205
  5771  0B58  082E               	movf	??___ftdiv,w
  5772  0B59  00B1               	movwf	??___ftdiv+3
  5773  0B5A  0831               	movf	??___ftdiv+3,w
  5774  0B5B  06B7               	xorwf	___ftdiv@sign,f
  5775  0B5C  3080               	movlw	128
  5776  0B5D  00AE               	movwf	??___ftdiv
  5777  0B5E  082E               	movf	??___ftdiv,w
  5778  0B5F  05B7               	andwf	___ftdiv@sign,f
  5779  0B60  17AC               	bsf	___ftdiv@f1+1,7
  5780  0B61  30FF               	movlw	255
  5781  0B62  05AB               	andwf	___ftdiv@f1,f
  5782  0B63  30FF               	movlw	255
  5783  0B64  05AC               	andwf	___ftdiv@f1+1,f
  5784  0B65  3000               	movlw	0
  5785  0B66  05AD               	andwf	___ftdiv@f1+2,f
  5786  0B67  17A9               	bsf	___ftdiv@f2+1,7
  5787  0B68  30FF               	movlw	255
  5788  0B69  05A8               	andwf	___ftdiv@f2,f
  5789  0B6A  30FF               	movlw	255
  5790  0B6B  05A9               	andwf	___ftdiv@f2+1,f
  5791  0B6C  3000               	movlw	0
  5792  0B6D  05AA               	andwf	___ftdiv@f2+2,f
  5793  0B6E  3018               	movlw	24
  5794  0B6F  00AE               	movwf	??___ftdiv
  5795  0B70  082E               	movf	??___ftdiv,w
  5796  0B71  00B2               	movwf	___ftdiv@cntr
  5797  0B72                     l3048:	
  5798  0B72  3001               	movlw	1
  5799  0B73                     u3215:	
  5800  0B73  35B3               	lslf	___ftdiv@f3,f
  5801  0B74  0DB4               	rlf	___ftdiv@f3+1,f
  5802  0B75  0DB5               	rlf	___ftdiv@f3+2,f
  5803  0B76  0B89               	decfsz	9,f
  5804  0B77  2B73               	goto	u3215
  5805  0B78  082A               	movf	___ftdiv@f2+2,w
  5806  0B79  022D               	subwf	___ftdiv@f1+2,w
  5807  0B7A  1D03               	skipz
  5808  0B7B  2B82               	goto	u3225
  5809  0B7C  0829               	movf	___ftdiv@f2+1,w
  5810  0B7D  022C               	subwf	___ftdiv@f1+1,w
  5811  0B7E  1D03               	skipz
  5812  0B7F  2B82               	goto	u3225
  5813  0B80  0828               	movf	___ftdiv@f2,w
  5814  0B81  022B               	subwf	___ftdiv@f1,w
  5815  0B82                     u3225:	
  5816  0B82  1C03               	skipc
  5817  0B83  2B8B               	goto	l3056
  5818  0B84  0828               	movf	___ftdiv@f2,w
  5819  0B85  02AB               	subwf	___ftdiv@f1,f
  5820  0B86  0829               	movf	___ftdiv@f2+1,w
  5821  0B87  3BAC               	subwfb	___ftdiv@f1+1,f
  5822  0B88  082A               	movf	___ftdiv@f2+2,w
  5823  0B89  3BAD               	subwfb	___ftdiv@f1+2,f
  5824  0B8A  1433               	bsf	___ftdiv@f3,0
  5825  0B8B                     l3056:	
  5826  0B8B  3001               	movlw	1
  5827  0B8C                     u3235:	
  5828  0B8C  35AB               	lslf	___ftdiv@f1,f
  5829  0B8D  0DAC               	rlf	___ftdiv@f1+1,f
  5830  0B8E  0DAD               	rlf	___ftdiv@f1+2,f
  5831  0B8F  0B89               	decfsz	9,f
  5832  0B90  2B8C               	goto	u3235
  5833  0B91  3001               	movlw	1
  5834  0B92  02B2               	subwf	___ftdiv@cntr,f
  5835  0B93  1D03               	btfss	3,2
  5836  0B94  2B72               	goto	l3048
  5837  0B95  0833               	movf	___ftdiv@f3,w
  5838  0B96  00A0               	movwf	___ftpack@arg
  5839  0B97  0834               	movf	___ftdiv@f3+1,w
  5840  0B98  00A1               	movwf	___ftpack@arg+1
  5841  0B99  0835               	movf	___ftdiv@f3+2,w
  5842  0B9A  00A2               	movwf	___ftpack@arg+2
  5843  0B9B  0836               	movf	___ftdiv@exp,w
  5844  0B9C  00AE               	movwf	??___ftdiv
  5845  0B9D  082E               	movf	??___ftdiv,w
  5846  0B9E  00A3               	movwf	___ftpack@exp
  5847  0B9F  0837               	movf	___ftdiv@sign,w
  5848  0BA0  00AF               	movwf	??___ftdiv+1
  5849  0BA1  082F               	movf	??___ftdiv+1,w
  5850  0BA2  00A4               	movwf	___ftpack@sign
  5851  0BA3  3188  2081         	fcall	___ftpack
  5852  0BA5  0020               	movlb	0	; select bank0
  5853  0BA6  0820               	movf	?___ftpack,w
  5854  0BA7  00A8               	movwf	?___ftdiv
  5855  0BA8  0821               	movf	?___ftpack+1,w
  5856  0BA9  00A9               	movwf	?___ftdiv+1
  5857  0BAA  0822               	movf	?___ftpack+2,w
  5858  0BAB  00AA               	movwf	?___ftdiv+2
  5859  0BAC  0008               	return
  5860  0BAD                     __end_of___ftdiv:	
  5861                           
  5862                           	psect	text15
  5863  1627                     __ptext15:	
  5864 ;; *************** function ___ftsub *****************
  5865 ;; Defined at:
  5866 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftsub.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  f2              3   40[BANK0 ] float 
  5869 ;;  f1              3   43[BANK0 ] float 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  3   40[BANK0 ] float 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, pclath, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5881 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;Total ram usage:        6 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    4
  5888 ;; This function calls:
  5889 ;;		___ftadd
  5890 ;; This function is called by:
  5891 ;;		_atan2
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function ___ftsub
  5897  1627                     ___ftsub:	
  5898                           
  5899                           ;incstack = 0
  5900                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5901  1627  0020               	movlb	0	; select bank0
  5902  1628  084A               	movf	___ftsub@f2+2,w
  5903  1629  0449               	iorwf	___ftsub@f2+1,w
  5904  162A  0448               	iorwf	___ftsub@f2,w
  5905  162B  1903               	skipnz
  5906  162C  2E2F               	goto	l3140
  5907  162D  3080               	movlw	128
  5908  162E  06CA               	xorwf	___ftsub@f2+2,f
  5909  162F                     l3140:	
  5910  162F  084B               	movf	___ftsub@f1,w
  5911  1630  00BB               	movwf	___ftadd@f1
  5912  1631  084C               	movf	___ftsub@f1+1,w
  5913  1632  00BC               	movwf	___ftadd@f1+1
  5914  1633  084D               	movf	___ftsub@f1+2,w
  5915  1634  00BD               	movwf	___ftadd@f1+2
  5916  1635  0848               	movf	___ftsub@f2,w
  5917  1636  00BE               	movwf	___ftadd@f2
  5918  1637  0849               	movf	___ftsub@f2+1,w
  5919  1638  00BF               	movwf	___ftadd@f2+1
  5920  1639  084A               	movf	___ftsub@f2+2,w
  5921  163A  00C0               	movwf	___ftadd@f2+2
  5922  163B  3186  26E7         	fcall	___ftadd
  5923  163D  0020               	movlb	0	; select bank0
  5924  163E  083B               	movf	?___ftadd,w
  5925  163F  00C8               	movwf	?___ftsub
  5926  1640  083C               	movf	?___ftadd+1,w
  5927  1641  00C9               	movwf	?___ftsub+1
  5928  1642  083D               	movf	?___ftadd+2,w
  5929  1643  00CA               	movwf	?___ftsub+2
  5930  1644  0008               	return
  5931  1645                     __end_of___ftsub:	
  5932                           
  5933                           	psect	text16
  5934  06E7                     __ptext16:	
  5935 ;; *************** function ___ftadd *****************
  5936 ;; Defined at:
  5937 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  f1              3   27[BANK0 ] float 
  5940 ;;  f2              3   30[BANK0 ] float 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  exp1            1   39[BANK0 ] unsigned char 
  5943 ;;  exp2            1   38[BANK0 ] unsigned char 
  5944 ;;  sign            1   37[BANK0 ] unsigned char 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  3   27[BANK0 ] float 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0, pclath, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5954 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;Total ram usage:       13 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    3
  5961 ;; This function calls:
  5962 ;;		___ftpack
  5963 ;; This function is called by:
  5964 ;;		_UpdateMagneticAngle
  5965 ;;		_atan2
  5966 ;;		___ftsub
  5967 ;;		_atan
  5968 ;;		_eval_poly
  5969 ;;		_Calib
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           
  5974                           ;psect for function ___ftadd
  5975  06E7                     ___ftadd:	
  5976                           
  5977                           ;incstack = 0
  5978                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5979  06E7  0020               	movlb	0	; select bank0
  5980  06E8  083B               	movf	___ftadd@f1,w
  5981  06E9  00C1               	movwf	??___ftadd
  5982  06EA  083C               	movf	___ftadd@f1+1,w
  5983  06EB  00C2               	movwf	??___ftadd+1
  5984  06EC  083D               	movf	___ftadd@f1+2,w
  5985  06ED  00C3               	movwf	??___ftadd+2
  5986  06EE  1003               	clrc
  5987  06EF  0D42               	rlf	??___ftadd+1,w
  5988  06F0  0D43               	rlf	??___ftadd+2,w
  5989  06F1  00C4               	movwf	??___ftadd+3
  5990  06F2  0844               	movf	??___ftadd+3,w
  5991  06F3  00C7               	movwf	___ftadd@exp1
  5992  06F4  083E               	movf	___ftadd@f2,w
  5993  06F5  00C1               	movwf	??___ftadd
  5994  06F6  083F               	movf	___ftadd@f2+1,w
  5995  06F7  00C2               	movwf	??___ftadd+1
  5996  06F8  0840               	movf	___ftadd@f2+2,w
  5997  06F9  00C3               	movwf	??___ftadd+2
  5998  06FA  1003               	clrc
  5999  06FB  0D42               	rlf	??___ftadd+1,w
  6000  06FC  0D43               	rlf	??___ftadd+2,w
  6001  06FD  00C4               	movwf	??___ftadd+3
  6002  06FE  0844               	movf	??___ftadd+3,w
  6003  06FF  00C6               	movwf	___ftadd@exp2
  6004  0700  0847               	movf	___ftadd@exp1,w
  6005  0701  1903               	btfsc	3,2
  6006  0702  2F0F               	goto	l2868
  6007  0703  0846               	movf	___ftadd@exp2,w
  6008  0704  0247               	subwf	___ftadd@exp1,w
  6009  0705  1803               	skipnc
  6010  0706  2F16               	goto	l2872
  6011  0707  0347               	decf	___ftadd@exp1,w
  6012  0708  3AFF               	xorlw	255
  6013  0709  0746               	addwf	___ftadd@exp2,w
  6014  070A  00C1               	movwf	??___ftadd
  6015  070B  3019               	movlw	25
  6016  070C  0241               	subwf	??___ftadd,w
  6017  070D  1C03               	skipc
  6018  070E  2F16               	goto	l2872
  6019  070F                     l2868:	
  6020  070F  083E               	movf	___ftadd@f2,w
  6021  0710  00BB               	movwf	?___ftadd
  6022  0711  083F               	movf	___ftadd@f2+1,w
  6023  0712  00BC               	movwf	?___ftadd+1
  6024  0713  0840               	movf	___ftadd@f2+2,w
  6025  0714  00BD               	movwf	?___ftadd+2
  6026  0715  0008               	return
  6027  0716                     l2872:	
  6028  0716  0846               	movf	___ftadd@exp2,w
  6029  0717  1903               	btfsc	3,2
  6030  0718  0008               	return
  6031  0719  0847               	movf	___ftadd@exp1,w
  6032  071A  0246               	subwf	___ftadd@exp2,w
  6033  071B  1803               	skipnc
  6034  071C  2F25               	goto	l2878
  6035  071D  0346               	decf	___ftadd@exp2,w
  6036  071E  3AFF               	xorlw	255
  6037  071F  0747               	addwf	___ftadd@exp1,w
  6038  0720  00C1               	movwf	??___ftadd
  6039  0721  3019               	movlw	25
  6040  0722  0241               	subwf	??___ftadd,w
  6041  0723  1803               	btfsc	3,0
  6042  0724  0008               	return
  6043  0725                     l2878:	
  6044  0725  3006               	movlw	6
  6045  0726  00C1               	movwf	??___ftadd
  6046  0727  0841               	movf	??___ftadd,w
  6047  0728  00C5               	movwf	___ftadd@sign
  6048  0729  1BBD               	btfsc	___ftadd@f1+2,7
  6049  072A  17C5               	bsf	___ftadd@sign,7
  6050  072B  1BC0               	btfsc	___ftadd@f2+2,7
  6051  072C  1745               	bsf	___ftadd@sign,6
  6052  072D  17BC               	bsf	___ftadd@f1+1,7
  6053  072E  30FF               	movlw	255
  6054  072F  05BB               	andwf	___ftadd@f1,f
  6055  0730  30FF               	movlw	255
  6056  0731  05BC               	andwf	___ftadd@f1+1,f
  6057  0732  3000               	movlw	0
  6058  0733  05BD               	andwf	___ftadd@f1+2,f
  6059  0734  17BF               	bsf	___ftadd@f2+1,7
  6060  0735  30FF               	movlw	255
  6061  0736  05BE               	andwf	___ftadd@f2,f
  6062  0737  30FF               	movlw	255
  6063  0738  05BF               	andwf	___ftadd@f2+1,f
  6064  0739  3000               	movlw	0
  6065  073A  05C0               	andwf	___ftadd@f2+2,f
  6066  073B  0846               	movf	___ftadd@exp2,w
  6067  073C  0247               	subwf	___ftadd@exp1,w
  6068  073D  1803               	skipnc
  6069  073E  2F61               	goto	l2900
  6070  073F                     l2890:	
  6071  073F  3001               	movlw	1
  6072  0740                     u2845:	
  6073  0740  35BE               	lslf	___ftadd@f2,f
  6074  0741  0DBF               	rlf	___ftadd@f2+1,f
  6075  0742  0DC0               	rlf	___ftadd@f2+2,f
  6076  0743  0B89               	decfsz	9,f
  6077  0744  2F40               	goto	u2845
  6078  0745  3001               	movlw	1
  6079  0746  02C6               	subwf	___ftadd@exp2,f
  6080  0747  0846               	movf	___ftadd@exp2,w
  6081  0748  0647               	xorwf	___ftadd@exp1,w
  6082  0749  1903               	skipnz
  6083  074A  2F5C               	goto	l2898
  6084  074B  3001               	movlw	1
  6085  074C  02C5               	subwf	___ftadd@sign,f
  6086  074D  0845               	movf	___ftadd@sign,w
  6087  074E  3907               	andlw	7
  6088  074F  1903               	btfsc	3,2
  6089  0750  2F5C               	goto	l2898
  6090  0751  2F3F               	goto	l2890
  6091  0752                     l2896:	
  6092  0752  3001               	movlw	1
  6093  0753                     u2875:	
  6094  0753  36BD               	lsrf	___ftadd@f1+2,f
  6095  0754  0CBC               	rrf	___ftadd@f1+1,f
  6096  0755  0CBB               	rrf	___ftadd@f1,f
  6097  0756  0B89               	decfsz	9,f
  6098  0757  2F53               	goto	u2875
  6099  0758  3001               	movlw	1
  6100  0759  00C1               	movwf	??___ftadd
  6101  075A  0841               	movf	??___ftadd,w
  6102  075B  07C7               	addwf	___ftadd@exp1,f
  6103  075C                     l2898:	
  6104  075C  0847               	movf	___ftadd@exp1,w
  6105  075D  0646               	xorwf	___ftadd@exp2,w
  6106  075E  1903               	btfsc	3,2
  6107  075F  2F86               	goto	l921
  6108  0760  2F52               	goto	l2896
  6109  0761                     l2900:	
  6110  0761  0847               	movf	___ftadd@exp1,w
  6111  0762  0246               	subwf	___ftadd@exp2,w
  6112  0763  1803               	skipnc
  6113  0764  2F86               	goto	l921
  6114  0765                     l2902:	
  6115  0765  3001               	movlw	1
  6116  0766                     u2905:	
  6117  0766  35BB               	lslf	___ftadd@f1,f
  6118  0767  0DBC               	rlf	___ftadd@f1+1,f
  6119  0768  0DBD               	rlf	___ftadd@f1+2,f
  6120  0769  0B89               	decfsz	9,f
  6121  076A  2F66               	goto	u2905
  6122  076B  3001               	movlw	1
  6123  076C  02C7               	subwf	___ftadd@exp1,f
  6124  076D  0846               	movf	___ftadd@exp2,w
  6125  076E  0647               	xorwf	___ftadd@exp1,w
  6126  076F  1903               	skipnz
  6127  0770  2F82               	goto	l2910
  6128  0771  3001               	movlw	1
  6129  0772  02C5               	subwf	___ftadd@sign,f
  6130  0773  0845               	movf	___ftadd@sign,w
  6131  0774  3907               	andlw	7
  6132  0775  1903               	btfsc	3,2
  6133  0776  2F82               	goto	l2910
  6134  0777  2F65               	goto	l2902
  6135  0778                     l2908:	
  6136  0778  3001               	movlw	1
  6137  0779                     u2935:	
  6138  0779  36C0               	lsrf	___ftadd@f2+2,f
  6139  077A  0CBF               	rrf	___ftadd@f2+1,f
  6140  077B  0CBE               	rrf	___ftadd@f2,f
  6141  077C  0B89               	decfsz	9,f
  6142  077D  2F79               	goto	u2935
  6143  077E  3001               	movlw	1
  6144  077F  00C1               	movwf	??___ftadd
  6145  0780  0841               	movf	??___ftadd,w
  6146  0781  07C6               	addwf	___ftadd@exp2,f
  6147  0782                     l2910:	
  6148  0782  0847               	movf	___ftadd@exp1,w
  6149  0783  0646               	xorwf	___ftadd@exp2,w
  6150  0784  1D03               	skipz
  6151  0785  2F78               	goto	l2908
  6152  0786                     l921:	
  6153  0786  1FC5               	btfss	___ftadd@sign,7
  6154  0787  2F98               	goto	l2914
  6155  0788  30FF               	movlw	255
  6156  0789  06BB               	xorwf	___ftadd@f1,f
  6157  078A  30FF               	movlw	255
  6158  078B  06BC               	xorwf	___ftadd@f1+1,f
  6159  078C  30FF               	movlw	255
  6160  078D  06BD               	xorwf	___ftadd@f1+2,f
  6161  078E  3001               	movlw	1
  6162  078F  07BB               	addwf	___ftadd@f1,f
  6163  0790  3000               	movlw	0
  6164  0791  1803               	skipnc
  6165  0792  3001               	movlw	1
  6166  0793  07BC               	addwf	___ftadd@f1+1,f
  6167  0794  3000               	movlw	0
  6168  0795  1803               	skipnc
  6169  0796  3001               	movlw	1
  6170  0797  07BD               	addwf	___ftadd@f1+2,f
  6171  0798                     l2914:	
  6172  0798  1F45               	btfss	___ftadd@sign,6
  6173  0799  2FAA               	goto	l2918
  6174  079A  30FF               	movlw	255
  6175  079B  06BE               	xorwf	___ftadd@f2,f
  6176  079C  30FF               	movlw	255
  6177  079D  06BF               	xorwf	___ftadd@f2+1,f
  6178  079E  30FF               	movlw	255
  6179  079F  06C0               	xorwf	___ftadd@f2+2,f
  6180  07A0  3001               	movlw	1
  6181  07A1  07BE               	addwf	___ftadd@f2,f
  6182  07A2  3000               	movlw	0
  6183  07A3  1803               	skipnc
  6184  07A4  3001               	movlw	1
  6185  07A5  07BF               	addwf	___ftadd@f2+1,f
  6186  07A6  3000               	movlw	0
  6187  07A7  1803               	skipnc
  6188  07A8  3001               	movlw	1
  6189  07A9  07C0               	addwf	___ftadd@f2+2,f
  6190  07AA                     l2918:	
  6191  07AA  01C5               	clrf	___ftadd@sign
  6192  07AB  083B               	movf	___ftadd@f1,w
  6193  07AC  07BE               	addwf	___ftadd@f2,f
  6194  07AD  083C               	movf	___ftadd@f1+1,w
  6195  07AE  3DBF               	addwfc	___ftadd@f2+1,f
  6196  07AF  083D               	movf	___ftadd@f1+2,w
  6197  07B0  3DC0               	addwfc	___ftadd@f2+2,f
  6198  07B1  1FC0               	btfss	___ftadd@f2+2,7
  6199  07B2  2FC5               	goto	l2928
  6200  07B3  30FF               	movlw	255
  6201  07B4  06BE               	xorwf	___ftadd@f2,f
  6202  07B5  30FF               	movlw	255
  6203  07B6  06BF               	xorwf	___ftadd@f2+1,f
  6204  07B7  30FF               	movlw	255
  6205  07B8  06C0               	xorwf	___ftadd@f2+2,f
  6206  07B9  3001               	movlw	1
  6207  07BA  07BE               	addwf	___ftadd@f2,f
  6208  07BB  3000               	movlw	0
  6209  07BC  1803               	skipnc
  6210  07BD  3001               	movlw	1
  6211  07BE  07BF               	addwf	___ftadd@f2+1,f
  6212  07BF  3000               	movlw	0
  6213  07C0  1803               	skipnc
  6214  07C1  3001               	movlw	1
  6215  07C2  07C0               	addwf	___ftadd@f2+2,f
  6216  07C3  01C5               	clrf	___ftadd@sign
  6217  07C4  0AC5               	incf	___ftadd@sign,f
  6218  07C5                     l2928:	
  6219  07C5  083E               	movf	___ftadd@f2,w
  6220  07C6  00A0               	movwf	___ftpack@arg
  6221  07C7  083F               	movf	___ftadd@f2+1,w
  6222  07C8  00A1               	movwf	___ftpack@arg+1
  6223  07C9  0840               	movf	___ftadd@f2+2,w
  6224  07CA  00A2               	movwf	___ftpack@arg+2
  6225  07CB  0847               	movf	___ftadd@exp1,w
  6226  07CC  00C1               	movwf	??___ftadd
  6227  07CD  0841               	movf	??___ftadd,w
  6228  07CE  00A3               	movwf	___ftpack@exp
  6229  07CF  0845               	movf	___ftadd@sign,w
  6230  07D0  00C2               	movwf	??___ftadd+1
  6231  07D1  0842               	movf	??___ftadd+1,w
  6232  07D2  00A4               	movwf	___ftpack@sign
  6233  07D3  3188  2081         	fcall	___ftpack
  6234  07D5  0020               	movlb	0	; select bank0
  6235  07D6  0820               	movf	?___ftpack,w
  6236  07D7  00BB               	movwf	?___ftadd
  6237  07D8  0821               	movf	?___ftpack+1,w
  6238  07D9  00BC               	movwf	?___ftadd+1
  6239  07DA  0822               	movf	?___ftpack+2,w
  6240  07DB  00BD               	movwf	?___ftadd+2
  6241  07DC  0008               	return
  6242  07DD                     __end_of___ftadd:	
  6243                           
  6244                           	psect	text17
  6245  095D                     __ptext17:	
  6246 ;; *************** function ___fttol *****************
  6247 ;; Defined at:
  6248 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  f1              3   56[BANK0 ] float 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  lval            4   65[BANK0 ] unsigned long 
  6253 ;;  exp1            1   69[BANK0 ] unsigned char 
  6254 ;;  sign1           1   64[BANK0 ] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  4   56[BANK0 ] long 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;Total ram usage:       14 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    2
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_UpdateMagneticAngle
  6275 ;;		_AngleToSlot
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function ___fttol
  6281  095D                     ___fttol:	
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6285  095D  0020               	movlb	0	; select bank0
  6286  095E  0858               	movf	___fttol@f1,w
  6287  095F  00DC               	movwf	??___fttol
  6288  0960  0859               	movf	___fttol@f1+1,w
  6289  0961  00DD               	movwf	??___fttol+1
  6290  0962  085A               	movf	___fttol@f1+2,w
  6291  0963  00DE               	movwf	??___fttol+2
  6292  0964  1003               	clrc
  6293  0965  0D5D               	rlf	??___fttol+1,w
  6294  0966  0D5E               	rlf	??___fttol+2,w
  6295  0967  00DF               	movwf	??___fttol+3
  6296  0968  085F               	movf	??___fttol+3,w
  6297  0969  00E5               	movwf	___fttol@exp1
  6298  096A  0865               	movf	___fttol@exp1,w
  6299  096B  1D03               	btfss	3,2
  6300  096C  2976               	goto	l3460
  6301  096D  3000               	movlw	0
  6302  096E  00DB               	movwf	?___fttol+3
  6303  096F  3000               	movlw	0
  6304  0970  00DA               	movwf	?___fttol+2
  6305  0971  3000               	movlw	0
  6306  0972  00D9               	movwf	?___fttol+1
  6307  0973  3000               	movlw	0
  6308  0974  00D8               	movwf	?___fttol
  6309  0975  0008               	return
  6310  0976                     l3460:	
  6311  0976  0858               	movf	___fttol@f1,w
  6312  0977  00DC               	movwf	??___fttol
  6313  0978  0859               	movf	___fttol@f1+1,w
  6314  0979  00DD               	movwf	??___fttol+1
  6315  097A  085A               	movf	___fttol@f1+2,w
  6316  097B  00DE               	movwf	??___fttol+2
  6317  097C  3017               	movlw	23
  6318  097D                     u3625:	
  6319  097D  36DE               	lsrf	??___fttol+2,f
  6320  097E  0CDD               	rrf	??___fttol+1,f
  6321  097F  0CDC               	rrf	??___fttol,f
  6322  0980  0B89               	decfsz	9,f
  6323  0981  297D               	goto	u3625
  6324  0982  085C               	movf	??___fttol,w
  6325  0983  00DF               	movwf	??___fttol+3
  6326  0984  085F               	movf	??___fttol+3,w
  6327  0985  00E0               	movwf	___fttol@sign1
  6328  0986  17D9               	bsf	___fttol@f1+1,7
  6329  0987  30FF               	movlw	255
  6330  0988  05D8               	andwf	___fttol@f1,f
  6331  0989  30FF               	movlw	255
  6332  098A  05D9               	andwf	___fttol@f1+1,f
  6333  098B  3000               	movlw	0
  6334  098C  05DA               	andwf	___fttol@f1+2,f
  6335  098D  0858               	movf	___fttol@f1,w
  6336  098E  00E1               	movwf	___fttol@lval
  6337  098F  0859               	movf	___fttol@f1+1,w
  6338  0990  00E2               	movwf	___fttol@lval+1
  6339  0991  085A               	movf	___fttol@f1+2,w
  6340  0992  00E3               	movwf	___fttol@lval+2
  6341  0993  01E4               	clrf	___fttol@lval+3
  6342  0994  308E               	movlw	142
  6343  0995  02E5               	subwf	___fttol@exp1,f
  6344  0996  1FE5               	btfss	___fttol@exp1,7
  6345  0997  29B4               	goto	l3480
  6346  0998  0865               	movf	___fttol@exp1,w
  6347  0999  3A80               	xorlw	128
  6348  099A  3E8F               	addlw	143
  6349  099B  1803               	skipnc
  6350  099C  29A6               	goto	l3478
  6351  099D  3000               	movlw	0
  6352  099E  00DB               	movwf	?___fttol+3
  6353  099F  3000               	movlw	0
  6354  09A0  00DA               	movwf	?___fttol+2
  6355  09A1  3000               	movlw	0
  6356  09A2  00D9               	movwf	?___fttol+1
  6357  09A3  3000               	movlw	0
  6358  09A4  00D8               	movwf	?___fttol
  6359  09A5  0008               	return
  6360  09A6                     l3478:	
  6361  09A6  3001               	movlw	1
  6362  09A7                     u3655:	
  6363  09A7  36E4               	lsrf	___fttol@lval+3,f
  6364  09A8  0CE3               	rrf	___fttol@lval+2,f
  6365  09A9  0CE2               	rrf	___fttol@lval+1,f
  6366  09AA  0CE1               	rrf	___fttol@lval,f
  6367  09AB  0B89               	decfsz	9,f
  6368  09AC  29A7               	goto	u3655
  6369  09AD  3001               	movlw	1
  6370  09AE  00DC               	movwf	??___fttol
  6371  09AF  085C               	movf	??___fttol,w
  6372  09B0  07E5               	addwf	___fttol@exp1,f
  6373  09B1  1903               	btfsc	3,2
  6374  09B2  29CD               	goto	l3488
  6375  09B3  29A6               	goto	l3478
  6376  09B4                     l3480:	
  6377  09B4  3018               	movlw	24
  6378  09B5  0265               	subwf	___fttol@exp1,w
  6379  09B6  1C03               	skipc
  6380  09B7  29CA               	goto	l981
  6381  09B8  3000               	movlw	0
  6382  09B9  00DB               	movwf	?___fttol+3
  6383  09BA  3000               	movlw	0
  6384  09BB  00DA               	movwf	?___fttol+2
  6385  09BC  3000               	movlw	0
  6386  09BD  00D9               	movwf	?___fttol+1
  6387  09BE  3000               	movlw	0
  6388  09BF  00D8               	movwf	?___fttol
  6389  09C0  0008               	return
  6390  09C1                     l3486:	
  6391  09C1  3001               	movlw	1
  6392  09C2                     u3685:	
  6393  09C2  35E1               	lslf	___fttol@lval,f
  6394  09C3  0DE2               	rlf	___fttol@lval+1,f
  6395  09C4  0DE3               	rlf	___fttol@lval+2,f
  6396  09C5  0DE4               	rlf	___fttol@lval+3,f
  6397  09C6  0B89               	decfsz	9,f
  6398  09C7  29C2               	goto	u3685
  6399  09C8  3001               	movlw	1
  6400  09C9  02E5               	subwf	___fttol@exp1,f
  6401  09CA                     l981:	
  6402  09CA  0865               	movf	___fttol@exp1,w
  6403  09CB  1D03               	btfss	3,2
  6404  09CC  29C1               	goto	l3486
  6405  09CD                     l3488:	
  6406  09CD  0860               	movf	___fttol@sign1,w
  6407  09CE  1903               	btfsc	3,2
  6408  09CF  29DB               	goto	l3492
  6409  09D0  09E1               	comf	___fttol@lval,f
  6410  09D1  09E2               	comf	___fttol@lval+1,f
  6411  09D2  09E3               	comf	___fttol@lval+2,f
  6412  09D3  09E4               	comf	___fttol@lval+3,f
  6413  09D4  0AE1               	incf	___fttol@lval,f
  6414  09D5  1903               	skipnz
  6415  09D6  0AE2               	incf	___fttol@lval+1,f
  6416  09D7  1903               	skipnz
  6417  09D8  0AE3               	incf	___fttol@lval+2,f
  6418  09D9  1903               	skipnz
  6419  09DA  0AE4               	incf	___fttol@lval+3,f
  6420  09DB                     l3492:	
  6421  09DB  0864               	movf	___fttol@lval+3,w
  6422  09DC  00DB               	movwf	?___fttol+3
  6423  09DD  0863               	movf	___fttol@lval+2,w
  6424  09DE  00DA               	movwf	?___fttol+2
  6425  09DF  0862               	movf	___fttol@lval+1,w
  6426  09E0  00D9               	movwf	?___fttol+1
  6427  09E1  0861               	movf	___fttol@lval,w
  6428  09E2  00D8               	movwf	?___fttol
  6429  09E3  0008               	return
  6430  09E4                     __end_of___fttol:	
  6431                           
  6432                           	psect	text18
  6433  1645                     __ptext18:	
  6434 ;; *************** function ___awtoft *****************
  6435 ;; Defined at:
  6436 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  c               2    8[BANK0 ] int 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  sign            1   13[BANK0 ] unsigned char 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  3    8[BANK0 ] float 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0, pclath, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:        6 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    3
  6457 ;; This function calls:
  6458 ;;		___ftpack
  6459 ;; This function is called by:
  6460 ;;		_UpdateMagneticAngle
  6461 ;;		_AngleToSlot
  6462 ;;		_Calib
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           
  6467                           ;psect for function ___awtoft
  6468  1645                     ___awtoft:	
  6469                           
  6470                           ;incstack = 0
  6471                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6472  1645  0020               	movlb	0	; select bank0
  6473  1646  01AD               	clrf	___awtoft@sign
  6474  1647  1FA9               	btfss	___awtoft@c+1,7
  6475  1648  2E50               	goto	l3450
  6476  1649  09A8               	comf	___awtoft@c,f
  6477  164A  09A9               	comf	___awtoft@c+1,f
  6478  164B  0AA8               	incf	___awtoft@c,f
  6479  164C  1903               	skipnz
  6480  164D  0AA9               	incf	___awtoft@c+1,f
  6481  164E  01AD               	clrf	___awtoft@sign
  6482  164F  0AAD               	incf	___awtoft@sign,f
  6483  1650                     l3450:	
  6484  1650  0828               	movf	___awtoft@c,w
  6485  1651  00A0               	movwf	___ftpack@arg
  6486  1652  0829               	movf	___awtoft@c+1,w
  6487  1653  00A1               	movwf	___ftpack@arg+1
  6488  1654  01A2               	clrf	___ftpack@arg+2
  6489  1655  308E               	movlw	142
  6490  1656  00AB               	movwf	??___awtoft
  6491  1657  082B               	movf	??___awtoft,w
  6492  1658  00A3               	movwf	___ftpack@exp
  6493  1659  082D               	movf	___awtoft@sign,w
  6494  165A  00AC               	movwf	??___awtoft+1
  6495  165B  082C               	movf	??___awtoft+1,w
  6496  165C  00A4               	movwf	___ftpack@sign
  6497  165D  3188  2081         	fcall	___ftpack
  6498  165F  0020               	movlb	0	; select bank0
  6499  1660  0820               	movf	?___ftpack,w
  6500  1661  00A8               	movwf	?___awtoft
  6501  1662  0821               	movf	?___ftpack+1,w
  6502  1663  00A9               	movwf	?___awtoft+1
  6503  1664  0822               	movf	?___ftpack+2,w
  6504  1665  00AA               	movwf	?___awtoft+2
  6505  1666  0008               	return
  6506  1667                     __end_of___awtoft:	
  6507                           
  6508                           	psect	text19
  6509  0881                     __ptext19:	
  6510 ;; *************** function ___ftpack *****************
  6511 ;; Defined at:
  6512 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  arg             3    0[BANK0 ] unsigned um
  6515 ;;  exp             1    3[BANK0 ] unsigned char 
  6516 ;;  sign            1    4[BANK0 ] unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  3    0[BANK0 ] float 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6528 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;Total ram usage:        8 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    2
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		___awtoft
  6539 ;;		___ftadd
  6540 ;;		___ftdiv
  6541 ;;		___ftmul
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           
  6546                           ;psect for function ___ftpack
  6547  0881                     ___ftpack:	
  6548                           
  6549                           ;incstack = 0
  6550                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6551  0881  0020               	movlb	0	; select bank0
  6552  0882  0823               	movf	___ftpack@exp,w
  6553  0883  1903               	btfsc	3,2
  6554  0884  288A               	goto	l2820
  6555  0885  0822               	movf	___ftpack@arg+2,w
  6556  0886  0421               	iorwf	___ftpack@arg+1,w
  6557  0887  0420               	iorwf	___ftpack@arg,w
  6558  0888  1D03               	skipz
  6559  0889  289B               	goto	l2826
  6560  088A                     l2820:	
  6561  088A  3000               	movlw	0
  6562  088B  00A0               	movwf	?___ftpack
  6563  088C  3000               	movlw	0
  6564  088D  00A1               	movwf	?___ftpack+1
  6565  088E  3000               	movlw	0
  6566  088F  00A2               	movwf	?___ftpack+2
  6567  0890  0008               	return
  6568  0891                     l2824:	
  6569  0891  3001               	movlw	1
  6570  0892  00A5               	movwf	??___ftpack
  6571  0893  0825               	movf	??___ftpack,w
  6572  0894  07A3               	addwf	___ftpack@exp,f
  6573  0895  3001               	movlw	1
  6574  0896                     u2615:	
  6575  0896  36A2               	lsrf	___ftpack@arg+2,f
  6576  0897  0CA1               	rrf	___ftpack@arg+1,f
  6577  0898  0CA0               	rrf	___ftpack@arg,f
  6578  0899  0B89               	decfsz	9,f
  6579  089A  2896               	goto	u2615
  6580  089B                     l2826:	
  6581  089B  30FE               	movlw	254
  6582  089C  0522               	andwf	___ftpack@arg+2,w
  6583  089D  1903               	btfsc	3,2
  6584  089E  28B4               	goto	l890
  6585  089F  2891               	goto	l2824
  6586  08A0                     l2828:	
  6587  08A0  3001               	movlw	1
  6588  08A1  00A5               	movwf	??___ftpack
  6589  08A2  0825               	movf	??___ftpack,w
  6590  08A3  07A3               	addwf	___ftpack@exp,f
  6591  08A4  3001               	movlw	1
  6592  08A5  07A0               	addwf	___ftpack@arg,f
  6593  08A6  3000               	movlw	0
  6594  08A7  1803               	skipnc
  6595  08A8  3001               	movlw	1
  6596  08A9  07A1               	addwf	___ftpack@arg+1,f
  6597  08AA  3000               	movlw	0
  6598  08AB  1803               	skipnc
  6599  08AC  3001               	movlw	1
  6600  08AD  07A2               	addwf	___ftpack@arg+2,f
  6601  08AE  3001               	movlw	1
  6602  08AF                     u2635:	
  6603  08AF  36A2               	lsrf	___ftpack@arg+2,f
  6604  08B0  0CA1               	rrf	___ftpack@arg+1,f
  6605  08B1  0CA0               	rrf	___ftpack@arg,f
  6606  08B2  0B89               	decfsz	9,f
  6607  08B3  28AF               	goto	u2635
  6608  08B4                     l890:	
  6609  08B4  30FF               	movlw	255
  6610  08B5  0522               	andwf	___ftpack@arg+2,w
  6611  08B6  1903               	btfsc	3,2
  6612  08B7  28C1               	goto	l2836
  6613  08B8  28A0               	goto	l2828
  6614  08B9                     l2834:	
  6615  08B9  3001               	movlw	1
  6616  08BA  02A3               	subwf	___ftpack@exp,f
  6617  08BB  3001               	movlw	1
  6618  08BC                     u2655:	
  6619  08BC  35A0               	lslf	___ftpack@arg,f
  6620  08BD  0DA1               	rlf	___ftpack@arg+1,f
  6621  08BE  0DA2               	rlf	___ftpack@arg+2,f
  6622  08BF  0B89               	decfsz	9,f
  6623  08C0  28BC               	goto	u2655
  6624  08C1                     l2836:	
  6625  08C1  1BA1               	btfsc	___ftpack@arg+1,7
  6626  08C2  28C7               	goto	l897
  6627  08C3  3002               	movlw	2
  6628  08C4  0223               	subwf	___ftpack@exp,w
  6629  08C5  1803               	skipnc
  6630  08C6  28B9               	goto	l2834
  6631  08C7                     l897:	
  6632  08C7  1823               	btfsc	___ftpack@exp,0
  6633  08C8  28CF               	goto	l898
  6634  08C9  30FF               	movlw	255
  6635  08CA  05A0               	andwf	___ftpack@arg,f
  6636  08CB  307F               	movlw	127
  6637  08CC  05A1               	andwf	___ftpack@arg+1,f
  6638  08CD  30FF               	movlw	255
  6639  08CE  05A2               	andwf	___ftpack@arg+2,f
  6640  08CF                     l898:	
  6641  08CF  1003               	clrc
  6642  08D0  0CA3               	rrf	___ftpack@exp,f
  6643  08D1  0823               	movf	___ftpack@exp,w
  6644  08D2  00A5               	movwf	??___ftpack
  6645  08D3  01A6               	clrf	??___ftpack+1
  6646  08D4  01A7               	clrf	??___ftpack+2
  6647  08D5  3010               	movlw	16
  6648  08D6                     u2695:	
  6649  08D6  35A5               	lslf	??___ftpack,f
  6650  08D7  0DA6               	rlf	??___ftpack+1,f
  6651  08D8  0DA7               	rlf	??___ftpack+2,f
  6652  08D9  0B89               	decfsz	9,f
  6653  08DA  28D6               	goto	u2695
  6654  08DB  0825               	movf	??___ftpack,w
  6655  08DC  04A0               	iorwf	___ftpack@arg,f
  6656  08DD  0826               	movf	??___ftpack+1,w
  6657  08DE  04A1               	iorwf	___ftpack@arg+1,f
  6658  08DF  0827               	movf	??___ftpack+2,w
  6659  08E0  04A2               	iorwf	___ftpack@arg+2,f
  6660  08E1  0824               	movf	___ftpack@sign,w
  6661  08E2  1903               	btfsc	3,2
  6662  08E3  0008               	return
  6663  08E4  17A2               	bsf	___ftpack@arg+2,7
  6664  08E5  0008               	return
  6665  08E6                     __end_of___ftpack:	
  6666                           
  6667                           	psect	text20
  6668  17AE                     __ptext20:	
  6669 ;; *************** function ___awdiv *****************
  6670 ;; Defined at:
  6671 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  divisor         2    0[BANK0 ] int 
  6674 ;;  dividend        2    2[BANK0 ] int 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  quotient        2    7[BANK0 ] int 
  6677 ;;  sign            1    6[BANK0 ] unsigned char 
  6678 ;;  counter         1    5[BANK0 ] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  2    0[BANK0 ] int 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        9 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    2
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_UpdateMagneticAngle
  6699 ;;		_OLEDPixel
  6700 ;;		_OLEDBar
  6701 ;;		_moveNeedle
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705                           
  6706                           ;psect for function ___awdiv
  6707  17AE                     ___awdiv:	
  6708                           
  6709                           ;incstack = 0
  6710                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6711  17AE  0020               	movlb	0	; select bank0
  6712  17AF  01A6               	clrf	___awdiv@sign
  6713  17B0  1FA1               	btfss	___awdiv@divisor+1,7
  6714  17B1  2FB9               	goto	l3406
  6715  17B2  09A0               	comf	___awdiv@divisor,f
  6716  17B3  09A1               	comf	___awdiv@divisor+1,f
  6717  17B4  0AA0               	incf	___awdiv@divisor,f
  6718  17B5  1903               	skipnz
  6719  17B6  0AA1               	incf	___awdiv@divisor+1,f
  6720  17B7  01A6               	clrf	___awdiv@sign
  6721  17B8  0AA6               	incf	___awdiv@sign,f
  6722  17B9                     l3406:	
  6723  17B9  1FA3               	btfss	___awdiv@dividend+1,7
  6724  17BA  2FC4               	goto	l3412
  6725  17BB  09A2               	comf	___awdiv@dividend,f
  6726  17BC  09A3               	comf	___awdiv@dividend+1,f
  6727  17BD  0AA2               	incf	___awdiv@dividend,f
  6728  17BE  1903               	skipnz
  6729  17BF  0AA3               	incf	___awdiv@dividend+1,f
  6730  17C0  3001               	movlw	1
  6731  17C1  00A4               	movwf	??___awdiv
  6732  17C2  0824               	movf	??___awdiv,w
  6733  17C3  06A6               	xorwf	___awdiv@sign,f
  6734  17C4                     l3412:	
  6735  17C4  01A7               	clrf	___awdiv@quotient
  6736  17C5  01A8               	clrf	___awdiv@quotient+1
  6737  17C6  0820               	movf	___awdiv@divisor,w
  6738  17C7  0421               	iorwf	___awdiv@divisor+1,w
  6739  17C8  1903               	btfsc	3,2
  6740  17C9  2FF3               	goto	l3434
  6741  17CA  01A5               	clrf	___awdiv@counter
  6742  17CB  0AA5               	incf	___awdiv@counter,f
  6743  17CC                     l3422:	
  6744  17CC  1BA1               	btfsc	___awdiv@divisor+1,7
  6745  17CD  2FD8               	goto	l3424
  6746  17CE  3001               	movlw	1
  6747  17CF                     u3535:	
  6748  17CF  35A0               	lslf	___awdiv@divisor,f
  6749  17D0  0DA1               	rlf	___awdiv@divisor+1,f
  6750  17D1  0B89               	decfsz	9,f
  6751  17D2  2FCF               	goto	u3535
  6752  17D3  3001               	movlw	1
  6753  17D4  00A4               	movwf	??___awdiv
  6754  17D5  0824               	movf	??___awdiv,w
  6755  17D6  07A5               	addwf	___awdiv@counter,f
  6756  17D7  2FCC               	goto	l3422
  6757  17D8                     l3424:	
  6758  17D8  3001               	movlw	1
  6759  17D9                     u3555:	
  6760  17D9  35A7               	lslf	___awdiv@quotient,f
  6761  17DA  0DA8               	rlf	___awdiv@quotient+1,f
  6762  17DB  0B89               	decfsz	9,f
  6763  17DC  2FD9               	goto	u3555
  6764  17DD  0821               	movf	___awdiv@divisor+1,w
  6765  17DE  0223               	subwf	___awdiv@dividend+1,w
  6766  17DF  1D03               	skipz
  6767  17E0  2FE3               	goto	u3565
  6768  17E1  0820               	movf	___awdiv@divisor,w
  6769  17E2  0222               	subwf	___awdiv@dividend,w
  6770  17E3                     u3565:	
  6771  17E3  1C03               	skipc
  6772  17E4  2FEA               	goto	l3430
  6773  17E5  0820               	movf	___awdiv@divisor,w
  6774  17E6  02A2               	subwf	___awdiv@dividend,f
  6775  17E7  0821               	movf	___awdiv@divisor+1,w
  6776  17E8  3BA3               	subwfb	___awdiv@dividend+1,f
  6777  17E9  1427               	bsf	___awdiv@quotient,0
  6778  17EA                     l3430:	
  6779  17EA  3001               	movlw	1
  6780  17EB                     u3575:	
  6781  17EB  36A1               	lsrf	___awdiv@divisor+1,f
  6782  17EC  0CA0               	rrf	___awdiv@divisor,f
  6783  17ED  0B89               	decfsz	9,f
  6784  17EE  2FEB               	goto	u3575
  6785  17EF  3001               	movlw	1
  6786  17F0  02A5               	subwf	___awdiv@counter,f
  6787  17F1  1D03               	btfss	3,2
  6788  17F2  2FD8               	goto	l3424
  6789  17F3                     l3434:	
  6790  17F3  0826               	movf	___awdiv@sign,w
  6791  17F4  1903               	btfsc	3,2
  6792  17F5  2FFB               	goto	l3438
  6793  17F6  09A7               	comf	___awdiv@quotient,f
  6794  17F7  09A8               	comf	___awdiv@quotient+1,f
  6795  17F8  0AA7               	incf	___awdiv@quotient,f
  6796  17F9  1903               	skipnz
  6797  17FA  0AA8               	incf	___awdiv@quotient+1,f
  6798  17FB                     l3438:	
  6799  17FB  0828               	movf	___awdiv@quotient+1,w
  6800  17FC  00A1               	movwf	?___awdiv+1
  6801  17FD  0827               	movf	___awdiv@quotient,w
  6802  17FE  00A0               	movwf	?___awdiv
  6803  17FF  0008               	return
  6804  1800                     __end_of___awdiv:	
  6805                           
  6806                           	psect	text21
  6807  0F11                     __ptext21:	
  6808 ;; *************** function _LSM303D_Read_M *****************
  6809 ;; Defined at:
  6810 ;;		line 29 in file "LSM303D.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  Z_H             1   13[BANK0 ] unsigned char 
  6815 ;;  Z_L             1   12[BANK0 ] unsigned char 
  6816 ;;  Y_H             1   11[BANK0 ] unsigned char 
  6817 ;;  Y_L             1   10[BANK0 ] unsigned char 
  6818 ;;  X_H             1    9[BANK0 ] unsigned char 
  6819 ;;  X_L             1    8[BANK0 ] unsigned char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;		None               void
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0, pclath, cstack
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;Total ram usage:       11 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    4
  6836 ;; This function calls:
  6837 ;;		_i2c_Read
  6838 ;;		_i2c_Restart
  6839 ;;		_i2c_Start
  6840 ;;		_i2c_Stop
  6841 ;;		_i2c_Write
  6842 ;; This function is called by:
  6843 ;;		_UpdateMagneticAngle
  6844 ;;		_Calib
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           
  6849                           ;psect for function _LSM303D_Read_M
  6850  0F11                     _LSM303D_Read_M:	
  6851                           
  6852                           ;LSM303D.c: 31: unsigned char X_L, X_H, Y_L, Y_H, Z_L, Z_H;
  6853                           ;LSM303D.c: 32: mX=0;
  6854                           
  6855                           ;incstack = 0
  6856                           ; Regs used in _LSM303D_Read_M: [wreg+status,2+status,0+pclath+cstack]
  6857  0F11  0021               	movlb	1	; select bank1
  6858  0F12  01E0               	clrf	_mX^(0+128)
  6859  0F13  01E1               	clrf	(_mX+1)^(0+128)
  6860                           
  6861                           ;LSM303D.c: 33: mY=0;
  6862  0F14  01E2               	clrf	_mY^(0+128)
  6863  0F15  01E3               	clrf	(_mY+1)^(0+128)
  6864                           
  6865                           ;LSM303D.c: 34: mZ=0;
  6866  0F16  01E4               	clrf	_mZ^(0+128)
  6867  0F17  01E5               	clrf	(_mZ+1)^(0+128)
  6868                           
  6869                           ;LSM303D.c: 36: i2c_Start();
  6870  0F18  3195  2536  318F   	fcall	_i2c_Start
  6871                           
  6872                           ;LSM303D.c: 37: i2c_Write(0x3C);
  6873  0F1B  303C               	movlw	60
  6874  0F1C  3195  2553  318F   	fcall	_i2c_Write
  6875                           
  6876                           ;LSM303D.c: 38: i2c_Write(0x08);
  6877  0F1F  3008               	movlw	8
  6878  0F20  3195  2553  318F   	fcall	_i2c_Write
  6879                           
  6880                           ;LSM303D.c: 39: i2c_Restart();
  6881  0F23  3195  2540  318F   	fcall	_i2c_Restart
  6882                           
  6883                           ;LSM303D.c: 40: i2c_Write(0x3D);
  6884  0F26  303D               	movlw	61
  6885  0F27  3195  2553  318F   	fcall	_i2c_Write
  6886                           
  6887                           ;LSM303D.c: 41: X_L=i2c_Read(0);
  6888  0F2A  3000               	movlw	0
  6889  0F2B  3188  2001  318F   	fcall	_i2c_Read
  6890  0F2E  0020               	movlb	0	; select bank0
  6891  0F2F  00A3               	movwf	??_LSM303D_Read_M
  6892  0F30  0823               	movf	??_LSM303D_Read_M,w
  6893  0F31  00A8               	movwf	LSM303D_Read_M@X_L
  6894                           
  6895                           ;LSM303D.c: 43: i2c_Stop();
  6896  0F32  3195  253B  318F   	fcall	_i2c_Stop
  6897                           
  6898                           ;LSM303D.c: 45: i2c_Start();
  6899  0F35  3195  2536  318F   	fcall	_i2c_Start
  6900                           
  6901                           ;LSM303D.c: 46: i2c_Write(0x3C);
  6902  0F38  303C               	movlw	60
  6903  0F39  3195  2553  318F   	fcall	_i2c_Write
  6904                           
  6905                           ;LSM303D.c: 47: i2c_Write(0x09);
  6906  0F3C  3009               	movlw	9
  6907  0F3D  3195  2553  318F   	fcall	_i2c_Write
  6908                           
  6909                           ;LSM303D.c: 48: i2c_Restart();
  6910  0F40  3195  2540  318F   	fcall	_i2c_Restart
  6911                           
  6912                           ;LSM303D.c: 49: i2c_Write(0x3D);
  6913  0F43  303D               	movlw	61
  6914  0F44  3195  2553  318F   	fcall	_i2c_Write
  6915                           
  6916                           ;LSM303D.c: 50: X_H=i2c_Read(0);
  6917  0F47  3000               	movlw	0
  6918  0F48  3188  2001  318F   	fcall	_i2c_Read
  6919  0F4B  0020               	movlb	0	; select bank0
  6920  0F4C  00A3               	movwf	??_LSM303D_Read_M
  6921  0F4D  0823               	movf	??_LSM303D_Read_M,w
  6922  0F4E  00A9               	movwf	LSM303D_Read_M@X_H
  6923                           
  6924                           ;LSM303D.c: 51: i2c_Stop();
  6925  0F4F  3195  253B  318F   	fcall	_i2c_Stop
  6926                           
  6927                           ;LSM303D.c: 53: i2c_Start();
  6928  0F52  3195  2536  318F   	fcall	_i2c_Start
  6929                           
  6930                           ;LSM303D.c: 54: i2c_Write(0x3C);
  6931  0F55  303C               	movlw	60
  6932  0F56  3195  2553  318F   	fcall	_i2c_Write
  6933                           
  6934                           ;LSM303D.c: 55: i2c_Write(0x0A);
  6935  0F59  300A               	movlw	10
  6936  0F5A  3195  2553  318F   	fcall	_i2c_Write
  6937                           
  6938                           ;LSM303D.c: 56: i2c_Restart();
  6939  0F5D  3195  2540  318F   	fcall	_i2c_Restart
  6940                           
  6941                           ;LSM303D.c: 57: i2c_Write(0x3D);
  6942  0F60  303D               	movlw	61
  6943  0F61  3195  2553  318F   	fcall	_i2c_Write
  6944                           
  6945                           ;LSM303D.c: 58: Y_L=i2c_Read(0);
  6946  0F64  3000               	movlw	0
  6947  0F65  3188  2001  318F   	fcall	_i2c_Read
  6948  0F68  0020               	movlb	0	; select bank0
  6949  0F69  00A3               	movwf	??_LSM303D_Read_M
  6950  0F6A  0823               	movf	??_LSM303D_Read_M,w
  6951  0F6B  00AA               	movwf	LSM303D_Read_M@Y_L
  6952                           
  6953                           ;LSM303D.c: 59: i2c_Stop();
  6954  0F6C  3195  253B  318F   	fcall	_i2c_Stop
  6955                           
  6956                           ;LSM303D.c: 61: i2c_Start();
  6957  0F6F  3195  2536  318F   	fcall	_i2c_Start
  6958                           
  6959                           ;LSM303D.c: 62: i2c_Write(0x3C);
  6960  0F72  303C               	movlw	60
  6961  0F73  3195  2553  318F   	fcall	_i2c_Write
  6962                           
  6963                           ;LSM303D.c: 63: i2c_Write(0x0B);
  6964  0F76  300B               	movlw	11
  6965  0F77  3195  2553  318F   	fcall	_i2c_Write
  6966                           
  6967                           ;LSM303D.c: 64: i2c_Restart();
  6968  0F7A  3195  2540  318F   	fcall	_i2c_Restart
  6969                           
  6970                           ;LSM303D.c: 65: i2c_Write(0x3D);
  6971  0F7D  303D               	movlw	61
  6972  0F7E  3195  2553  318F   	fcall	_i2c_Write
  6973                           
  6974                           ;LSM303D.c: 66: Y_H=i2c_Read(0);
  6975  0F81  3000               	movlw	0
  6976  0F82  3188  2001  318F   	fcall	_i2c_Read
  6977  0F85  0020               	movlb	0	; select bank0
  6978  0F86  00A3               	movwf	??_LSM303D_Read_M
  6979  0F87  0823               	movf	??_LSM303D_Read_M,w
  6980  0F88  00AB               	movwf	LSM303D_Read_M@Y_H
  6981                           
  6982                           ;LSM303D.c: 67: i2c_Stop();
  6983  0F89  3195  253B  318F   	fcall	_i2c_Stop
  6984                           
  6985                           ;LSM303D.c: 69: i2c_Start();
  6986  0F8C  3195  2536  318F   	fcall	_i2c_Start
  6987                           
  6988                           ;LSM303D.c: 70: i2c_Write(0x3C);
  6989  0F8F  303C               	movlw	60
  6990  0F90  3195  2553  318F   	fcall	_i2c_Write
  6991                           
  6992                           ;LSM303D.c: 71: i2c_Write(0x0C);
  6993  0F93  300C               	movlw	12
  6994  0F94  3195  2553  318F   	fcall	_i2c_Write
  6995                           
  6996                           ;LSM303D.c: 72: i2c_Restart();
  6997  0F97  3195  2540  318F   	fcall	_i2c_Restart
  6998                           
  6999                           ;LSM303D.c: 73: i2c_Write(0x3D);
  7000  0F9A  303D               	movlw	61
  7001  0F9B  3195  2553  318F   	fcall	_i2c_Write
  7002                           
  7003                           ;LSM303D.c: 74: Z_L=i2c_Read(0);
  7004  0F9E  3000               	movlw	0
  7005  0F9F  3188  2001  318F   	fcall	_i2c_Read
  7006  0FA2  0020               	movlb	0	; select bank0
  7007  0FA3  00A3               	movwf	??_LSM303D_Read_M
  7008  0FA4  0823               	movf	??_LSM303D_Read_M,w
  7009  0FA5  00AC               	movwf	LSM303D_Read_M@Z_L
  7010                           
  7011                           ;LSM303D.c: 75: i2c_Stop();
  7012  0FA6  3195  253B  318F   	fcall	_i2c_Stop
  7013                           
  7014                           ;LSM303D.c: 77: i2c_Start();
  7015  0FA9  3195  2536  318F   	fcall	_i2c_Start
  7016                           
  7017                           ;LSM303D.c: 78: i2c_Write(0x3C);
  7018  0FAC  303C               	movlw	60
  7019  0FAD  3195  2553  318F   	fcall	_i2c_Write
  7020                           
  7021                           ;LSM303D.c: 79: i2c_Write(0x0D);
  7022  0FB0  300D               	movlw	13
  7023  0FB1  3195  2553  318F   	fcall	_i2c_Write
  7024                           
  7025                           ;LSM303D.c: 80: i2c_Restart();
  7026  0FB4  3195  2540  318F   	fcall	_i2c_Restart
  7027                           
  7028                           ;LSM303D.c: 81: i2c_Write(0x3D);
  7029  0FB7  303D               	movlw	61
  7030  0FB8  3195  2553  318F   	fcall	_i2c_Write
  7031                           
  7032                           ;LSM303D.c: 82: Z_H=i2c_Read(0);
  7033  0FBB  3000               	movlw	0
  7034  0FBC  3188  2001  318F   	fcall	_i2c_Read
  7035  0FBF  0020               	movlb	0	; select bank0
  7036  0FC0  00A3               	movwf	??_LSM303D_Read_M
  7037  0FC1  0823               	movf	??_LSM303D_Read_M,w
  7038  0FC2  00AD               	movwf	LSM303D_Read_M@Z_H
  7039                           
  7040                           ;LSM303D.c: 83: i2c_Stop();
  7041  0FC3  3195  253B  318F   	fcall	_i2c_Stop
  7042                           
  7043                           ;LSM303D.c: 85: mX=(X_H<<8)+X_L;
  7044  0FC6  0020               	movlb	0	; select bank0
  7045  0FC7  0828               	movf	LSM303D_Read_M@X_L,w
  7046  0FC8  00A3               	movwf	??_LSM303D_Read_M
  7047  0FC9  01A4               	clrf	??_LSM303D_Read_M+1
  7048  0FCA  0829               	movf	LSM303D_Read_M@X_H,w
  7049  0FCB  00A5               	movwf	??_LSM303D_Read_M+2
  7050  0FCC  01A6               	clrf	??_LSM303D_Read_M+3
  7051  0FCD  0825               	movf	??_LSM303D_Read_M+2,w
  7052  0FCE  00A6               	movwf	??_LSM303D_Read_M+3
  7053  0FCF  01A5               	clrf	??_LSM303D_Read_M+2
  7054  0FD0  0823               	movf	??_LSM303D_Read_M,w
  7055  0FD1  0725               	addwf	??_LSM303D_Read_M+2,w
  7056  0FD2  0021               	movlb	1	; select bank1
  7057  0FD3  00E0               	movwf	_mX^(0+128)
  7058  0FD4  0020               	movlb	0	; select bank0
  7059  0FD5  0824               	movf	??_LSM303D_Read_M+1,w
  7060  0FD6  3D26               	addwfc	??_LSM303D_Read_M+3,w
  7061  0FD7  0021               	movlb	1	; select bank1
  7062  0FD8  00E1               	movwf	(_mX+1)^(0+128)
  7063                           
  7064                           ;LSM303D.c: 86: mY=(Y_H<<8)+Y_L;
  7065  0FD9  0020               	movlb	0	; select bank0
  7066  0FDA  082A               	movf	LSM303D_Read_M@Y_L,w
  7067  0FDB  00A3               	movwf	??_LSM303D_Read_M
  7068  0FDC  01A4               	clrf	??_LSM303D_Read_M+1
  7069  0FDD  082B               	movf	LSM303D_Read_M@Y_H,w
  7070  0FDE  00A5               	movwf	??_LSM303D_Read_M+2
  7071  0FDF  01A6               	clrf	??_LSM303D_Read_M+3
  7072  0FE0  0825               	movf	??_LSM303D_Read_M+2,w
  7073  0FE1  00A6               	movwf	??_LSM303D_Read_M+3
  7074  0FE2  01A5               	clrf	??_LSM303D_Read_M+2
  7075  0FE3  0823               	movf	??_LSM303D_Read_M,w
  7076  0FE4  0725               	addwf	??_LSM303D_Read_M+2,w
  7077  0FE5  0021               	movlb	1	; select bank1
  7078  0FE6  00E2               	movwf	_mY^(0+128)
  7079  0FE7  0020               	movlb	0	; select bank0
  7080  0FE8  0824               	movf	??_LSM303D_Read_M+1,w
  7081  0FE9  3D26               	addwfc	??_LSM303D_Read_M+3,w
  7082  0FEA  0021               	movlb	1	; select bank1
  7083  0FEB  00E3               	movwf	(_mY+1)^(0+128)
  7084                           
  7085                           ;LSM303D.c: 87: mZ=(Z_H<<8)+Z_L;
  7086  0FEC  0020               	movlb	0	; select bank0
  7087  0FED  082C               	movf	LSM303D_Read_M@Z_L,w
  7088  0FEE  00A3               	movwf	??_LSM303D_Read_M
  7089  0FEF  01A4               	clrf	??_LSM303D_Read_M+1
  7090  0FF0  082D               	movf	LSM303D_Read_M@Z_H,w
  7091  0FF1  00A5               	movwf	??_LSM303D_Read_M+2
  7092  0FF2  01A6               	clrf	??_LSM303D_Read_M+3
  7093  0FF3  0825               	movf	??_LSM303D_Read_M+2,w
  7094  0FF4  00A6               	movwf	??_LSM303D_Read_M+3
  7095  0FF5  01A5               	clrf	??_LSM303D_Read_M+2
  7096  0FF6  0823               	movf	??_LSM303D_Read_M,w
  7097  0FF7  0725               	addwf	??_LSM303D_Read_M+2,w
  7098  0FF8  0021               	movlb	1	; select bank1
  7099  0FF9  00E4               	movwf	_mZ^(0+128)
  7100  0FFA  0020               	movlb	0	; select bank0
  7101  0FFB  0824               	movf	??_LSM303D_Read_M+1,w
  7102  0FFC  3D26               	addwfc	??_LSM303D_Read_M+3,w
  7103  0FFD  0021               	movlb	1	; select bank1
  7104  0FFE  00E5               	movwf	(_mZ+1)^(0+128)
  7105  0FFF  0008               	return
  7106  1000                     __end_of_LSM303D_Read_M:	
  7107                           
  7108                           	psect	text22
  7109  1540                     __ptext22:	
  7110 ;; *************** function _i2c_Restart *****************
  7111 ;; Defined at:
  7112 ;;		line 34 in file "i2c.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;		None               void
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:        0 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    3
  7133 ;; This function calls:
  7134 ;;		_i2c_Wait
  7135 ;; This function is called by:
  7136 ;;		_LSM303D_Read_M
  7137 ;;		_LSM303D_Read_A
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           
  7142                           ;psect for function _i2c_Restart
  7143  1540                     _i2c_Restart:	
  7144                           
  7145                           ;i2c.c: 35: i2c_Wait();
  7146                           
  7147                           ;incstack = 0
  7148                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  7149  1540  3195  254B         	fcall	_i2c_Wait
  7150                           
  7151                           ;i2c.c: 36: RSEN=1;
  7152  1542  0024               	movlb	4	; select bank4
  7153  1543  1496               	bsf	22,1	;volatile
  7154  1544  0008               	return
  7155  1545                     __end_of_i2c_Restart:	
  7156                           
  7157                           	psect	text23
  7158  0801                     __ptext23:	
  7159 ;; *************** function _i2c_Read *****************
  7160 ;; Defined at:
  7161 ;;		line 66 in file "i2c.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  ack             1    wreg     unsigned char 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  ack             1    1[BANK0 ] unsigned char 
  7166 ;;  i2cReadData     1    2[BANK0 ] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      unsigned char 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0, pclath, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;Total ram usage:        3 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    3
  7183 ;; This function calls:
  7184 ;;		_i2c_Wait
  7185 ;; This function is called by:
  7186 ;;		_LSM303D_Read_M
  7187 ;;		_LSM303D_Read_A
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           
  7192                           ;psect for function _i2c_Read
  7193  0801                     _i2c_Read:	
  7194                           
  7195                           ;incstack = 0
  7196                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  7197                           ;i2c_Read@ack stored from wreg
  7198  0801  0020               	movlb	0	; select bank0
  7199  0802  00A1               	movwf	i2c_Read@ack
  7200                           
  7201                           ;i2c.c: 71: unsigned char i2cReadData;
  7202                           ;i2c.c: 73: i2c_Wait();
  7203  0803  3195  254B  3188   	fcall	_i2c_Wait
  7204                           
  7205                           ;i2c.c: 74: RCEN=1;
  7206  0806  0024               	movlb	4	; select bank4
  7207  0807  1596               	bsf	22,3	;volatile
  7208                           
  7209                           ;i2c.c: 75: i2c_Wait();
  7210  0808  3195  254B  3188   	fcall	_i2c_Wait
  7211                           
  7212                           ;i2c.c: 76: i2cReadData = SSPBUF;
  7213  080B  0024               	movlb	4	; select bank4
  7214  080C  0811               	movf	17,w	;volatile
  7215  080D  0020               	movlb	0	; select bank0
  7216  080E  00A0               	movwf	??_i2c_Read
  7217  080F  0820               	movf	??_i2c_Read,w
  7218  0810  00A2               	movwf	i2c_Read@i2cReadData
  7219                           
  7220                           ;i2c.c: 77: i2c_Wait();
  7221  0811  3195  254B  3188   	fcall	_i2c_Wait
  7222                           
  7223                           ;i2c.c: 78: if ( ack ) ACKDT=0;
  7224  0814  0020               	movlb	0	; select bank0
  7225  0815  0821               	movf	i2c_Read@ack,w
  7226  0816  1903               	btfsc	3,2
  7227  0817  281B               	goto	l553
  7228  0818  0024               	movlb	4	; select bank4
  7229  0819  1296               	bcf	22,5	;volatile
  7230  081A  281D               	goto	l554
  7231  081B                     l553:	
  7232                           
  7233                           ;i2c.c: 79: else ACKDT=1;
  7234  081B  0024               	movlb	4	; select bank4
  7235  081C  1696               	bsf	22,5	;volatile
  7236  081D                     l554:	
  7237                           
  7238                           ;i2c.c: 80: ACKEN=1;
  7239  081D  1616               	bsf	22,4	;volatile
  7240                           
  7241                           ;i2c.c: 82: return( i2cReadData );
  7242  081E  0020               	movlb	0	; select bank0
  7243  081F  0822               	movf	i2c_Read@i2cReadData,w
  7244  0820  0008               	return
  7245  0821                     __end_of_i2c_Read:	
  7246                           
  7247                           	psect	text24
  7248  157B                     __ptext24:	
  7249 ;; *************** function _SYSTEM_Initialize *****************
  7250 ;; Defined at:
  7251 ;;		line 71 in file "mcc_generated_files/mcc.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;		None               void
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0, pclath, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;Total ram usage:        0 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    3
  7272 ;; This function calls:
  7273 ;;		_EUSART_Initialize
  7274 ;;		_OSCILLATOR_Initialize
  7275 ;;		_PIN_MANAGER_Initialize
  7276 ;;		_i2c_Init
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _SYSTEM_Initialize
  7284  157B                     _SYSTEM_Initialize:	
  7285                           
  7286                           ;mcc.c: 72: OSCILLATOR_Initialize();
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7290  157B  3195  2545  3195   	fcall	_OSCILLATOR_Initialize
  7291                           
  7292                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  7293  157E  3196  2667  3195   	fcall	_PIN_MANAGER_Initialize
  7294                           
  7295                           ;mcc.c: 74: EUSART_Initialize();
  7296  1581  3195  25A2  3195   	fcall	_EUSART_Initialize
  7297                           
  7298                           ;mcc.c: 75: i2c_Init();
  7299  1584  3195  256F         	fcall	_i2c_Init
  7300  1586  0008               	return
  7301  1587                     __end_of_SYSTEM_Initialize:	
  7302                           
  7303                           	psect	text25
  7304  156F                     __ptext25:	
  7305 ;; *************** function _i2c_Init *****************
  7306 ;; Defined at:
  7307 ;;		line 5 in file "i2c.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;		None               void
  7314 ;; Registers used:
  7315 ;;		wreg, status,2
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;Total ram usage:        0 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    2
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_SYSTEM_Initialize
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           
  7336                           ;psect for function _i2c_Init
  7337  156F                     _i2c_Init:	
  7338                           
  7339                           ;i2c.c: 9: TRISC3=1;
  7340                           
  7341                           ;incstack = 0
  7342                           ; Regs used in _i2c_Init: [wreg+status,2]
  7343  156F  0021               	movlb	1	; select bank1
  7344  1570  158E               	bsf	14,3	;volatile
  7345                           
  7346                           ;i2c.c: 10: TRISC4=1;
  7347  1571  160E               	bsf	14,4	;volatile
  7348                           
  7349                           ;i2c.c: 12: SSPCON1 = 0b00101000;
  7350  1572  3028               	movlw	40
  7351  1573  0024               	movlb	4	; select bank4
  7352  1574  0095               	movwf	21	;volatile
  7353                           
  7354                           ;i2c.c: 13: SSPCON2 = 0x00;
  7355  1575  0196               	clrf	22	;volatile
  7356                           
  7357                           ;i2c.c: 15: SSPADD = 39;
  7358  1576  3027               	movlw	39
  7359  1577  0092               	movwf	18	;volatile
  7360                           
  7361                           ;i2c.c: 17: SSPSTAT = 0b11000000;
  7362  1578  30C0               	movlw	192
  7363  1579  0094               	movwf	20	;volatile
  7364  157A  0008               	return
  7365  157B                     __end_of_i2c_Init:	
  7366                           
  7367                           	psect	text26
  7368  1667                     __ptext26:	
  7369 ;; *************** function _PIN_MANAGER_Initialize *****************
  7370 ;; Defined at:
  7371 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;		None
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;		None               void
  7378 ;; Registers used:
  7379 ;;		wreg, status,2
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;Total ram usage:        0 bytes
  7390 ;; Hardware stack levels used:    1
  7391 ;; Hardware stack levels required when called:    2
  7392 ;; This function calls:
  7393 ;;		Nothing
  7394 ;; This function is called by:
  7395 ;;		_SYSTEM_Initialize
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           
  7400                           ;psect for function _PIN_MANAGER_Initialize
  7401  1667                     _PIN_MANAGER_Initialize:	
  7402                           
  7403                           ;pin_manager.c: 51: LATA = 0x00;
  7404                           
  7405                           ;incstack = 0
  7406                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7407  1667  0022               	movlb	2	; select bank2
  7408  1668  018C               	clrf	12	;volatile
  7409                           
  7410                           ;pin_manager.c: 52: TRISA = 0x00;
  7411  1669  0021               	movlb	1	; select bank1
  7412  166A  018C               	clrf	12	;volatile
  7413                           
  7414                           ;pin_manager.c: 53: ANSELA = 0x00;
  7415  166B  0023               	movlb	3	; select bank3
  7416  166C  018C               	clrf	12	;volatile
  7417                           
  7418                           ;pin_manager.c: 55: LATB = 0x00;
  7419  166D  0022               	movlb	2	; select bank2
  7420  166E  018D               	clrf	13	;volatile
  7421                           
  7422                           ;pin_manager.c: 56: TRISB = 0xFF;
  7423  166F  30FF               	movlw	255
  7424  1670  0021               	movlb	1	; select bank1
  7425  1671  008D               	movwf	13	;volatile
  7426                           
  7427                           ;pin_manager.c: 57: ANSELB = 0x3F;
  7428  1672  303F               	movlw	63
  7429  1673  0023               	movlb	3	; select bank3
  7430  1674  008D               	movwf	13	;volatile
  7431                           
  7432                           ;pin_manager.c: 58: WPUB = 0x00;
  7433  1675  0024               	movlb	4	; select bank4
  7434  1676  018D               	clrf	13	;volatile
  7435                           
  7436                           ;pin_manager.c: 60: LATC = 0x00;
  7437  1677  0022               	movlb	2	; select bank2
  7438  1678  018E               	clrf	14	;volatile
  7439                           
  7440                           ;pin_manager.c: 61: TRISC = 0xD8;
  7441  1679  30D8               	movlw	216
  7442  167A  0021               	movlb	1	; select bank1
  7443  167B  008E               	movwf	14	;volatile
  7444                           
  7445                           ;pin_manager.c: 63: LATD = 0x00;
  7446  167C  0022               	movlb	2	; select bank2
  7447  167D  018F               	clrf	15	;volatile
  7448                           
  7449                           ;pin_manager.c: 64: TRISD = 0xF0;
  7450  167E  30F0               	movlw	240
  7451  167F  0021               	movlb	1	; select bank1
  7452  1680  008F               	movwf	15	;volatile
  7453                           
  7454                           ;pin_manager.c: 65: ANSELD = 0xF0;
  7455  1681  30F0               	movlw	240
  7456  1682  0023               	movlb	3	; select bank3
  7457  1683  008F               	movwf	15	;volatile
  7458                           
  7459                           ;pin_manager.c: 67: LATE = 0x00;
  7460  1684  0022               	movlb	2	; select bank2
  7461  1685  0190               	clrf	16	;volatile
  7462                           
  7463                           ;pin_manager.c: 68: TRISE = 0x08;
  7464  1686  3008               	movlw	8
  7465  1687  0021               	movlb	1	; select bank1
  7466  1688  0090               	movwf	16	;volatile
  7467                           
  7468                           ;pin_manager.c: 69: ANSELE = 0x00;
  7469  1689  0023               	movlb	3	; select bank3
  7470  168A  0190               	clrf	16	;volatile
  7471                           
  7472                           ;pin_manager.c: 70: WPUE = 0x00;
  7473  168B  0024               	movlb	4	; select bank4
  7474  168C  0190               	clrf	16	;volatile
  7475                           
  7476                           ;pin_manager.c: 72: OPTION_REGbits.nWPUEN = 0x01;
  7477  168D  0021               	movlb	1	; select bank1
  7478  168E  1795               	bsf	21,7	;volatile
  7479                           
  7480                           ;pin_manager.c: 74: APFCON = 0x00;
  7481  168F  0022               	movlb	2	; select bank2
  7482  1690  019D               	clrf	29	;volatile
  7483  1691  0008               	return
  7484  1692                     __end_of_PIN_MANAGER_Initialize:	
  7485                           
  7486                           	psect	text27
  7487  1545                     __ptext27:	
  7488 ;; *************** function _OSCILLATOR_Initialize *****************
  7489 ;; Defined at:
  7490 ;;		line 78 in file "mcc_generated_files/mcc.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;		None               void
  7497 ;; Registers used:
  7498 ;;		wreg, status,2
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;Total ram usage:        0 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    2
  7511 ;; This function calls:
  7512 ;;		Nothing
  7513 ;; This function is called by:
  7514 ;;		_SYSTEM_Initialize
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _OSCILLATOR_Initialize
  7520  1545                     _OSCILLATOR_Initialize:	
  7521                           
  7522                           ;mcc.c: 80: OSCCON = 0x78;
  7523                           
  7524                           ;incstack = 0
  7525                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7526  1545  3078               	movlw	120
  7527  1546  0021               	movlb	1	; select bank1
  7528  1547  0099               	movwf	25	;volatile
  7529                           
  7530                           ;mcc.c: 82: OSCSTAT = 0x00;
  7531  1548  019A               	clrf	26	;volatile
  7532                           
  7533                           ;mcc.c: 84: OSCTUNE = 0x00;
  7534  1549  0198               	clrf	24	;volatile
  7535  154A  0008               	return
  7536  154B                     __end_of_OSCILLATOR_Initialize:	
  7537                           
  7538                           	psect	text28
  7539  15A2                     __ptext28:	
  7540 ;; *************** function _EUSART_Initialize *****************
  7541 ;; Defined at:
  7542 ;;		line 8 in file "eusart.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;		None
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  2   45[None  ] int 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;Total ram usage:        0 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    2
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_SYSTEM_Initialize
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           
  7571                           ;psect for function _EUSART_Initialize
  7572  15A2                     _EUSART_Initialize:	
  7573                           
  7574                           ;eusart.c: 10: PIE1bits.RCIE = 0;
  7575                           
  7576                           ;incstack = 0
  7577                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  7578  15A2  0021               	movlb	1	; select bank1
  7579  15A3  1291               	bcf	17,5	;volatile
  7580                           
  7581                           ;eusart.c: 11: PIE1bits.TXIE = 0;
  7582  15A4  1211               	bcf	17,4	;volatile
  7583                           
  7584                           ;eusart.c: 16: BAUDCON = 0x4A;
  7585  15A5  304A               	movlw	74
  7586  15A6  0023               	movlb	3	; select bank3
  7587  15A7  009F               	movwf	31	;volatile
  7588                           
  7589                           ;eusart.c: 19: RCSTA = 0x90;
  7590  15A8  3090               	movlw	144
  7591  15A9  009D               	movwf	29	;volatile
  7592                           
  7593                           ;eusart.c: 22: TXSTA = 0x26;
  7594  15AA  3026               	movlw	38
  7595  15AB  009E               	movwf	30	;volatile
  7596                           
  7597                           ;eusart.c: 25: SPBRGL = 0x22;
  7598  15AC  3022               	movlw	34
  7599  15AD  009B               	movwf	27	;volatile
  7600                           
  7601                           ;eusart.c: 28: SPBRGH = 0x00;
  7602  15AE  019C               	clrf	28	;volatile
  7603                           
  7604                           ;eusart.c: 31: PIE1bits.RCIE = 1;
  7605  15AF  0021               	movlb	1	; select bank1
  7606  15B0  1691               	bsf	17,5	;volatile
  7607  15B1  0008               	return
  7608  15B2                     __end_of_EUSART_Initialize:	
  7609                           
  7610                           	psect	text29
  7611  09E4                     __ptext29:	
  7612 ;; *************** function _OLEDUpdateDisplay *****************
  7613 ;; Defined at:
  7614 ;;		line 416 in file "OLED.h"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  clear           1    wreg     unsigned char 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  clear           1   22[BANK0 ] unsigned char 
  7619 ;;  ptr             2   20[BANK0 ] PTR unsigned char 
  7620 ;;		 -> TEST(192), 
  7621 ;;  PageAddress     1   24[BANK0 ] unsigned char 
  7622 ;;  ColumnAddres    1   23[BANK0 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;		None               void
  7625 ;; Registers used:
  7626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:       11 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    5
  7639 ;; This function calls:
  7640 ;;		_OLEDClearBuffer
  7641 ;;		_OLEDCommand
  7642 ;;		___wmul
  7643 ;;		_i2c_Address
  7644 ;;		_i2c_Start
  7645 ;;		_i2c_Stop
  7646 ;;		_i2c_Write
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _OLEDUpdateDisplay
  7654  09E4                     _OLEDUpdateDisplay:	
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _OLEDUpdateDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7658                           ;OLEDUpdateDisplay@clear stored from wreg
  7659  09E4  0020               	movlb	0	; select bank0
  7660  09E5  00B6               	movwf	OLEDUpdateDisplay@clear
  7661                           
  7662                           ;OLED.h: 418: unsigned char ColumnAddress, PageAddress;
  7663                           ;OLED.h: 419: unsigned char *ptr;
  7664                           ;OLED.h: 421: ptr = ( char * ) TEST;
  7665  09E6  3090               	movlw	144
  7666  09E7  00B4               	movwf	OLEDUpdateDisplay@ptr
  7667  09E8  3022               	movlw	34
  7668  09E9  00B5               	movwf	OLEDUpdateDisplay@ptr+1
  7669                           
  7670                           ;OLED.h: 424: OLEDCommand ( 0x22 );
  7671  09EA  3022               	movlw	34
  7672  09EB  3195  25F2  3189   	fcall	_OLEDCommand
  7673                           
  7674                           ;OLED.h: 425: OLEDCommand ( 0x00 );
  7675  09EE  3000               	movlw	0
  7676  09EF  3195  25F2  3189   	fcall	_OLEDCommand
  7677                           
  7678                           ;OLED.h: 426: OLEDCommand ( 0x07 );
  7679  09F2  3007               	movlw	7
  7680  09F3  3195  25F2  3189   	fcall	_OLEDCommand
  7681                           
  7682                           ;OLED.h: 429: OLEDCommand ( 0x21 );
  7683  09F6  3021               	movlw	33
  7684  09F7  3195  25F2  3189   	fcall	_OLEDCommand
  7685                           
  7686                           ;OLED.h: 430: OLEDCommand ( 0x00 );
  7687  09FA  3000               	movlw	0
  7688  09FB  3195  25F2  3189   	fcall	_OLEDCommand
  7689                           
  7690                           ;OLED.h: 431: OLEDCommand ( 0x7F );
  7691  09FE  307F               	movlw	127
  7692  09FF  3195  25F2  3189   	fcall	_OLEDCommand
  7693                           
  7694                           ;OLED.h: 433: for ( PageAddress = 0x00; PageAddress < 2; PageAddress++ )
  7695  0A02  0020               	movlb	0	; select bank0
  7696  0A03  01B8               	clrf	OLEDUpdateDisplay@PageAddress
  7697  0A04  3002               	movlw	2
  7698  0A05  0238               	subwf	OLEDUpdateDisplay@PageAddress,w
  7699  0A06  1803               	btfsc	3,0
  7700  0A07  2A6B               	goto	l3696
  7701  0A08                     l3676:	
  7702                           
  7703                           ;OLED.h: 434: {
  7704                           ;OLED.h: 436: OLEDCommand ( 0x22 );
  7705  0A08  3022               	movlw	34
  7706  0A09  3195  25F2  3189   	fcall	_OLEDCommand
  7707                           
  7708                           ;OLED.h: 437: OLEDCommand ( 0x00 + PageAddress );
  7709  0A0C  0020               	movlb	0	; select bank0
  7710  0A0D  0838               	movf	OLEDUpdateDisplay@PageAddress,w
  7711  0A0E  3195  25F2  3189   	fcall	_OLEDCommand
  7712                           
  7713                           ;OLED.h: 438: OLEDCommand ( 0x07 );
  7714  0A11  3007               	movlw	7
  7715  0A12  3195  25F2  3189   	fcall	_OLEDCommand
  7716                           
  7717                           ;OLED.h: 440: OLEDCommand ( 0x21 );
  7718  0A15  3021               	movlw	33
  7719  0A16  3195  25F2  3189   	fcall	_OLEDCommand
  7720                           
  7721                           ;OLED.h: 441: OLEDCommand ( 0x00 );
  7722  0A19  3000               	movlw	0
  7723  0A1A  3195  25F2  3189   	fcall	_OLEDCommand
  7724                           
  7725                           ;OLED.h: 442: OLEDCommand ( 0x7F );
  7726  0A1D  307F               	movlw	127
  7727  0A1E  3195  25F2  3189   	fcall	_OLEDCommand
  7728                           
  7729                           ;OLED.h: 444: i2c_Start ( );
  7730  0A21  3195  2536  3189   	fcall	_i2c_Start
  7731                           
  7732                           ;OLED.h: 445: i2c_Address ( 0x3C, 0 );
  7733  0A24  0020               	movlb	0	; select bank0
  7734  0A25  01A0               	clrf	i2c_Address@mode
  7735  0A26  303C               	movlw	60
  7736  0A27  3195  25B2  3189   	fcall	_i2c_Address
  7737                           
  7738                           ;OLED.h: 446: i2c_Write ( 0x40 );
  7739  0A2A  3040               	movlw	64
  7740  0A2B  3195  2553  3189   	fcall	_i2c_Write
  7741                           
  7742                           ;OLED.h: 447: for ( ColumnAddress = 0x00; ColumnAddress < 96; ColumnAddress++ )
  7743  0A2E  0020               	movlb	0	; select bank0
  7744  0A2F  01B7               	clrf	OLEDUpdateDisplay@ColumnAddress
  7745  0A30  3060               	movlw	96
  7746  0A31  0237               	subwf	OLEDUpdateDisplay@ColumnAddress,w
  7747  0A32  1803               	btfsc	3,0
  7748  0A33  2A5F               	goto	l3690
  7749  0A34                     l3684:	
  7750                           
  7751                           ;OLED.h: 448: i2c_Write ( *( ptr + ( ( PageAddress * 96) + ColumnAddress ) ) );
  7752  0A34  0837               	movf	OLEDUpdateDisplay@ColumnAddress,w
  7753  0A35  00AE               	movwf	??_OLEDUpdateDisplay
  7754  0A36  01AF               	clrf	??_OLEDUpdateDisplay+1
  7755  0A37  0838               	movf	OLEDUpdateDisplay@PageAddress,w
  7756  0A38  00B0               	movwf	??_OLEDUpdateDisplay+2
  7757  0A39  01B1               	clrf	??_OLEDUpdateDisplay+3
  7758  0A3A  0830               	movf	??_OLEDUpdateDisplay+2,w
  7759  0A3B  00A0               	movwf	___wmul@multiplier
  7760  0A3C  0831               	movf	??_OLEDUpdateDisplay+3,w
  7761  0A3D  00A1               	movwf	___wmul@multiplier+1
  7762  0A3E  3060               	movlw	96
  7763  0A3F  00A2               	movwf	___wmul@multiplicand
  7764  0A40  3000               	movlw	0
  7765  0A41  00A3               	movwf	___wmul@multiplicand+1
  7766  0A42  3196  260B  3189   	fcall	___wmul
  7767  0A45  0020               	movlb	0	; select bank0
  7768  0A46  082E               	movf	??_OLEDUpdateDisplay,w
  7769  0A47  0720               	addwf	?___wmul,w
  7770  0A48  00B2               	movwf	??_OLEDUpdateDisplay+4
  7771  0A49  082F               	movf	??_OLEDUpdateDisplay+1,w
  7772  0A4A  3D21               	addwfc	?___wmul+1,w
  7773  0A4B  00B3               	movwf	??_OLEDUpdateDisplay+5
  7774  0A4C  0832               	movf	??_OLEDUpdateDisplay+4,w
  7775  0A4D  0734               	addwf	OLEDUpdateDisplay@ptr,w
  7776  0A4E  0086               	movwf	6
  7777  0A4F  0833               	movf	??_OLEDUpdateDisplay+5,w
  7778  0A50  3D35               	addwfc	OLEDUpdateDisplay@ptr+1,w
  7779  0A51  0087               	movwf	7
  7780  0A52  0801               	movf	1,w
  7781  0A53  3195  2553  3189   	fcall	_i2c_Write
  7782  0A56  3001               	movlw	1
  7783  0A57  0020               	movlb	0	; select bank0
  7784  0A58  00AE               	movwf	??_OLEDUpdateDisplay
  7785  0A59  082E               	movf	??_OLEDUpdateDisplay,w
  7786  0A5A  07B7               	addwf	OLEDUpdateDisplay@ColumnAddress,f
  7787  0A5B  3060               	movlw	96
  7788  0A5C  0237               	subwf	OLEDUpdateDisplay@ColumnAddress,w
  7789  0A5D  1C03               	skipc
  7790  0A5E  2A34               	goto	l3684
  7791  0A5F                     l3690:	
  7792                           
  7793                           ;OLED.h: 449: i2c_Stop ( );
  7794  0A5F  3195  253B  3189   	fcall	_i2c_Stop
  7795  0A62  3001               	movlw	1
  7796  0A63  0020               	movlb	0	; select bank0
  7797  0A64  00AE               	movwf	??_OLEDUpdateDisplay
  7798  0A65  082E               	movf	??_OLEDUpdateDisplay,w
  7799  0A66  07B8               	addwf	OLEDUpdateDisplay@PageAddress,f
  7800  0A67  3002               	movlw	2
  7801  0A68  0238               	subwf	OLEDUpdateDisplay@PageAddress,w
  7802  0A69  1C03               	skipc
  7803  0A6A  2A08               	goto	l3676
  7804  0A6B                     l3696:	
  7805                           
  7806                           ;OLED.h: 450: }
  7807                           ;OLED.h: 452: if ( clear )
  7808  0A6B  0836               	movf	OLEDUpdateDisplay@clear,w
  7809  0A6C  1903               	btfsc	3,2
  7810  0A6D  0008               	return
  7811                           
  7812                           ;OLED.h: 453: OLEDClearBuffer ( );
  7813  0A6E  3196  26F4         	fcall	_OLEDClearBuffer
  7814  0A70  0008               	return
  7815  0A71                     __end_of_OLEDUpdateDisplay:	
  7816                           
  7817                           	psect	text30
  7818  16F4                     __ptext30:	
  7819 ;; *************** function _OLEDClearBuffer *****************
  7820 ;; Defined at:
  7821 ;;		line 400 in file "OLED.h"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;		None
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  ptr             2   10[BANK0 ] PTR unsigned char 
  7826 ;;		 -> TEST(192), 
  7827 ;;  PageAddress     1   13[BANK0 ] unsigned char 
  7828 ;;  ColumnAddres    1   12[BANK0 ] unsigned char 
  7829 ;; Return value:  Size  Location     Type
  7830 ;;		None               void
  7831 ;; Registers used:
  7832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;Total ram usage:        8 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    3
  7845 ;; This function calls:
  7846 ;;		___wmul
  7847 ;; This function is called by:
  7848 ;;		_OLEDUpdateDisplay
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _OLEDClearBuffer
  7854  16F4                     _OLEDClearBuffer:	
  7855                           
  7856                           ;OLED.h: 402: unsigned char *ptr;
  7857                           ;OLED.h: 403: unsigned char ColumnAddress, PageAddress;
  7858                           ;OLED.h: 405: ptr = ( char * ) TEST;
  7859                           
  7860                           ;incstack = 0
  7861                           ; Regs used in _OLEDClearBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7862  16F4  3090               	movlw	144
  7863  16F5  0020               	movlb	0	; select bank0
  7864  16F6  00AA               	movwf	OLEDClearBuffer@ptr
  7865  16F7  3022               	movlw	34
  7866  16F8  00AB               	movwf	OLEDClearBuffer@ptr+1
  7867                           
  7868                           ;OLED.h: 407: for ( PageAddress = 0x00; PageAddress < 2; PageAddress++ )
  7869  16F9  01AD               	clrf	OLEDClearBuffer@PageAddress
  7870  16FA                     L11:	
  7871  16FA  3002               	movlw	2
  7872  16FB  022D               	subwf	OLEDClearBuffer@PageAddress,w
  7873  16FC  1803               	btfsc	3,0
  7874  16FD  0008               	return
  7875                           
  7876                           ;OLED.h: 408: for ( ColumnAddress = 0x00; ColumnAddress < 96; ColumnAddress++ )
  7877  16FE  01AC               	clrf	OLEDClearBuffer@ColumnAddress
  7878  16FF  3060               	movlw	96
  7879  1700  022C               	subwf	OLEDClearBuffer@ColumnAddress,w
  7880  1701  1803               	btfsc	3,0
  7881  1702  2F28               	goto	l3216
  7882  1703                     l3210:	
  7883                           
  7884                           ;OLED.h: 409: *( ptr + ( ColumnAddress + PageAddress * 96 ) ) = 0x00;
  7885  1703  082D               	movf	OLEDClearBuffer@PageAddress,w
  7886  1704  00A6               	movwf	??_OLEDClearBuffer
  7887  1705  01A7               	clrf	??_OLEDClearBuffer+1
  7888  1706  0826               	movf	??_OLEDClearBuffer,w
  7889  1707  00A0               	movwf	___wmul@multiplier
  7890  1708  0827               	movf	??_OLEDClearBuffer+1,w
  7891  1709  00A1               	movwf	___wmul@multiplier+1
  7892  170A  3060               	movlw	96
  7893  170B  00A2               	movwf	___wmul@multiplicand
  7894  170C  3000               	movlw	0
  7895  170D  00A3               	movwf	___wmul@multiplicand+1
  7896  170E  3196  260B  3196   	fcall	___wmul
  7897  1711  0020               	movlb	0	; select bank0
  7898  1712  082C               	movf	OLEDClearBuffer@ColumnAddress,w
  7899  1713  0720               	addwf	?___wmul,w
  7900  1714  00A8               	movwf	??_OLEDClearBuffer+2
  7901  1715  0821               	movf	?___wmul+1,w
  7902  1716  1803               	skipnc
  7903  1717  0A21               	incf	?___wmul+1,w
  7904  1718  00A9               	movwf	??_OLEDClearBuffer+3
  7905  1719  0828               	movf	??_OLEDClearBuffer+2,w
  7906  171A  072A               	addwf	OLEDClearBuffer@ptr,w
  7907  171B  0086               	movwf	6
  7908  171C  0829               	movf	??_OLEDClearBuffer+3,w
  7909  171D  3D2B               	addwfc	OLEDClearBuffer@ptr+1,w
  7910  171E  0087               	movwf	7
  7911  171F  0181               	clrf	1
  7912  1720  3001               	movlw	1
  7913  1721  00A6               	movwf	??_OLEDClearBuffer
  7914  1722  0826               	movf	??_OLEDClearBuffer,w
  7915  1723  07AC               	addwf	OLEDClearBuffer@ColumnAddress,f
  7916  1724  3060               	movlw	96
  7917  1725  022C               	subwf	OLEDClearBuffer@ColumnAddress,w
  7918  1726  1C03               	skipc
  7919  1727  2F03               	goto	l3210
  7920  1728                     l3216:	
  7921  1728  3001               	movlw	1
  7922  1729  00A6               	movwf	??_OLEDClearBuffer
  7923  172A  0826               	movf	??_OLEDClearBuffer,w
  7924  172B  07AD               	addwf	OLEDClearBuffer@PageAddress,f
  7925  172C  2EFA               	goto	L11
  7926  172D                     __end_of_OLEDClearBuffer:	
  7927                           
  7928                           	psect	text31
  7929  08E6                     __ptext31:	
  7930 ;; *************** function _OLEDSetUp *****************
  7931 ;; Defined at:
  7932 ;;		line 242 in file "OLED.h"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      unsigned char 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0, pclath, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;Total ram usage:        2 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    5
  7953 ;; This function calls:
  7954 ;;		_OLEDCommand
  7955 ;; This function is called by:
  7956 ;;		_main
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           
  7961                           ;psect for function _OLEDSetUp
  7962  08E6                     _OLEDSetUp:	
  7963                           
  7964                           ;OLED.h: 244: _delay((unsigned long)((1)*(16000000/4000.0)));
  7965                           
  7966                           ;incstack = 0
  7967                           ; Regs used in _OLEDSetUp: [wreg+status,2+status,0+pclath+cstack]
  7968  08E6  3006               	movlw	6
  7969  08E7  0020               	movlb	0	; select bank0
  7970  08E8  00A7               	movwf	??_OLEDSetUp+1
  7971  08E9  3030               	movlw	48
  7972  08EA  00A6               	movwf	??_OLEDSetUp
  7973  08EB                     u5207:	
  7974  08EB  0BA6               	decfsz	??_OLEDSetUp,f
  7975  08EC  28EB               	goto	u5207
  7976  08ED  0BA7               	decfsz	??_OLEDSetUp+1,f
  7977  08EE  28EB               	goto	u5207
  7978  08EF  0000               	nop
  7979                           
  7980                           ;OLED.h: 245: PORTDbits . RD2 = 0;
  7981  08F0  0020               	movlb	0	; select bank0
  7982  08F1  110F               	bcf	15,2	;volatile
  7983                           
  7984                           ;OLED.h: 246: _delay((unsigned long)((1)*(16000000/4000.0)));
  7985  08F2  3006               	movlw	6
  7986  08F3  00A7               	movwf	??_OLEDSetUp+1
  7987  08F4  3030               	movlw	48
  7988  08F5  00A6               	movwf	??_OLEDSetUp
  7989  08F6                     u5217:	
  7990  08F6  0BA6               	decfsz	??_OLEDSetUp,f
  7991  08F7  28F6               	goto	u5217
  7992  08F8  0BA7               	decfsz	??_OLEDSetUp+1,f
  7993  08F9  28F6               	goto	u5217
  7994  08FA  0000               	nop
  7995                           
  7996                           ;OLED.h: 247: PORTDbits . RD2 = 1;
  7997  08FB  0020               	movlb	0	; select bank0
  7998  08FC  150F               	bsf	15,2	;volatile
  7999                           
  8000                           ;OLED.h: 250: OLEDCommand ( 0x81 );
  8001  08FD  3081               	movlw	129
  8002  08FE  3195  25F2  3188   	fcall	_OLEDCommand
  8003                           
  8004                           ;OLED.h: 251: OLEDCommand ( 0x4F );
  8005  0901  304F               	movlw	79
  8006  0902  3195  25F2  3188   	fcall	_OLEDCommand
  8007                           
  8008                           ;OLED.h: 252: OLEDCommand ( 0xA4 );
  8009  0905  30A4               	movlw	164
  8010  0906  3195  25F2  3188   	fcall	_OLEDCommand
  8011                           
  8012                           ;OLED.h: 253: OLEDCommand ( 0xA6 );
  8013  0909  30A6               	movlw	166
  8014  090A  3195  25F2  3188   	fcall	_OLEDCommand
  8015                           
  8016                           ;OLED.h: 254: OLEDCommand ( 0xAF );
  8017  090D  30AF               	movlw	175
  8018  090E  3195  25F2  3188   	fcall	_OLEDCommand
  8019                           
  8020                           ;OLED.h: 259: OLEDCommand ( 0x20 );
  8021  0911  3020               	movlw	32
  8022  0912  3195  25F2  3188   	fcall	_OLEDCommand
  8023                           
  8024                           ;OLED.h: 260: OLEDCommand ( 0x00 );
  8025  0915  3000               	movlw	0
  8026  0916  3195  25F2  3188   	fcall	_OLEDCommand
  8027                           
  8028                           ;OLED.h: 263: OLEDCommand ( 0x40 | 0x00 );
  8029  0919  3040               	movlw	64
  8030  091A  3195  25F2  3188   	fcall	_OLEDCommand
  8031                           
  8032                           ;OLED.h: 264: OLEDCommand ( 0xA0 | 0x01 );
  8033  091D  30A1               	movlw	161
  8034  091E  3195  25F2  3188   	fcall	_OLEDCommand
  8035                           
  8036                           ;OLED.h: 265: OLEDCommand ( 0xA8 );
  8037  0921  30A8               	movlw	168
  8038  0922  3195  25F2  3188   	fcall	_OLEDCommand
  8039                           
  8040                           ;OLED.h: 266: OLEDCommand ( 0x0F );
  8041  0925  300F               	movlw	15
  8042  0926  3195  25F2  3188   	fcall	_OLEDCommand
  8043                           
  8044                           ;OLED.h: 267: OLEDCommand ( 0xC8 );
  8045  0929  30C8               	movlw	200
  8046  092A  3195  25F2  3188   	fcall	_OLEDCommand
  8047                           
  8048                           ;OLED.h: 268: OLEDCommand ( 0xD3 );
  8049  092D  30D3               	movlw	211
  8050  092E  3195  25F2  3188   	fcall	_OLEDCommand
  8051                           
  8052                           ;OLED.h: 269: OLEDCommand ( 0x0 );
  8053  0931  3000               	movlw	0
  8054  0932  3195  25F2  3188   	fcall	_OLEDCommand
  8055                           
  8056                           ;OLED.h: 270: OLEDCommand ( 0xDA );
  8057  0935  30DA               	movlw	218
  8058  0936  3195  25F2  3188   	fcall	_OLEDCommand
  8059                           
  8060                           ;OLED.h: 271: OLEDCommand ( 0x2 );
  8061  0939  3002               	movlw	2
  8062  093A  3195  25F2  3188   	fcall	_OLEDCommand
  8063                           
  8064                           ;OLED.h: 274: OLEDCommand ( 0xD5 );
  8065  093D  30D5               	movlw	213
  8066  093E  3195  25F2  3188   	fcall	_OLEDCommand
  8067                           
  8068                           ;OLED.h: 275: OLEDCommand ( 0x80 );
  8069  0941  3080               	movlw	128
  8070  0942  3195  25F2  3188   	fcall	_OLEDCommand
  8071                           
  8072                           ;OLED.h: 276: OLEDCommand ( 0xD9 );
  8073  0945  30D9               	movlw	217
  8074  0946  3195  25F2  3188   	fcall	_OLEDCommand
  8075                           
  8076                           ;OLED.h: 277: OLEDCommand ( 0xF1 );
  8077  0949  30F1               	movlw	241
  8078  094A  3195  25F2  3188   	fcall	_OLEDCommand
  8079                           
  8080                           ;OLED.h: 278: OLEDCommand ( 0xDB );
  8081  094D  30DB               	movlw	219
  8082  094E  3195  25F2  3188   	fcall	_OLEDCommand
  8083                           
  8084                           ;OLED.h: 279: OLEDCommand ( 0x40 );
  8085  0951  3040               	movlw	64
  8086  0952  3195  25F2  3188   	fcall	_OLEDCommand
  8087                           
  8088                           ;OLED.h: 282: OLEDCommand ( 0x8D );
  8089  0955  308D               	movlw	141
  8090  0956  3195  25F2  3188   	fcall	_OLEDCommand
  8091                           
  8092                           ;OLED.h: 283: OLEDCommand ( 0x14 );
  8093  0959  3014               	movlw	20
  8094  095A  3195  25F2         	fcall	_OLEDCommand
  8095  095C  0008               	return
  8096  095D                     __end_of_OLEDSetUp:	
  8097                           ;OLED.h: 286: return 0x00;
  8098                           ;	Return value of _OLEDSetUp is never used
  8099                           
  8100                           
  8101                           	psect	text32
  8102  15F2                     __ptext32:	
  8103 ;; *************** function _OLEDCommand *****************
  8104 ;; Defined at:
  8105 ;;		line 290 in file "OLED.h"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  c               1    wreg     unsigned char 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  c               1    4[BANK0 ] unsigned char 
  8110 ;;  command         1    5[BANK0 ] unsigned char 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;		None               void
  8113 ;; Registers used:
  8114 ;;		wreg, status,2, status,0, pclath, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;Total ram usage:        2 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; Hardware stack levels required when called:    4
  8127 ;; This function calls:
  8128 ;;		_i2c_Address
  8129 ;;		_i2c_Start
  8130 ;;		_i2c_Stop
  8131 ;;		_i2c_Write
  8132 ;; This function is called by:
  8133 ;;		_OLEDSetUp
  8134 ;;		_OLEDUpdateDisplay
  8135 ;;		_OLEDPixel
  8136 ;;		_OLEDFill
  8137 ;;		_OLEDInvertedDisplay
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function _OLEDCommand
  8143  15F2                     _OLEDCommand:	
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _OLEDCommand: [wreg+status,2+status,0+pclath+cstack]
  8147                           ;OLEDCommand@c stored from wreg
  8148  15F2  0020               	movlb	0	; select bank0
  8149  15F3  00A4               	movwf	OLEDCommand@c
  8150                           
  8151                           ;OLED.h: 292: unsigned char command = 0x00;
  8152  15F4  01A5               	clrf	OLEDCommand@command
  8153                           
  8154                           ;OLED.h: 294: i2c_Start ( );
  8155  15F5  3195  2536  3195   	fcall	_i2c_Start
  8156                           
  8157                           ;OLED.h: 295: i2c_Address ( 0x3C, 0 );
  8158  15F8  0020               	movlb	0	; select bank0
  8159  15F9  01A0               	clrf	i2c_Address@mode
  8160  15FA  303C               	movlw	60
  8161  15FB  3195  25B2  3195   	fcall	_i2c_Address
  8162                           
  8163                           ;OLED.h: 296: i2c_Write ( command );
  8164  15FE  0020               	movlb	0	; select bank0
  8165  15FF  0825               	movf	OLEDCommand@command,w
  8166  1600  3195  2553  3195   	fcall	_i2c_Write
  8167                           
  8168                           ;OLED.h: 297: i2c_Write ( c );
  8169  1603  0020               	movlb	0	; select bank0
  8170  1604  0824               	movf	OLEDCommand@c,w
  8171  1605  3195  2553  3195   	fcall	_i2c_Write
  8172                           
  8173                           ;OLED.h: 298: i2c_Stop ( );
  8174  1608  3195  253B         	fcall	_i2c_Stop
  8175  160A  0008               	return
  8176  160B                     __end_of_OLEDCommand:	
  8177                           
  8178                           	psect	text33
  8179  15B2                     __ptext33:	
  8180 ;; *************** function _i2c_Address *****************
  8181 ;; Defined at:
  8182 ;;		line 55 in file "i2c.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  address         1    wreg     unsigned char 
  8185 ;;  mode            1    0[BANK0 ] unsigned char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  address         1    2[BANK0 ] unsigned char 
  8188 ;;  l_address       1    3[BANK0 ] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;		None               void
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0, pclath, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;Total ram usage:        4 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    3
  8205 ;; This function calls:
  8206 ;;		_i2c_Wait
  8207 ;; This function is called by:
  8208 ;;		_OLEDCommand
  8209 ;;		_OLEDUpdateDisplay
  8210 ;;		_OLEDData
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           
  8215                           ;psect for function _i2c_Address
  8216  15B2                     _i2c_Address:	
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _i2c_Address: [wreg+status,2+status,0+pclath+cstack]
  8220                           ;i2c_Address@address stored from wreg
  8221  15B2  0020               	movlb	0	; select bank0
  8222  15B3  00A2               	movwf	i2c_Address@address
  8223                           
  8224                           ;i2c.c: 57: unsigned char l_address;
  8225                           ;i2c.c: 59: l_address=address<<1;
  8226  15B4  3522               	lslf	i2c_Address@address,w
  8227  15B5  00A1               	movwf	??_i2c_Address
  8228  15B6  0821               	movf	??_i2c_Address,w
  8229  15B7  00A3               	movwf	i2c_Address@l_address
  8230                           
  8231                           ;i2c.c: 60: l_address+=mode;
  8232  15B8  0820               	movf	i2c_Address@mode,w
  8233  15B9  00A1               	movwf	??_i2c_Address
  8234  15BA  0821               	movf	??_i2c_Address,w
  8235  15BB  07A3               	addwf	i2c_Address@l_address,f
  8236                           
  8237                           ;i2c.c: 61: i2c_Wait();
  8238  15BC  3195  254B         	fcall	_i2c_Wait
  8239                           
  8240                           ;i2c.c: 62: SSPBUF = l_address;
  8241  15BE  0020               	movlb	0	; select bank0
  8242  15BF  0823               	movf	i2c_Address@l_address,w
  8243  15C0  0024               	movlb	4	; select bank4
  8244  15C1  0091               	movwf	17	;volatile
  8245  15C2  0008               	return
  8246  15C3                     __end_of_i2c_Address:	
  8247                           
  8248                           	psect	text34
  8249  0E24                     __ptext34:	
  8250 ;; *************** function _ODOScroll_units *****************
  8251 ;; Defined at:
  8252 ;;		line 785 in file "OLED.h"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  position        2    6[BANK0 ] unsigned int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  i               2   25[BANK0 ] int 
  8257 ;;  ptrODOFonts     2   23[BANK0 ] unsigned int 
  8258 ;;  byteIndex       2   21[BANK0 ] unsigned int 
  8259 ;;  ptrbuffer2      2   19[BANK0 ] unsigned int 
  8260 ;;  ptrbuffer       2   17[BANK0 ] unsigned int 
  8261 ;;  buffer2         2   15[BANK0 ] unsigned int 
  8262 ;;  buffer          2   13[BANK0 ] unsigned int 
  8263 ;;  ptrTEST         2   11[BANK0 ] unsigned int 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;		None               void
  8266 ;; Registers used:
  8267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8273 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;Total ram usage:       21 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    3
  8280 ;; This function calls:
  8281 ;;		___wmul
  8282 ;; This function is called by:
  8283 ;;		_main
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           
  8288                           ;psect for function _ODOScroll_units
  8289  0E24                     _ODOScroll_units:	
  8290                           
  8291                           ;OLED.h: 787: unsigned int byteIndex;
  8292                           ;OLED.h: 788: unsigned int buffer;
  8293                           ;OLED.h: 789: unsigned int buffer2;
  8294                           ;OLED.h: 790: unsigned int ptrTEST = &TEST;
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _ODOScroll_units: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8298  0E24  3090               	movlw	144
  8299  0E25  0020               	movlb	0	; select bank0
  8300  0E26  00AB               	movwf	ODOScroll_units@ptrTEST
  8301  0E27  3022               	movlw	34
  8302  0E28  00AC               	movwf	ODOScroll_units@ptrTEST+1
  8303                           
  8304                           ;OLED.h: 791: unsigned int ptrODOFonts = &ODOFonts;
  8305  0E29  30EA               	movlw	low (_ODOFonts| (0+32768))
  8306  0E2A  00B7               	movwf	ODOScroll_units@ptrODOFonts
  8307  0E2B  3083               	movlw	high (_ODOFonts| (0+32768))
  8308  0E2C  00B8               	movwf	ODOScroll_units@ptrODOFonts+1
  8309                           
  8310                           ;OLED.h: 792: unsigned int ptrbuffer = &buffer;
  8311  0E2D  302D               	movlw	low ODOScroll_units@buffer
  8312  0E2E  00B1               	movwf	ODOScroll_units@ptrbuffer
  8313  0E2F  3000               	movlw	high ODOScroll_units@buffer
  8314  0E30  00B2               	movwf	ODOScroll_units@ptrbuffer+1
  8315                           
  8316                           ;OLED.h: 793: unsigned int ptrbuffer2 = &buffer2;
  8317  0E31  302F               	movlw	low ODOScroll_units@buffer2
  8318  0E32  00B3               	movwf	ODOScroll_units@ptrbuffer2
  8319  0E33  3000               	movlw	high ODOScroll_units@buffer2
  8320  0E34  00B4               	movwf	ODOScroll_units@ptrbuffer2+1
  8321                           
  8322                           ;OLED.h: 795: for(int i=0;i<12;i++)
  8323  0E35  01B9               	clrf	ODOScroll_units@i
  8324  0E36  01BA               	clrf	ODOScroll_units@i+1
  8325  0E37                     L12:	
  8326  0E37  083A               	movf	ODOScroll_units@i+1,w
  8327  0E38  3A80               	xorlw	128
  8328  0E39  00A8               	movwf	??_ODOScroll_units
  8329  0E3A  3080               	movlw	128
  8330  0E3B  0228               	subwf	??_ODOScroll_units,w
  8331  0E3C  1D03               	skipz
  8332  0E3D  2E40               	goto	u4225
  8333  0E3E  300C               	movlw	12
  8334  0E3F  0239               	subwf	ODOScroll_units@i,w
  8335  0E40                     u4225:	
  8336  0E40  1803               	btfsc	3,0
  8337  0E41  0008               	return
  8338                           
  8339                           ;OLED.h: 796: {
  8340                           ;OLED.h: 797: buffer = 0x0000;
  8341  0E42  0020               	movlb	0	; select bank0
  8342  0E43  01AD               	clrf	ODOScroll_units@buffer
  8343  0E44  01AE               	clrf	ODOScroll_units@buffer+1
  8344                           
  8345                           ;OLED.h: 798: buffer2 = 0x0000;
  8346  0E45  01AF               	clrf	ODOScroll_units@buffer2
  8347  0E46  01B0               	clrf	ODOScroll_units@buffer2+1
  8348                           
  8349                           ;OLED.h: 799: byteIndex = (((unsigned int)(position/8))*12)+i;
  8350  0E47  0827               	movf	ODOScroll_units@position+1,w
  8351  0E48  00A9               	movwf	??_ODOScroll_units+1
  8352  0E49  0826               	movf	ODOScroll_units@position,w
  8353  0E4A  00A8               	movwf	??_ODOScroll_units
  8354  0E4B  36A9               	lsrf	??_ODOScroll_units+1,f
  8355  0E4C  0CA8               	rrf	??_ODOScroll_units,f
  8356  0E4D  36A9               	lsrf	??_ODOScroll_units+1,f
  8357  0E4E  0CA8               	rrf	??_ODOScroll_units,f
  8358  0E4F  36A9               	lsrf	??_ODOScroll_units+1,f
  8359  0E50  0CA8               	rrf	??_ODOScroll_units,f
  8360  0E51  0828               	movf	??_ODOScroll_units,w
  8361  0E52  00A0               	movwf	___wmul@multiplier
  8362  0E53  0829               	movf	??_ODOScroll_units+1,w
  8363  0E54  00A1               	movwf	___wmul@multiplier+1
  8364  0E55  300C               	movlw	12
  8365  0E56  00A2               	movwf	___wmul@multiplicand
  8366  0E57  3000               	movlw	0
  8367  0E58  00A3               	movwf	___wmul@multiplicand+1
  8368  0E59  3196  260B  318E   	fcall	___wmul
  8369  0E5C  0020               	movlb	0	; select bank0
  8370  0E5D  0839               	movf	ODOScroll_units@i,w
  8371  0E5E  0720               	addwf	?___wmul,w
  8372  0E5F  00B5               	movwf	ODOScroll_units@byteIndex
  8373  0E60  083A               	movf	ODOScroll_units@i+1,w
  8374  0E61  3D21               	addwfc	?___wmul+1,w
  8375  0E62  00B6               	movwf	ODOScroll_units@byteIndex+1
  8376                           
  8377                           ;OLED.h: 800: __builtin_memcpy(ptrbuffer,ptrODOFonts+byteIndex,1);
  8378  0E63  0831               	movf	ODOScroll_units@ptrbuffer,w
  8379  0E64  0086               	movwf	6
  8380  0E65  0832               	movf	ODOScroll_units@ptrbuffer+1,w
  8381  0E66  0087               	movwf	7
  8382  0E67  0020               	movlb	0	; select bank0
  8383  0E68  0835               	movf	ODOScroll_units@byteIndex,w
  8384  0E69  0737               	addwf	ODOScroll_units@ptrODOFonts,w
  8385  0E6A  0084               	movwf	4
  8386  0E6B  0836               	movf	ODOScroll_units@byteIndex+1,w
  8387  0E6C  3D38               	addwfc	ODOScroll_units@ptrODOFonts+1,w
  8388  0E6D  0085               	movwf	5
  8389  0E6E  3001               	movlw	1
  8390  0E6F  00A8               	movwf	??_ODOScroll_units
  8391  0E70                     u423m0:	
  8392  0E70  0012               	moviw fsr0++
  8393  0E71  001E               	movwi fsr1++
  8394  0E72  0BA8               	decfsz	??_ODOScroll_units,f
  8395  0E73  2E70               	goto	u423m0
  8396                           
  8397                           ;OLED.h: 801: __builtin_memcpy(ptrbuffer+1,ptrODOFonts+byteIndex+12,1);
  8398  0E74  0020               	movlb	0	; select bank0
  8399  0E75  0831               	movf	ODOScroll_units@ptrbuffer,w
  8400  0E76  0086               	movwf	6
  8401  0E77  0832               	movf	ODOScroll_units@ptrbuffer+1,w
  8402  0E78  0087               	movwf	7
  8403  0E79  3141               	addfsr 1,1
  8404  0E7A  0020               	movlb	0	; select bank0
  8405  0E7B  0835               	movf	ODOScroll_units@byteIndex,w
  8406  0E7C  0737               	addwf	ODOScroll_units@ptrODOFonts,w
  8407  0E7D  00A8               	movwf	??_ODOScroll_units
  8408  0E7E  0836               	movf	ODOScroll_units@byteIndex+1,w
  8409  0E7F  3D38               	addwfc	ODOScroll_units@ptrODOFonts+1,w
  8410  0E80  00A9               	movwf	??_ODOScroll_units+1
  8411  0E81  0828               	movf	??_ODOScroll_units,w
  8412  0E82  0084               	movwf	4
  8413  0E83  0829               	movf	??_ODOScroll_units+1,w
  8414  0E84  0085               	movwf	5
  8415  0E85  310C               	addfsr 0,12
  8416  0E86  3001               	movlw	1
  8417  0E87  00AA               	movwf	??_ODOScroll_units+2
  8418  0E88                     u424m0:	
  8419  0E88  0012               	moviw fsr0++
  8420  0E89  001E               	movwi fsr1++
  8421  0E8A  0BAA               	decfsz	??_ODOScroll_units+2,f
  8422  0E8B  2E88               	goto	u424m0
  8423                           
  8424                           ;OLED.h: 802: __builtin_memcpy(ptrbuffer2,ptrODOFonts+byteIndex+12,1);
  8425  0E8C  0020               	movlb	0	; select bank0
  8426  0E8D  0833               	movf	ODOScroll_units@ptrbuffer2,w
  8427  0E8E  0086               	movwf	6
  8428  0E8F  0834               	movf	ODOScroll_units@ptrbuffer2+1,w
  8429  0E90  0087               	movwf	7
  8430  0E91  0020               	movlb	0	; select bank0
  8431  0E92  0835               	movf	ODOScroll_units@byteIndex,w
  8432  0E93  0737               	addwf	ODOScroll_units@ptrODOFonts,w
  8433  0E94  00A8               	movwf	??_ODOScroll_units
  8434  0E95  0836               	movf	ODOScroll_units@byteIndex+1,w
  8435  0E96  3D38               	addwfc	ODOScroll_units@ptrODOFonts+1,w
  8436  0E97  00A9               	movwf	??_ODOScroll_units+1
  8437  0E98  0828               	movf	??_ODOScroll_units,w
  8438  0E99  0084               	movwf	4
  8439  0E9A  0829               	movf	??_ODOScroll_units+1,w
  8440  0E9B  0085               	movwf	5
  8441  0E9C  310C               	addfsr 0,12
  8442  0E9D  3001               	movlw	1
  8443  0E9E  00AA               	movwf	??_ODOScroll_units+2
  8444  0E9F                     u425m0:	
  8445  0E9F  0012               	moviw fsr0++
  8446  0EA0  001E               	movwi fsr1++
  8447  0EA1  0BAA               	decfsz	??_ODOScroll_units+2,f
  8448  0EA2  2E9F               	goto	u425m0
  8449                           
  8450                           ;OLED.h: 803: __builtin_memcpy(ptrbuffer2+1,ptrODOFonts+byteIndex+24,1);
  8451  0EA3  0020               	movlb	0	; select bank0
  8452  0EA4  0833               	movf	ODOScroll_units@ptrbuffer2,w
  8453  0EA5  0086               	movwf	6
  8454  0EA6  0834               	movf	ODOScroll_units@ptrbuffer2+1,w
  8455  0EA7  0087               	movwf	7
  8456  0EA8  3141               	addfsr 1,1
  8457  0EA9  0020               	movlb	0	; select bank0
  8458  0EAA  0835               	movf	ODOScroll_units@byteIndex,w
  8459  0EAB  0737               	addwf	ODOScroll_units@ptrODOFonts,w
  8460  0EAC  00A8               	movwf	??_ODOScroll_units
  8461  0EAD  0836               	movf	ODOScroll_units@byteIndex+1,w
  8462  0EAE  3D38               	addwfc	ODOScroll_units@ptrODOFonts+1,w
  8463  0EAF  00A9               	movwf	??_ODOScroll_units+1
  8464  0EB0  0828               	movf	??_ODOScroll_units,w
  8465  0EB1  0084               	movwf	4
  8466  0EB2  0829               	movf	??_ODOScroll_units+1,w
  8467  0EB3  0085               	movwf	5
  8468  0EB4  3118               	addfsr 0,24
  8469  0EB5  3001               	movlw	1
  8470  0EB6  00AA               	movwf	??_ODOScroll_units+2
  8471  0EB7                     u426m0:	
  8472  0EB7  0012               	moviw fsr0++
  8473  0EB8  001E               	movwi fsr1++
  8474  0EB9  0BAA               	decfsz	??_ODOScroll_units+2,f
  8475  0EBA  2EB7               	goto	u426m0
  8476                           
  8477                           ;OLED.h: 804: buffer = buffer>>(position%8);
  8478  0EBB  0020               	movlb	0	; select bank0
  8479  0EBC  082E               	movf	ODOScroll_units@buffer+1,w
  8480  0EBD  00A9               	movwf	??_ODOScroll_units+1
  8481  0EBE  082D               	movf	ODOScroll_units@buffer,w
  8482  0EBF  00A8               	movwf	??_ODOScroll_units
  8483  0EC0  0826               	movf	ODOScroll_units@position,w
  8484  0EC1  3907               	andlw	7
  8485  0EC2  0A89               	incf	9,f
  8486  0EC3  2EC6               	goto	u4274
  8487  0EC4                     u4275:	
  8488  0EC4  36A9               	lsrf	??_ODOScroll_units+1,f
  8489  0EC5  0CA8               	rrf	??_ODOScroll_units,f
  8490  0EC6                     u4274:	
  8491  0EC6  0B89               	decfsz	9,f
  8492  0EC7  2EC4               	goto	u4275
  8493  0EC8  0828               	movf	??_ODOScroll_units,w
  8494  0EC9  00AD               	movwf	ODOScroll_units@buffer
  8495  0ECA  0829               	movf	??_ODOScroll_units+1,w
  8496  0ECB  00AE               	movwf	ODOScroll_units@buffer+1
  8497                           
  8498                           ;OLED.h: 805: buffer2 = buffer2>>(position%8);
  8499  0ECC  0830               	movf	ODOScroll_units@buffer2+1,w
  8500  0ECD  00A9               	movwf	??_ODOScroll_units+1
  8501  0ECE  082F               	movf	ODOScroll_units@buffer2,w
  8502  0ECF  00A8               	movwf	??_ODOScroll_units
  8503  0ED0  0826               	movf	ODOScroll_units@position,w
  8504  0ED1  3907               	andlw	7
  8505  0ED2  0A89               	incf	9,f
  8506  0ED3  2ED6               	goto	u4284
  8507  0ED4                     u4285:	
  8508  0ED4  36A9               	lsrf	??_ODOScroll_units+1,f
  8509  0ED5  0CA8               	rrf	??_ODOScroll_units,f
  8510  0ED6                     u4284:	
  8511  0ED6  0B89               	decfsz	9,f
  8512  0ED7  2ED4               	goto	u4285
  8513  0ED8  0828               	movf	??_ODOScroll_units,w
  8514  0ED9  00AF               	movwf	ODOScroll_units@buffer2
  8515  0EDA  0829               	movf	??_ODOScroll_units+1,w
  8516  0EDB  00B0               	movwf	ODOScroll_units@buffer2+1
  8517                           
  8518                           ;OLED.h: 806: __builtin_memcpy(ptrTEST+68+i,ptrbuffer,1);
  8519  0EDC  082B               	movf	ODOScroll_units@ptrTEST,w
  8520  0EDD  0739               	addwf	ODOScroll_units@i,w
  8521  0EDE  00A8               	movwf	??_ODOScroll_units
  8522  0EDF  082C               	movf	ODOScroll_units@ptrTEST+1,w
  8523  0EE0  3D3A               	addwfc	ODOScroll_units@i+1,w
  8524  0EE1  00A9               	movwf	??_ODOScroll_units+1
  8525  0EE2  0828               	movf	??_ODOScroll_units,w
  8526  0EE3  3E44               	addlw	68
  8527  0EE4  0086               	movwf	6
  8528  0EE5  3000               	movlw	0
  8529  0EE6  3D29               	addwfc	??_ODOScroll_units+1,w
  8530  0EE7  0087               	movwf	7
  8531  0EE8  0020               	movlb	0	; select bank0
  8532  0EE9  0831               	movf	ODOScroll_units@ptrbuffer,w
  8533  0EEA  0084               	movwf	4
  8534  0EEB  0832               	movf	ODOScroll_units@ptrbuffer+1,w
  8535  0EEC  0085               	movwf	5
  8536  0EED  3001               	movlw	1
  8537  0EEE  00AA               	movwf	??_ODOScroll_units+2
  8538  0EEF                     u429m0:	
  8539  0EEF  0012               	moviw fsr0++
  8540  0EF0  001E               	movwi fsr1++
  8541  0EF1  0BAA               	decfsz	??_ODOScroll_units+2,f
  8542  0EF2  2EEF               	goto	u429m0
  8543                           
  8544                           ;OLED.h: 807: __builtin_memcpy(ptrTEST+68+i+96,ptrbuffer2,1);
  8545  0EF3  0020               	movlb	0	; select bank0
  8546  0EF4  082B               	movf	ODOScroll_units@ptrTEST,w
  8547  0EF5  0739               	addwf	ODOScroll_units@i,w
  8548  0EF6  00A8               	movwf	??_ODOScroll_units
  8549  0EF7  082C               	movf	ODOScroll_units@ptrTEST+1,w
  8550  0EF8  3D3A               	addwfc	ODOScroll_units@i+1,w
  8551  0EF9  00A9               	movwf	??_ODOScroll_units+1
  8552  0EFA  0828               	movf	??_ODOScroll_units,w
  8553  0EFB  3EA4               	addlw	164
  8554  0EFC  0086               	movwf	6
  8555  0EFD  3000               	movlw	0
  8556  0EFE  3D29               	addwfc	??_ODOScroll_units+1,w
  8557  0EFF  0087               	movwf	7
  8558  0F00  0020               	movlb	0	; select bank0
  8559  0F01  0833               	movf	ODOScroll_units@ptrbuffer2,w
  8560  0F02  0084               	movwf	4
  8561  0F03  0834               	movf	ODOScroll_units@ptrbuffer2+1,w
  8562  0F04  0085               	movwf	5
  8563  0F05  3001               	movlw	1
  8564  0F06  00AA               	movwf	??_ODOScroll_units+2
  8565  0F07                     u430m0:	
  8566  0F07  0012               	moviw fsr0++
  8567  0F08  001E               	movwi fsr1++
  8568  0F09  0BAA               	decfsz	??_ODOScroll_units+2,f
  8569  0F0A  2F07               	goto	u430m0
  8570  0F0B  3001               	movlw	1
  8571  0F0C  0020               	movlb	0	; select bank0
  8572  0F0D  07B9               	addwf	ODOScroll_units@i,f
  8573  0F0E  3000               	movlw	0
  8574  0F0F  3DBA               	addwfc	ODOScroll_units@i+1,f
  8575  0F10  2E37               	goto	L12
  8576  0F11                     __end_of_ODOScroll_units:	
  8577                           
  8578                           	psect	text35
  8579  0D37                     __ptext35:	
  8580 ;; *************** function _ODOScroll_tens *****************
  8581 ;; Defined at:
  8582 ;;		line 811 in file "OLED.h"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  position        2    6[BANK0 ] unsigned int 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  i               2   25[BANK0 ] int 
  8587 ;;  ptrODOFonts     2   23[BANK0 ] unsigned int 
  8588 ;;  byteIndex       2   21[BANK0 ] unsigned int 
  8589 ;;  ptrbuffer2      2   19[BANK0 ] unsigned int 
  8590 ;;  ptrbuffer       2   17[BANK0 ] unsigned int 
  8591 ;;  buffer2         2   15[BANK0 ] unsigned int 
  8592 ;;  buffer          2   13[BANK0 ] unsigned int 
  8593 ;;  ptrTEST         2   11[BANK0 ] unsigned int 
  8594 ;; Return value:  Size  Location     Type
  8595 ;;		None               void
  8596 ;; Registers used:
  8597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;Total ram usage:       21 bytes
  8608 ;; Hardware stack levels used:    1
  8609 ;; Hardware stack levels required when called:    3
  8610 ;; This function calls:
  8611 ;;		___wmul
  8612 ;; This function is called by:
  8613 ;;		_main
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           
  8618                           ;psect for function _ODOScroll_tens
  8619  0D37                     _ODOScroll_tens:	
  8620                           
  8621                           ;OLED.h: 813: unsigned int byteIndex;
  8622                           ;OLED.h: 814: unsigned int buffer;
  8623                           ;OLED.h: 815: unsigned int buffer2;
  8624                           ;OLED.h: 816: unsigned int ptrTEST = &TEST;
  8625                           
  8626                           ;incstack = 0
  8627                           ; Regs used in _ODOScroll_tens: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8628  0D37  3090               	movlw	144
  8629  0D38  0020               	movlb	0	; select bank0
  8630  0D39  00AB               	movwf	ODOScroll_tens@ptrTEST
  8631  0D3A  3022               	movlw	34
  8632  0D3B  00AC               	movwf	ODOScroll_tens@ptrTEST+1
  8633                           
  8634                           ;OLED.h: 817: unsigned int ptrODOFonts = &ODOFonts;
  8635  0D3C  30EA               	movlw	low (_ODOFonts| (0+32768))
  8636  0D3D  00B7               	movwf	ODOScroll_tens@ptrODOFonts
  8637  0D3E  3083               	movlw	high (_ODOFonts| (0+32768))
  8638  0D3F  00B8               	movwf	ODOScroll_tens@ptrODOFonts+1
  8639                           
  8640                           ;OLED.h: 818: unsigned int ptrbuffer = &buffer;
  8641  0D40  302D               	movlw	low ODOScroll_tens@buffer
  8642  0D41  00B1               	movwf	ODOScroll_tens@ptrbuffer
  8643  0D42  3000               	movlw	high ODOScroll_tens@buffer
  8644  0D43  00B2               	movwf	ODOScroll_tens@ptrbuffer+1
  8645                           
  8646                           ;OLED.h: 819: unsigned int ptrbuffer2 = &buffer2;
  8647  0D44  302F               	movlw	low ODOScroll_tens@buffer2
  8648  0D45  00B3               	movwf	ODOScroll_tens@ptrbuffer2
  8649  0D46  3000               	movlw	high ODOScroll_tens@buffer2
  8650  0D47  00B4               	movwf	ODOScroll_tens@ptrbuffer2+1
  8651                           
  8652                           ;OLED.h: 821: for(int i=0;i<12;i++)
  8653  0D48  01B9               	clrf	ODOScroll_tens@i
  8654  0D49  01BA               	clrf	ODOScroll_tens@i+1
  8655  0D4A                     L13:	
  8656  0D4A  083A               	movf	ODOScroll_tens@i+1,w
  8657  0D4B  3A80               	xorlw	128
  8658  0D4C  00A8               	movwf	??_ODOScroll_tens
  8659  0D4D  3080               	movlw	128
  8660  0D4E  0228               	subwf	??_ODOScroll_tens,w
  8661  0D4F  1D03               	skipz
  8662  0D50  2D53               	goto	u4325
  8663  0D51  300C               	movlw	12
  8664  0D52  0239               	subwf	ODOScroll_tens@i,w
  8665  0D53                     u4325:	
  8666  0D53  1803               	btfsc	3,0
  8667  0D54  0008               	return
  8668                           
  8669                           ;OLED.h: 822: {
  8670                           ;OLED.h: 823: buffer = 0x0000;
  8671  0D55  0020               	movlb	0	; select bank0
  8672  0D56  01AD               	clrf	ODOScroll_tens@buffer
  8673  0D57  01AE               	clrf	ODOScroll_tens@buffer+1
  8674                           
  8675                           ;OLED.h: 824: buffer2 = 0x0000;
  8676  0D58  01AF               	clrf	ODOScroll_tens@buffer2
  8677  0D59  01B0               	clrf	ODOScroll_tens@buffer2+1
  8678                           
  8679                           ;OLED.h: 825: byteIndex = (((unsigned int)(position/8))*12)+i;
  8680  0D5A  0827               	movf	ODOScroll_tens@position+1,w
  8681  0D5B  00A9               	movwf	??_ODOScroll_tens+1
  8682  0D5C  0826               	movf	ODOScroll_tens@position,w
  8683  0D5D  00A8               	movwf	??_ODOScroll_tens
  8684  0D5E  36A9               	lsrf	??_ODOScroll_tens+1,f
  8685  0D5F  0CA8               	rrf	??_ODOScroll_tens,f
  8686  0D60  36A9               	lsrf	??_ODOScroll_tens+1,f
  8687  0D61  0CA8               	rrf	??_ODOScroll_tens,f
  8688  0D62  36A9               	lsrf	??_ODOScroll_tens+1,f
  8689  0D63  0CA8               	rrf	??_ODOScroll_tens,f
  8690  0D64  0828               	movf	??_ODOScroll_tens,w
  8691  0D65  00A0               	movwf	___wmul@multiplier
  8692  0D66  0829               	movf	??_ODOScroll_tens+1,w
  8693  0D67  00A1               	movwf	___wmul@multiplier+1
  8694  0D68  300C               	movlw	12
  8695  0D69  00A2               	movwf	___wmul@multiplicand
  8696  0D6A  3000               	movlw	0
  8697  0D6B  00A3               	movwf	___wmul@multiplicand+1
  8698  0D6C  3196  260B  318D   	fcall	___wmul
  8699  0D6F  0020               	movlb	0	; select bank0
  8700  0D70  0839               	movf	ODOScroll_tens@i,w
  8701  0D71  0720               	addwf	?___wmul,w
  8702  0D72  00B5               	movwf	ODOScroll_tens@byteIndex
  8703  0D73  083A               	movf	ODOScroll_tens@i+1,w
  8704  0D74  3D21               	addwfc	?___wmul+1,w
  8705  0D75  00B6               	movwf	ODOScroll_tens@byteIndex+1
  8706                           
  8707                           ;OLED.h: 826: __builtin_memcpy(ptrbuffer,ptrODOFonts+byteIndex,1);
  8708  0D76  0831               	movf	ODOScroll_tens@ptrbuffer,w
  8709  0D77  0086               	movwf	6
  8710  0D78  0832               	movf	ODOScroll_tens@ptrbuffer+1,w
  8711  0D79  0087               	movwf	7
  8712  0D7A  0020               	movlb	0	; select bank0
  8713  0D7B  0835               	movf	ODOScroll_tens@byteIndex,w
  8714  0D7C  0737               	addwf	ODOScroll_tens@ptrODOFonts,w
  8715  0D7D  0084               	movwf	4
  8716  0D7E  0836               	movf	ODOScroll_tens@byteIndex+1,w
  8717  0D7F  3D38               	addwfc	ODOScroll_tens@ptrODOFonts+1,w
  8718  0D80  0085               	movwf	5
  8719  0D81  3001               	movlw	1
  8720  0D82  00A8               	movwf	??_ODOScroll_tens
  8721  0D83                     u433m0:	
  8722  0D83  0012               	moviw fsr0++
  8723  0D84  001E               	movwi fsr1++
  8724  0D85  0BA8               	decfsz	??_ODOScroll_tens,f
  8725  0D86  2D83               	goto	u433m0
  8726                           
  8727                           ;OLED.h: 827: __builtin_memcpy(ptrbuffer+1,ptrODOFonts+byteIndex+12,1);
  8728  0D87  0020               	movlb	0	; select bank0
  8729  0D88  0831               	movf	ODOScroll_tens@ptrbuffer,w
  8730  0D89  0086               	movwf	6
  8731  0D8A  0832               	movf	ODOScroll_tens@ptrbuffer+1,w
  8732  0D8B  0087               	movwf	7
  8733  0D8C  3141               	addfsr 1,1
  8734  0D8D  0020               	movlb	0	; select bank0
  8735  0D8E  0835               	movf	ODOScroll_tens@byteIndex,w
  8736  0D8F  0737               	addwf	ODOScroll_tens@ptrODOFonts,w
  8737  0D90  00A8               	movwf	??_ODOScroll_tens
  8738  0D91  0836               	movf	ODOScroll_tens@byteIndex+1,w
  8739  0D92  3D38               	addwfc	ODOScroll_tens@ptrODOFonts+1,w
  8740  0D93  00A9               	movwf	??_ODOScroll_tens+1
  8741  0D94  0828               	movf	??_ODOScroll_tens,w
  8742  0D95  0084               	movwf	4
  8743  0D96  0829               	movf	??_ODOScroll_tens+1,w
  8744  0D97  0085               	movwf	5
  8745  0D98  310C               	addfsr 0,12
  8746  0D99  3001               	movlw	1
  8747  0D9A  00AA               	movwf	??_ODOScroll_tens+2
  8748  0D9B                     u434m0:	
  8749  0D9B  0012               	moviw fsr0++
  8750  0D9C  001E               	movwi fsr1++
  8751  0D9D  0BAA               	decfsz	??_ODOScroll_tens+2,f
  8752  0D9E  2D9B               	goto	u434m0
  8753                           
  8754                           ;OLED.h: 828: __builtin_memcpy(ptrbuffer2,ptrODOFonts+byteIndex+12,1);
  8755  0D9F  0020               	movlb	0	; select bank0
  8756  0DA0  0833               	movf	ODOScroll_tens@ptrbuffer2,w
  8757  0DA1  0086               	movwf	6
  8758  0DA2  0834               	movf	ODOScroll_tens@ptrbuffer2+1,w
  8759  0DA3  0087               	movwf	7
  8760  0DA4  0020               	movlb	0	; select bank0
  8761  0DA5  0835               	movf	ODOScroll_tens@byteIndex,w
  8762  0DA6  0737               	addwf	ODOScroll_tens@ptrODOFonts,w
  8763  0DA7  00A8               	movwf	??_ODOScroll_tens
  8764  0DA8  0836               	movf	ODOScroll_tens@byteIndex+1,w
  8765  0DA9  3D38               	addwfc	ODOScroll_tens@ptrODOFonts+1,w
  8766  0DAA  00A9               	movwf	??_ODOScroll_tens+1
  8767  0DAB  0828               	movf	??_ODOScroll_tens,w
  8768  0DAC  0084               	movwf	4
  8769  0DAD  0829               	movf	??_ODOScroll_tens+1,w
  8770  0DAE  0085               	movwf	5
  8771  0DAF  310C               	addfsr 0,12
  8772  0DB0  3001               	movlw	1
  8773  0DB1  00AA               	movwf	??_ODOScroll_tens+2
  8774  0DB2                     u435m0:	
  8775  0DB2  0012               	moviw fsr0++
  8776  0DB3  001E               	movwi fsr1++
  8777  0DB4  0BAA               	decfsz	??_ODOScroll_tens+2,f
  8778  0DB5  2DB2               	goto	u435m0
  8779                           
  8780                           ;OLED.h: 829: __builtin_memcpy(ptrbuffer2+1,ptrODOFonts+byteIndex+24,1);
  8781  0DB6  0020               	movlb	0	; select bank0
  8782  0DB7  0833               	movf	ODOScroll_tens@ptrbuffer2,w
  8783  0DB8  0086               	movwf	6
  8784  0DB9  0834               	movf	ODOScroll_tens@ptrbuffer2+1,w
  8785  0DBA  0087               	movwf	7
  8786  0DBB  3141               	addfsr 1,1
  8787  0DBC  0020               	movlb	0	; select bank0
  8788  0DBD  0835               	movf	ODOScroll_tens@byteIndex,w
  8789  0DBE  0737               	addwf	ODOScroll_tens@ptrODOFonts,w
  8790  0DBF  00A8               	movwf	??_ODOScroll_tens
  8791  0DC0  0836               	movf	ODOScroll_tens@byteIndex+1,w
  8792  0DC1  3D38               	addwfc	ODOScroll_tens@ptrODOFonts+1,w
  8793  0DC2  00A9               	movwf	??_ODOScroll_tens+1
  8794  0DC3  0828               	movf	??_ODOScroll_tens,w
  8795  0DC4  0084               	movwf	4
  8796  0DC5  0829               	movf	??_ODOScroll_tens+1,w
  8797  0DC6  0085               	movwf	5
  8798  0DC7  3118               	addfsr 0,24
  8799  0DC8  3001               	movlw	1
  8800  0DC9  00AA               	movwf	??_ODOScroll_tens+2
  8801  0DCA                     u436m0:	
  8802  0DCA  0012               	moviw fsr0++
  8803  0DCB  001E               	movwi fsr1++
  8804  0DCC  0BAA               	decfsz	??_ODOScroll_tens+2,f
  8805  0DCD  2DCA               	goto	u436m0
  8806                           
  8807                           ;OLED.h: 830: buffer = buffer>>(position%8);
  8808  0DCE  0020               	movlb	0	; select bank0
  8809  0DCF  082E               	movf	ODOScroll_tens@buffer+1,w
  8810  0DD0  00A9               	movwf	??_ODOScroll_tens+1
  8811  0DD1  082D               	movf	ODOScroll_tens@buffer,w
  8812  0DD2  00A8               	movwf	??_ODOScroll_tens
  8813  0DD3  0826               	movf	ODOScroll_tens@position,w
  8814  0DD4  3907               	andlw	7
  8815  0DD5  0A89               	incf	9,f
  8816  0DD6  2DD9               	goto	u4374
  8817  0DD7                     u4375:	
  8818  0DD7  36A9               	lsrf	??_ODOScroll_tens+1,f
  8819  0DD8  0CA8               	rrf	??_ODOScroll_tens,f
  8820  0DD9                     u4374:	
  8821  0DD9  0B89               	decfsz	9,f
  8822  0DDA  2DD7               	goto	u4375
  8823  0DDB  0828               	movf	??_ODOScroll_tens,w
  8824  0DDC  00AD               	movwf	ODOScroll_tens@buffer
  8825  0DDD  0829               	movf	??_ODOScroll_tens+1,w
  8826  0DDE  00AE               	movwf	ODOScroll_tens@buffer+1
  8827                           
  8828                           ;OLED.h: 831: buffer2 = buffer2>>(position%8);
  8829  0DDF  0830               	movf	ODOScroll_tens@buffer2+1,w
  8830  0DE0  00A9               	movwf	??_ODOScroll_tens+1
  8831  0DE1  082F               	movf	ODOScroll_tens@buffer2,w
  8832  0DE2  00A8               	movwf	??_ODOScroll_tens
  8833  0DE3  0826               	movf	ODOScroll_tens@position,w
  8834  0DE4  3907               	andlw	7
  8835  0DE5  0A89               	incf	9,f
  8836  0DE6  2DE9               	goto	u4384
  8837  0DE7                     u4385:	
  8838  0DE7  36A9               	lsrf	??_ODOScroll_tens+1,f
  8839  0DE8  0CA8               	rrf	??_ODOScroll_tens,f
  8840  0DE9                     u4384:	
  8841  0DE9  0B89               	decfsz	9,f
  8842  0DEA  2DE7               	goto	u4385
  8843  0DEB  0828               	movf	??_ODOScroll_tens,w
  8844  0DEC  00AF               	movwf	ODOScroll_tens@buffer2
  8845  0DED  0829               	movf	??_ODOScroll_tens+1,w
  8846  0DEE  00B0               	movwf	ODOScroll_tens@buffer2+1
  8847                           
  8848                           ;OLED.h: 832: __builtin_memcpy(ptrTEST+i+52,ptrbuffer,1);
  8849  0DEF  082B               	movf	ODOScroll_tens@ptrTEST,w
  8850  0DF0  0739               	addwf	ODOScroll_tens@i,w
  8851  0DF1  00A8               	movwf	??_ODOScroll_tens
  8852  0DF2  082C               	movf	ODOScroll_tens@ptrTEST+1,w
  8853  0DF3  3D3A               	addwfc	ODOScroll_tens@i+1,w
  8854  0DF4  00A9               	movwf	??_ODOScroll_tens+1
  8855  0DF5  0828               	movf	??_ODOScroll_tens,w
  8856  0DF6  3E34               	addlw	52
  8857  0DF7  0086               	movwf	6
  8858  0DF8  3000               	movlw	0
  8859  0DF9  3D29               	addwfc	??_ODOScroll_tens+1,w
  8860  0DFA  0087               	movwf	7
  8861  0DFB  0020               	movlb	0	; select bank0
  8862  0DFC  0831               	movf	ODOScroll_tens@ptrbuffer,w
  8863  0DFD  0084               	movwf	4
  8864  0DFE  0832               	movf	ODOScroll_tens@ptrbuffer+1,w
  8865  0DFF  0085               	movwf	5
  8866  0E00  3001               	movlw	1
  8867  0E01  00AA               	movwf	??_ODOScroll_tens+2
  8868  0E02                     u439m0:	
  8869  0E02  0012               	moviw fsr0++
  8870  0E03  001E               	movwi fsr1++
  8871  0E04  0BAA               	decfsz	??_ODOScroll_tens+2,f
  8872  0E05  2E02               	goto	u439m0
  8873                           
  8874                           ;OLED.h: 833: __builtin_memcpy(ptrTEST+i+52+96,ptrbuffer2,1);
  8875  0E06  0020               	movlb	0	; select bank0
  8876  0E07  082B               	movf	ODOScroll_tens@ptrTEST,w
  8877  0E08  0739               	addwf	ODOScroll_tens@i,w
  8878  0E09  00A8               	movwf	??_ODOScroll_tens
  8879  0E0A  082C               	movf	ODOScroll_tens@ptrTEST+1,w
  8880  0E0B  3D3A               	addwfc	ODOScroll_tens@i+1,w
  8881  0E0C  00A9               	movwf	??_ODOScroll_tens+1
  8882  0E0D  0828               	movf	??_ODOScroll_tens,w
  8883  0E0E  3E94               	addlw	148
  8884  0E0F  0086               	movwf	6
  8885  0E10  3000               	movlw	0
  8886  0E11  3D29               	addwfc	??_ODOScroll_tens+1,w
  8887  0E12  0087               	movwf	7
  8888  0E13  0020               	movlb	0	; select bank0
  8889  0E14  0833               	movf	ODOScroll_tens@ptrbuffer2,w
  8890  0E15  0084               	movwf	4
  8891  0E16  0834               	movf	ODOScroll_tens@ptrbuffer2+1,w
  8892  0E17  0085               	movwf	5
  8893  0E18  3001               	movlw	1
  8894  0E19  00AA               	movwf	??_ODOScroll_tens+2
  8895  0E1A                     u440m0:	
  8896  0E1A  0012               	moviw fsr0++
  8897  0E1B  001E               	movwi fsr1++
  8898  0E1C  0BAA               	decfsz	??_ODOScroll_tens+2,f
  8899  0E1D  2E1A               	goto	u440m0
  8900  0E1E  3001               	movlw	1
  8901  0E1F  0020               	movlb	0	; select bank0
  8902  0E20  07B9               	addwf	ODOScroll_tens@i,f
  8903  0E21  3000               	movlw	0
  8904  0E22  3DBA               	addwfc	ODOScroll_tens@i+1,f
  8905  0E23  2D4A               	goto	L13
  8906  0E24                     __end_of_ODOScroll_tens:	
  8907                           
  8908                           	psect	text36
  8909  160B                     __ptext36:	
  8910 ;; *************** function ___wmul *****************
  8911 ;; Defined at:
  8912 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8915 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  product         2    4[BANK0 ] unsigned int 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  2    0[BANK0 ] unsigned int 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;Total ram usage:        6 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    2
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		_OLEDClearBuffer
  8938 ;;		_OLEDUpdateDisplay
  8939 ;;		_ODOScroll_units
  8940 ;;		_ODOScroll_tens
  8941 ;;		_printf
  8942 ;;		_eval_poly
  8943 ;;		_OLEDPixel
  8944 ;;		_OLEDFill
  8945 ;;		_printArrayTest
  8946 ;;		_OLEDBar
  8947 ;;		_ODOpaste
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           
  8952                           ;psect for function ___wmul
  8953  160B                     ___wmul:	
  8954                           
  8955                           ;incstack = 0
  8956                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8957  160B  0020               	movlb	0	; select bank0
  8958  160C  01A4               	clrf	___wmul@product
  8959  160D  01A5               	clrf	___wmul@product+1
  8960  160E                     l2850:	
  8961  160E  1C20               	btfss	___wmul@multiplier,0
  8962  160F  2E14               	goto	l697
  8963  1610  0822               	movf	___wmul@multiplicand,w
  8964  1611  07A4               	addwf	___wmul@product,f
  8965  1612  0823               	movf	___wmul@multiplicand+1,w
  8966  1613  3DA5               	addwfc	___wmul@product+1,f
  8967  1614                     l697:	
  8968  1614  3001               	movlw	1
  8969  1615                     u2725:	
  8970  1615  35A2               	lslf	___wmul@multiplicand,f
  8971  1616  0DA3               	rlf	___wmul@multiplicand+1,f
  8972  1617  0B89               	decfsz	9,f
  8973  1618  2E15               	goto	u2725
  8974  1619  3001               	movlw	1
  8975  161A                     u2735:	
  8976  161A  36A1               	lsrf	___wmul@multiplier+1,f
  8977  161B  0CA0               	rrf	___wmul@multiplier,f
  8978  161C  0B89               	decfsz	9,f
  8979  161D  2E1A               	goto	u2735
  8980  161E  0820               	movf	___wmul@multiplier,w
  8981  161F  0421               	iorwf	___wmul@multiplier+1,w
  8982  1620  1D03               	btfss	3,2
  8983  1621  2E0E               	goto	l2850
  8984  1622  0825               	movf	___wmul@product+1,w
  8985  1623  00A1               	movwf	?___wmul+1
  8986  1624  0824               	movf	___wmul@product,w
  8987  1625  00A0               	movwf	?___wmul
  8988  1626  0008               	return
  8989  1627                     __end_of___wmul:	
  8990                           
  8991                           	psect	text37
  8992  15D9                     __ptext37:	
  8993 ;; *************** function _LSM303D_init *****************
  8994 ;; Defined at:
  8995 ;;		line 10 in file "LSM303D.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;		None               void
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0, pclath, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;Total ram usage:        1 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    5
  9016 ;; This function calls:
  9017 ;;		_LSM303D_Write
  9018 ;; This function is called by:
  9019 ;;		_main
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function _LSM303D_init
  9025  15D9                     _LSM303D_init:	
  9026                           
  9027                           ;LSM303D.c: 12: LSM303D_Write(0x20,((0<<7) | (1<<6) | (0<<5) | (1<<4))|(1<<0)|(1<<1)|(1<
      +                          <2));
  9028                           
  9029                           ;incstack = 0
  9030                           ; Regs used in _LSM303D_init: [wreg+status,2+status,0+pclath+cstack]
  9031  15D9  3057               	movlw	87
  9032  15DA  0020               	movlb	0	; select bank0
  9033  15DB  00A3               	movwf	??_LSM303D_init
  9034  15DC  0823               	movf	??_LSM303D_init,w
  9035  15DD  00A1               	movwf	LSM303D_Write@data
  9036  15DE  3020               	movlw	32
  9037  15DF  3195  25C3  3195   	fcall	_LSM303D_Write
  9038                           
  9039                           ;LSM303D.c: 14: LSM303D_Write(0x24,((1<<4) | (0<<3) | (0<<2))|((1<<6) | (1<<5)));
  9040  15E2  3070               	movlw	112
  9041  15E3  0020               	movlb	0	; select bank0
  9042  15E4  00A3               	movwf	??_LSM303D_init
  9043  15E5  0823               	movf	??_LSM303D_init,w
  9044  15E6  00A1               	movwf	LSM303D_Write@data
  9045  15E7  3024               	movlw	36
  9046  15E8  3195  25C3  3195   	fcall	_LSM303D_Write
  9047                           
  9048                           ;LSM303D.c: 16: LSM303D_Write(0x26,0x01);
  9049  15EB  0020               	movlb	0	; select bank0
  9050  15EC  01A1               	clrf	LSM303D_Write@data
  9051  15ED  0AA1               	incf	LSM303D_Write@data,f
  9052  15EE  3026               	movlw	38
  9053  15EF  3195  25C3         	fcall	_LSM303D_Write
  9054  15F1  0008               	return
  9055  15F2                     __end_of_LSM303D_init:	
  9056                           
  9057                           	psect	text38
  9058  15C3                     __ptext38:	
  9059 ;; *************** function _LSM303D_Write *****************
  9060 ;; Defined at:
  9061 ;;		line 19 in file "LSM303D.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  reg             1    wreg     unsigned char 
  9064 ;;  data            1    1[BANK0 ] unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  reg             1    2[BANK0 ] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;		None               void
  9069 ;; Registers used:
  9070 ;;		wreg, status,2, status,0, pclath, cstack
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:        2 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    4
  9083 ;; This function calls:
  9084 ;;		_i2c_Start
  9085 ;;		_i2c_Stop
  9086 ;;		_i2c_Write
  9087 ;; This function is called by:
  9088 ;;		_UpdateMagneticAngle
  9089 ;;		_LSM303D_init
  9090 ;;		_Calib
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _LSM303D_Write
  9096  15C3                     _LSM303D_Write:	
  9097                           
  9098                           ;incstack = 0
  9099                           ; Regs used in _LSM303D_Write: [wreg+status,2+status,0+pclath+cstack]
  9100                           ;LSM303D_Write@reg stored from wreg
  9101  15C3  0020               	movlb	0	; select bank0
  9102  15C4  00A2               	movwf	LSM303D_Write@reg
  9103                           
  9104                           ;LSM303D.c: 21: i2c_Start();
  9105  15C5  3195  2536  3195   	fcall	_i2c_Start
  9106                           
  9107                           ;LSM303D.c: 22: i2c_Write(0x3C);
  9108  15C8  303C               	movlw	60
  9109  15C9  3195  2553  3195   	fcall	_i2c_Write
  9110                           
  9111                           ;LSM303D.c: 23: i2c_Write(reg);
  9112  15CC  0020               	movlb	0	; select bank0
  9113  15CD  0822               	movf	LSM303D_Write@reg,w
  9114  15CE  3195  2553  3195   	fcall	_i2c_Write
  9115                           
  9116                           ;LSM303D.c: 24: i2c_Write(data);
  9117  15D1  0020               	movlb	0	; select bank0
  9118  15D2  0821               	movf	LSM303D_Write@data,w
  9119  15D3  3195  2553  3195   	fcall	_i2c_Write
  9120                           
  9121                           ;LSM303D.c: 25: i2c_Stop();
  9122  15D6  3195  253B         	fcall	_i2c_Stop
  9123  15D8  0008               	return
  9124  15D9                     __end_of_LSM303D_Write:	
  9125                           
  9126                           	psect	text39
  9127  1553                     __ptext39:	
  9128 ;; *************** function _i2c_Write *****************
  9129 ;; Defined at:
  9130 ;;		line 47 in file "i2c.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  data            1    wreg     unsigned char 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  data            1    0[BANK0 ] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;		None               void
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;Total ram usage:        1 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    3
  9151 ;; This function calls:
  9152 ;;		_i2c_Wait
  9153 ;; This function is called by:
  9154 ;;		_OLEDCommand
  9155 ;;		_OLEDUpdateDisplay
  9156 ;;		_LSM303D_Write
  9157 ;;		_LSM303D_Read_M
  9158 ;;		_OLEDData
  9159 ;;		_LSM303D_Read_A
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           
  9164                           ;psect for function _i2c_Write
  9165  1553                     _i2c_Write:	
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  9169                           ;i2c_Write@data stored from wreg
  9170  1553  0020               	movlb	0	; select bank0
  9171  1554  00A0               	movwf	i2c_Write@data
  9172                           
  9173                           ;i2c.c: 49: i2c_Wait();
  9174  1555  3195  254B         	fcall	_i2c_Wait
  9175                           
  9176                           ;i2c.c: 50: SSPBUF = data;
  9177  1557  0020               	movlb	0	; select bank0
  9178  1558  0820               	movf	i2c_Write@data,w
  9179  1559  0024               	movlb	4	; select bank4
  9180  155A  0091               	movwf	17	;volatile
  9181  155B  0008               	return
  9182  155C                     __end_of_i2c_Write:	
  9183                           
  9184                           	psect	text40
  9185  153B                     __ptext40:	
  9186 ;; *************** function _i2c_Stop *****************
  9187 ;; Defined at:
  9188 ;;		line 40 in file "i2c.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;		None               void
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0, pclath, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;Total ram usage:        0 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    3
  9209 ;; This function calls:
  9210 ;;		_i2c_Wait
  9211 ;; This function is called by:
  9212 ;;		_OLEDCommand
  9213 ;;		_OLEDUpdateDisplay
  9214 ;;		_LSM303D_Write
  9215 ;;		_LSM303D_Read_M
  9216 ;;		_OLEDData
  9217 ;;		_LSM303D_Read_A
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           
  9222                           ;psect for function _i2c_Stop
  9223  153B                     _i2c_Stop:	
  9224                           
  9225                           ;i2c.c: 42: i2c_Wait();
  9226                           
  9227                           ;incstack = 0
  9228                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  9229  153B  3195  254B         	fcall	_i2c_Wait
  9230                           
  9231                           ;i2c.c: 43: PEN=1;
  9232  153D  0024               	movlb	4	; select bank4
  9233  153E  1516               	bsf	22,2	;volatile
  9234  153F  0008               	return
  9235  1540                     __end_of_i2c_Stop:	
  9236                           
  9237                           	psect	text41
  9238  1536                     __ptext41:	
  9239 ;; *************** function _i2c_Start *****************
  9240 ;; Defined at:
  9241 ;;		line 27 in file "i2c.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;		None               void
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9259 ;;Total ram usage:        0 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    3
  9262 ;; This function calls:
  9263 ;;		_i2c_Wait
  9264 ;; This function is called by:
  9265 ;;		_OLEDCommand
  9266 ;;		_OLEDUpdateDisplay
  9267 ;;		_LSM303D_Write
  9268 ;;		_LSM303D_Read_M
  9269 ;;		_OLEDData
  9270 ;;		_LSM303D_Read_A
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           
  9275                           ;psect for function _i2c_Start
  9276  1536                     _i2c_Start:	
  9277                           
  9278                           ;i2c.c: 29: i2c_Wait();
  9279                           
  9280                           ;incstack = 0
  9281                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  9282  1536  3195  254B         	fcall	_i2c_Wait
  9283                           
  9284                           ;i2c.c: 30: SEN=1;
  9285  1538  0024               	movlb	4	; select bank4
  9286  1539  1416               	bsf	22,0	;volatile
  9287  153A  0008               	return
  9288  153B                     __end_of_i2c_Start:	
  9289                           
  9290                           	psect	text42
  9291  154B                     __ptext42:	
  9292 ;; *************** function _i2c_Wait *****************
  9293 ;; Defined at:
  9294 ;;		line 22 in file "i2c.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;		None
  9297 ;; Auto vars:     Size  Location     Type
  9298 ;;		None
  9299 ;; Return value:  Size  Location     Type
  9300 ;;		None               void
  9301 ;; Registers used:
  9302 ;;		wreg, status,2
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;Total ram usage:        0 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; Hardware stack levels required when called:    2
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_i2c_Start
  9319 ;;		_i2c_Restart
  9320 ;;		_i2c_Stop
  9321 ;;		_i2c_Write
  9322 ;;		_i2c_Address
  9323 ;;		_i2c_Read
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           
  9328                           ;psect for function _i2c_Wait
  9329  154B                     _i2c_Wait:	
  9330  154B                     l3012:	
  9331                           ;i2c.c: 23: while ( ( SSPCON2 & 0x1F ) || ( SSPSTAT & 0x04 ) );
  9332                           
  9333                           ;incstack = 0
  9334                           ; Regs used in _i2c_Wait: [wreg+status,2]
  9335                           
  9336  154B  0024               	movlb	4	; select bank4
  9337  154C  0816               	movf	22,w	;volatile
  9338  154D  391F               	andlw	31
  9339  154E  1D03               	btfss	3,2
  9340  154F  2D4B               	goto	l3012
  9341  1550  1D14               	btfss	20,2	;volatile
  9342  1551  0008               	return
  9343  1552  2D4B               	goto	l3012
  9344  1553                     __end_of_i2c_Wait:	
  9345                           
  9346                           	psect	intentry
  9347  0004                     __pintentry:	
  9348 ;; *************** function _INTERRUPT_InterruptManager *****************
  9349 ;; Defined at:
  9350 ;;		line 4 in file "interrupt_manager.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;		None               void
  9357 ;; Registers used:
  9358 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;Total ram usage:        1 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    1
  9371 ;; This function calls:
  9372 ;;		_EUSART_Receive_ISR
  9373 ;; This function is called by:
  9374 ;;		Interrupt level 1
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378  0004                     _INTERRUPT_InterruptManager:	
  9379                           
  9380                           ;incstack = 0
  9381                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9382  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9383  0005  3180               	pagesel	$
  9384  0006  0020               	movlb	0	; select bank0
  9385  0007  087F               	movf	127,w
  9386  0008  00F9               	movwf	??_INTERRUPT_InterruptManager
  9387                           
  9388                           ;interrupt_manager.c: 6: if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  9389  0009  0021               	movlb	1	; select bank1
  9390  000A  1E91               	btfss	17,5	;volatile
  9391  000B  2811               	goto	i1l441
  9392  000C  0020               	movlb	0	; select bank0
  9393  000D  1E91               	btfss	17,5	;volatile
  9394  000E  2811               	goto	i1l441
  9395                           
  9396                           ;interrupt_manager.c: 7: {
  9397                           ;interrupt_manager.c: 8: EUSART_Receive_ISR();
  9398  000F  3197  2769         	fcall	_EUSART_Receive_ISR
  9399  0011                     i1l441:	
  9400                           ;interrupt_manager.c: 10: else
  9401                           ;interrupt_manager.c: 11: {
  9402                           
  9403                           ;interrupt_manager.c: 9: }
  9404                           
  9405  0011  0879               	movf	??_INTERRUPT_InterruptManager,w
  9406  0012  0020               	movlb	0	; select bank0
  9407  0013  00FF               	movwf	127
  9408  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9409  0015  0009               	retfie
  9410  0016                     __end_of_INTERRUPT_InterruptManager:	
  9411                           
  9412                           	psect	text44
  9413  1769                     __ptext44:	
  9414 ;; *************** function _EUSART_Receive_ISR *****************
  9415 ;; Defined at:
  9416 ;;		line 48 in file "eusart.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;		None
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  incoming        1    8[COMMON] unsigned char 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;		None               void
  9423 ;; Registers used:
  9424 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;Total ram usage:        9 bytes
  9435 ;; Hardware stack levels used:    1
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_INTERRUPT_InterruptManager
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           
  9444                           ;psect for function _EUSART_Receive_ISR
  9445  1769                     _EUSART_Receive_ISR:	
  9446                           
  9447                           ;eusart.c: 50: char incoming;
  9448                           ;eusart.c: 52: if (1 == RCSTAbits.OERR)
  9449                           
  9450                           ;incstack = 0
  9451                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9452  1769  0023               	movlb	3	; select bank3
  9453  176A  1C9D               	btfss	29,1	;volatile
  9454  176B  2F6E               	goto	i1l3974
  9455                           
  9456                           ;eusart.c: 53: {
  9457                           ;eusart.c: 55: RCSTAbits.CREN = 0;
  9458  176C  121D               	bcf	29,4	;volatile
  9459                           
  9460                           ;eusart.c: 56: RCSTAbits.CREN = 1;
  9461  176D  161D               	bsf	29,4	;volatile
  9462  176E                     i1l3974:	
  9463                           
  9464                           ;eusart.c: 57: }
  9465                           ;eusart.c: 59: incoming = RCREG;
  9466  176E  0819               	movf	25,w	;volatile
  9467  176F  00F0               	movwf	??_EUSART_Receive_ISR
  9468  1770  0870               	movf	??_EUSART_Receive_ISR,w
  9469  1771  00F8               	movwf	EUSART_Receive_ISR@incoming
  9470                           
  9471                           ;eusart.c: 60: console[lines][charac]=incoming;
  9472  1772  0021               	movlb	1	; select bank1
  9473  1773  085F               	movf	(_lines+1)^(0+128),w
  9474  1774  00F1               	movwf	??_EUSART_Receive_ISR+1
  9475  1775  085E               	movf	_lines^(0+128),w
  9476  1776  00F0               	movwf	??_EUSART_Receive_ISR
  9477  1777  0EF0               	swapf	??_EUSART_Receive_ISR,f
  9478  1778  0EF1               	swapf	??_EUSART_Receive_ISR+1,f
  9479  1779  30F0               	movlw	240
  9480  177A  05F1               	andwf	??_EUSART_Receive_ISR+1,f
  9481  177B  0870               	movf	??_EUSART_Receive_ISR,w
  9482  177C  390F               	andlw	15
  9483  177D  04F1               	iorwf	??_EUSART_Receive_ISR+1,f
  9484  177E  30F0               	movlw	240
  9485  177F  05F0               	andwf	??_EUSART_Receive_ISR,f
  9486  1780  3050               	movlw	80
  9487  1781  00F2               	movwf	??_EUSART_Receive_ISR+2
  9488  1782  3023               	movlw	35
  9489  1783  00F3               	movwf	??_EUSART_Receive_ISR+3
  9490  1784  0870               	movf	??_EUSART_Receive_ISR,w
  9491  1785  0772               	addwf	??_EUSART_Receive_ISR+2,w
  9492  1786  00F4               	movwf	??_EUSART_Receive_ISR+4
  9493  1787  0871               	movf	??_EUSART_Receive_ISR+1,w
  9494  1788  3D73               	addwfc	??_EUSART_Receive_ISR+3,w
  9495  1789  00F5               	movwf	??_EUSART_Receive_ISR+5
  9496  178A  087A               	movf	_charac,w
  9497  178B  0774               	addwf	??_EUSART_Receive_ISR+4,w
  9498  178C  00F6               	movwf	??_EUSART_Receive_ISR+6
  9499  178D  087B               	movf	_charac+1,w
  9500  178E  3D75               	addwfc	??_EUSART_Receive_ISR+5,w
  9501  178F  00F7               	movwf	??_EUSART_Receive_ISR+7
  9502  1790  0876               	movf	??_EUSART_Receive_ISR+6,w
  9503  1791  0086               	movwf	6
  9504  1792  0877               	movf	??_EUSART_Receive_ISR+7,w
  9505  1793  0087               	movwf	7
  9506  1794  0878               	movf	EUSART_Receive_ISR@incoming,w
  9507  1795  0081               	movwf	1
  9508                           
  9509                           ;eusart.c: 62: if ((incoming == '\n')||(incoming == '\r'))
  9510  1796  300A               	movlw	10
  9511  1797  0678               	xorwf	EUSART_Receive_ISR@incoming,w
  9512  1798  1903               	btfsc	3,2
  9513  1799  2F9E               	goto	i1l3982
  9514  179A  300D               	movlw	13
  9515  179B  0678               	xorwf	EUSART_Receive_ISR@incoming,w
  9516  179C  1D03               	btfss	3,2
  9517  179D  2FA9               	goto	i1l3988
  9518  179E                     i1l3982:	
  9519                           
  9520                           ;eusart.c: 63: {
  9521                           ;eusart.c: 64: if(charac > 0)
  9522  179E  087A               	movf	_charac,w
  9523  179F  047B               	iorwf	_charac+1,w
  9524  17A0  1903               	btfsc	3,2
  9525  17A1  0008               	return
  9526                           
  9527                           ;eusart.c: 65: {
  9528                           ;eusart.c: 66: lines++;
  9529  17A2  3001               	movlw	1
  9530  17A3  07DE               	addwf	_lines^(0+128),f
  9531  17A4  3000               	movlw	0
  9532  17A5  3DDF               	addwfc	(_lines+1)^(0+128),f
  9533                           
  9534                           ;eusart.c: 67: charac =0;
  9535  17A6  01FA               	clrf	_charac
  9536  17A7  01FB               	clrf	_charac+1
  9537                           
  9538                           ;eusart.c: 68: }
  9539                           ;eusart.c: 69: }
  9540  17A8  0008               	return
  9541  17A9                     i1l3988:	
  9542                           
  9543                           ;eusart.c: 70: else
  9544                           ;eusart.c: 71: {
  9545                           ;eusart.c: 72: charac++;
  9546  17A9  3001               	movlw	1
  9547  17AA  07FA               	addwf	_charac,f
  9548  17AB  3000               	movlw	0
  9549  17AC  3DFB               	addwfc	_charac+1,f
  9550  17AD  0008               	return
  9551  17AE                     __end_of_EUSART_Receive_ISR:	
  9552  007E                     btemp	set	126	;btemp
  9553  007E                     int$flags	set	126
  9554  007E                     wtemp	set	126
  9555  007E                     wtemp0	set	126
  9556  0080                     wtemp1	set	128
  9557  0082                     wtemp2	set	130
  9558  0084                     wtemp3	set	132
  9559  0086                     wtemp4	set	134
  9560  0088                     wtemp5	set	136
  9561  007F                     wtemp6	set	127
  9562  007E                     ttemp	set	126
  9563  007E                     ttemp0	set	126
  9564  0081                     ttemp1	set	129
  9565  0084                     ttemp2	set	132
  9566  0087                     ttemp3	set	135
  9567  007F                     ttemp4	set	127
  9568  007E                     ltemp	set	126
  9569  007E                     ltemp0	set	126
  9570  0082                     ltemp1	set	130
  9571  0086                     ltemp2	set	134
  9572  0080                     ltemp3	set	128


Data Sizes:
    Strings     52
    Constant    363
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     80      80
    BANK1            80     40      70
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            16      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), 

    __builtin_memcpy$0	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[8]), STR_5(CODE[16]), STR_4(CODE[5]), STR_3(CODE[2]), 
		 -> STR_2(CODE[6]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    OLEDUpdateDisplay@ptr	PTR unsigned char  size(2) Largest target is 192
		 -> TEST(BIGRAM[192]), 

    OLEDClearBuffer@ptr	PTR unsigned char  size(2) Largest target is 192
		 -> TEST(BIGRAM[192]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR

Critical Paths under _main in BANK0

    _main->_UpdateMagneticAngle
    _printf->___lwmod
    ___lwmod->___lwdiv
    _UpdateMagneticAngle->_atan2
    _atan2->_atan
    _atan->_eval_poly
    _fabs->___ftneg
    ___ftneg->___ftdiv
    _eval_poly->___ftmul
    ___ftmul->___ftadd
    ___ftdiv->___ftpack
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___fttol->___ftmul
    ___awtoft->___ftpack
    _LSM303D_Read_M->_i2c_Read
    _OLEDUpdateDisplay->_OLEDClearBuffer
    _OLEDClearBuffer->___wmul
    _OLEDSetUp->_OLEDCommand
    _OLEDCommand->_i2c_Address
    _ODOScroll_units->___wmul
    _ODOScroll_tens->___wmul
    _LSM303D_init->_LSM303D_Write
    _LSM303D_Write->_i2c_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UpdateMagneticAngle
    _UpdateMagneticAngle->_atan2
    _atan2->_atan

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   71777
                                             78 BANK0      2     2      0
                                             37 BANK1      3     3      0
                       _LSM303D_init
                     _ODOScroll_tens
                    _ODOScroll_units
                          _OLEDSetUp
                  _OLEDUpdateDisplay
                  _SYSTEM_Initialize
                _UpdateMagneticAngle
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    21      4    5522
                                             14 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _UpdateMagneticAngle                                 11    11      0   48747
                                             76 BANK0      2     2      0
                                             28 BANK1      9     9      0
                     _LSM303D_Read_M
                      _LSM303D_Write
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                              _atan2
 ---------------------------------------------------------------------------------
 (2) _atan2                                               24    18      6   37856
                                             70 BANK0      6     0      6
                                             13 BANK1     15    15      0
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___ftsub
                               _atan
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _atan                                                17    14      3   23366
                                             66 BANK0      4     1      3
                                              0 BANK1     13    13      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 3     0      3    1890
                                             27 BANK0      3     0      3
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     363
                                             24 BANK0      3     0      3
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1302
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     3      7   10256
                                             56 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2669
                                             40 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2941
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3780
                                             40 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3501
                                             27 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             56 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2222
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1707
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1466
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LSM303D_Read_M                                      11    11      0     205
                                              3 BANK0     11    11      0
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 BANK0      3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                           _i2c_Init
 ---------------------------------------------------------------------------------
 (2) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLEDUpdateDisplay                                   11    11      0    8085
                                             14 BANK0     11    11      0
                    _OLEDClearBuffer
                        _OLEDCommand
                             ___wmul
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _OLEDClearBuffer                                      8     8      0    3749
                                              6 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _OLEDSetUp                                            2     2      0     294
                                              6 BANK0      2     2      0
                        _OLEDCommand
 ---------------------------------------------------------------------------------
 (2) _OLEDCommand                                          2     2      0     294
                                              4 BANK0      2     2      0
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          4     3      1     227
                                              0 BANK0      4     3      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (1) _ODOScroll_units                                     21    19      2    4323
                                              6 BANK0     21    19      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _ODOScroll_tens                                      21    19      2    4270
                                              6 BANK0     21    19      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3590
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _LSM303D_init                                         1     1      0     331
                                              3 BANK0      1     1      0
                      _LSM303D_Write
 ---------------------------------------------------------------------------------
 (2) _LSM303D_Write                                        2     1      1     331
                                              1 BANK0      2     1      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write                                            1     1      0      22
                                              0 BANK0      1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0      67
                                              9 COMMON     1     1      0
                 _EUSART_Receive_ISR
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   9     9      0      67
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LSM303D_init
     _LSM303D_Write
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _ODOScroll_tens
     ___wmul
   _ODOScroll_units
     ___wmul
   _OLEDSetUp
     _OLEDCommand
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _OLEDUpdateDisplay
     _OLEDClearBuffer
       ___wmul
     _OLEDCommand
       _i2c_Address
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     ___wmul
     _i2c_Address
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _i2c_Init
   _UpdateMagneticAngle
     _LSM303D_Read_M
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _LSM303D_Write
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     ___awdiv
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftpack (ARG)
     _atan2
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftge (ARG)
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
       ___ftsub (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
       _atan (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___ftdiv (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___wmul
         _fabs
           ___ftge
           ___ftneg
             ___ftdiv (ARG)
               ___ftpack
       _fabs (ARG)
         ___ftge
         ___ftneg
           ___ftdiv (ARG)
             ___ftpack
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     28      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               10      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 03 00:25:10 2015

                        __CFG_CP$OFF 0000                        ??_i2c_Address 0021  
                       ___awdiv@sign 0026                                   _aX 00D6  
                                 _aY 00D8                                   _aZ 00DA  
                                 _mX 00E0                                   _mY 00E2  
                                 _mZ 00E4                  ___wmul@multiplicand 0022  
                    _OLEDClearBuffer 16F4                      ?_ODOScroll_tens 0026  
                       ___ftadd@exp1 0047                         ___ftadd@exp2 0046  
                        i2c_Read@ack 0021                         ___ftadd@sign 0045  
                                l427 1567                                  l613 03D7  
                                l553 081B                                  l554 081D  
                                l581 02B5                                  l583 0294  
                                l921 0786                                  l594 02FD  
                                l589 02DB                                  l598 0334  
                                l697 1614                                  l890 08B4  
                                l981 09CA                                  l897 08C7  
                                l898 08CF                                  _RA0 0060  
                                _RA1 0061                                  _RA2 0062  
                                _RA3 0063                                  _RC0 0070  
                                _RA4 0064                                  _RC1 0071  
                                _RA5 0065                                  _RD0 0078  
                                _RC2 0072                                  _RA6 0066  
                                _RD1 0079                                  _RA7 0067  
                                _RE0 0080                                  _RD2 007A  
                                _RE1 0081                                  _RD3 007B  
                                _RC5 0075                                  _RE2 0082  
                                _PEN 10B2                         __CFG_CPD$OFF 0000  
                                _SEN 10B0                                  _Xsf 00CB  
                                _Ysf 00D1                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                      ??_i2c_Restart 0020                         __CFG_LVP$OFF 0000  
                   ?_ODOScroll_units 0026                         ___ftdiv@cntr 0032  
                      _LSM303D_Write 15C3                         ___ftdiv@sign 0037  
                               l1101 05DD                                 l1102 06B2  
                               l3012 154B                                 l3210 1703  
                               l3034 0B31                                 l3140 162F  
                               l3028 0B1B                                 l3132 06D1  
                               l3070 087A                                 l3118 059A  
                               l3216 1728                                 l3056 0B8B  
                               l3048 0B72                                 l3330 0065  
                               l3322 004C                                 l3412 17C4  
                               l3430 17EA                                 l3422 17CC  
                               l3406 17B9                                 l3334 006D  
                               l3424 17D8                                 l3360 0155  
                               l3344 008B                                 l4240 0A84  
                               l3434 17F3                                 l3450 1650  
                               l3362 0176                                 l3514 16E6  
                               l3506 16C8                                 l3530 1699  
                               l2820 088A                                 l3460 0976  
                               l2900 0761                                 l3348 0093  
                               l3508 16D4                                 l3532 16A5  
                               l3540 16BA                                 l4228 0A7A  
                               l3438 17FB                                 l2910 0782  
                               l2902 0765                                 l3366 0183  
                               l3518 16EF                                 l2824 0891  
                               l3480 09B4                                 l3376 0206  
                               l3536 16B1                                 l3712 0265  
                               l4272 0AE2                                 l4248 0AA0  
                               l2850 160E                                 l2834 08B9  
                               l2826 089B                                 l2914 0798  
                               l3394 15A0                                 l3722 0297  
                               l3706 0254                                 l2836 08C1  
                               l2828 08A0                                 l3492 09DB  
                               l2908 0778                                 l2940 175A  
                               l3486 09C1                                 l3478 09A6  
                               l2918 07AA                                 l3734 02CF  
                               l3488 09CD                                 l2928 07C5  
                               l2872 0716                                 l2936 1744  
                               l3760 031F                                 l3690 0A5F  
                               l2890 073F                                 l3770 0350  
                               l3762 0328                                 l3684 0A34  
                               l3676 0A08                                 l2868 070F  
                               l2980 0C1D                                 l2964 0BDA  
                               l3772 0353                                 l2878 0725  
                               l2958 0BC4                                 l3782 036C  
                               l3774 0357                                 l3696 0A6B  
                               l2896 0752                                 l2992 0C39  
                               l2976 0C15                                 l3784 0372  
                               l2898 075C                                 l3786 039A  
                               l3794 03C1                                 l3778 0364  
                               l2988 0C31                                 l3796 03C5  
                               l3798 0238                                 STR_2 056C  
                               STR_4 0572                                 STR_5 0554  
                               STR_6 0564                                 STR_7 0543  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               u3105 0C3A                                 _LATE 0110  
                               u3115 0C40                                 u3035 0BE6  
                               u3205 0B53                                 u3045 0BF6  
                               u3215 0B73                                 u3225 0B82  
                               u3065 0C1E                                 u4025 02F6  
                               u3235 0B8C                                 u3075 0C24  
                               u2615 0896                                 u4055 0318  
                               u3280 05B4                                 u4225 0E40  
                               u3290 05B5                                 u2635 08AF  
                               u3195 0B43                                 u2725 1615  
                               u4325 0D53                                 u2735 161A  
                               u5207 08EB                                 u3535 17CF  
                               u2655 08BC                                 u4095 0343  
                               u5217 08F6                                 u3625 097D  
                               u2905 0766                                 u4274 0EC6  
                               u4275 0EC4                                 u3555 17D9  
                               u4284 0ED6                                 u4285 0ED4  
                               u3565 17E3                                 u2845 0740  
                               u3725 16CB                                 u4374 0DD9  
                               u4375 0DD7                                 u3575 17EB  
                               u2695 08D6                                 u3655 09A7  
                               u2935 0779                                 u3815 16AB  
                               u4384 0DE9                                 u4385 0DE7  
                               u3745 16D5                                 u3825 16B2  
                               u5177 0AD1                                 u2875 0753  
                               u3755 16DF                                 u5187 0AE9  
                               _RCEN 10B3                                 u3685 09C2  
                               u5197 0D2B                                 u3765 16E7  
                               u3795 169C                                 _TEST 2290  
                               _RSEN 10B1                                 _WPUB 020D  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Xoff 00C8  
                               _Yoff 00CE                                 _fabs 07DD  
                               _atan 0577                                 _main 0A71  
                       ___ftpack@arg 0020                         ___ftpack@exp 0023  
                      ?_LSM303D_init 0070                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0016                                 ttemp 007E  
                               wtemp 007E             ODOScroll_units@byteIndex 0035  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 0056  
                       ___ftmul@sign 0057                       _LSM303D_Read_M 0F11  
                       ___fttol@exp1 0065                   __size_of_OLEDSetUp 0077  
                       ___fttol@lval 0061                        __CFG_PLLEN$ON 0000  
     __size_of_OSCILLATOR_Initialize 0006        __end_of_OSCILLATOR_Initialize 154B  
                       ?_OLEDCommand 0070                                ?_fabs 003B  
                              ?_atan 0062                                ?_main 0070  
                              _ACKEN 10B4                                _ACKDT 10B5  
                    __end_of___awdiv 1800                      __end_of___ftadd 07DD  
                      __CFG_WDTE$OFF 0000                      __end_of___ftdiv 0BAD  
                    __end_of___ftneg 1565                      __end_of___ftmul 0C61  
                    ___awdiv@divisor 0020                      __end_of___ftsub 1645  
                    __end_of___fttol 09E4                      __end_of___lwdiv 16F4  
                              i1l441 0011                      __end_of___lwmod 16BF  
                   __end_of_ODOFonts 0522                      ___awdiv@counter 0025  
                              _RCREG 0199                                u430m0 0F07  
                              u423m0 0E70                                u440m0 0E1A  
                              u424m0 0E88                                _RCSTA 019D  
                              u433m0 0D83                                u425m0 0E9F  
                              u434m0 0D9B                                u426m0 0EB7  
                              u435m0 0DB2                                u436m0 0DCA  
                              u429m0 0EEF                                u439m0 0E02  
                              _PORTA 000C                                _PORTC 000E  
                              _PORTD 000F                                _PORTE 0010  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                                _TXREG 019A  
                              _TXSTA 019E                  __end_of_i2c_Address 15C3  
                              _atan2 0034                        ___awtoft@sign 002D  
                     ?_LSM303D_Write 0021                      __end_of_dpowers 03E2  
                              fabs@d 003B                                _errno 00DC  
                              _lines 00DE                      __end_of_isdigit 15A2  
                              atan@f 0062                                atan@x 00A3  
                              atan@y 00A0                        ___ftpack@sign 0024  
                              _putch 1565                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080             ODOScroll_units@ptrbuffer 0031  
                     ??_LSM303D_init 0023                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                  __end_of_i2c_Restart 1545  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F               __end_of_LSM303D_Read_M 1000  
                    __initialization 0018              __end_of_OLEDClearBuffer 172D  
                       __end_of_fabs 0800                         __end_of_atan 06E7  
                       __end_of_main 0B04                     __end_of_i2c_Init 157B  
                   __end_of_i2c_Read 0821                     __end_of_i2c_Wait 1553  
                   __end_of_i2c_Stop 1540          ?_INTERRUPT_InterruptManager 0070  
                             ??_fabs 003E                               ??_atan 0065  
                             ??_main 00C5                        ___fttol@sign1 0060  
                             ?_atan2 0066         __size_of_UpdateMagneticAngle 00D6  
                   ___awdiv@dividend 0022                               _APFCON 011D  
                   __end_of___awtoft 1667                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELB 018D  
                             _ANSELD 018F                               _ANSELE 0190  
                   __end_of___ftpack 08E6                    __end_of_OLEDSetUp 095D  
                 __size_of_i2c_Start 0005                   __size_of_i2c_Write 0009  
                             i1l3982 179E                               i1l3974 176E  
                             i1l3988 17A9                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
               UpdateMagneticAngle@i 00C4                               _SSPADD 0212  
                             _TRISC3 0473                               _TRISC4 0474  
                             _SSPBUF 0211                       __CFG_PWRTE$OFF 0000  
                    ?_LSM303D_Read_M 0070                   OLEDCommand@command 0025  
                             ___ftge 172D                               ___wmul 160B  
                          ??___awdiv 0024                            ??___ftadd 0041  
                     __CFG_STVREN$ON 0000                               _charac 007A  
                          ??___ftdiv 002E                            ??___ftneg 003B  
                          ??___ftmul 004E                            ??___ftsub 004E  
                          ??___fttol 005C                            ??___lwdiv 0024  
                          ??___lwmod 002C                               atan2@v 00B9  
                             atan2@x 0069                               atan2@y 0066  
                        _i2c_Address 15B2                     ___awdiv@quotient 0027  
                             _printf 0233                ___ftmul@f3_as_product 0053  
                      i2c_Write@data 0020                            ??_isdigit 0020  
         EUSART_Receive_ISR@incoming 0078                      ??_LSM303D_Write 0022  
                        _i2c_Restart 1540                    _SYSTEM_Initialize 157B  
            __end_of__initialization 0030                           ___ftadd@f1 003B  
                         ___ftadd@f2 003E                           ___ftge@ff1 0020  
                         ___ftge@ff2 0023                   ?_SYSTEM_Initialize 0070  
                       eval_poly@res 005F                           ___ftdiv@f1 002B  
                         ___ftdiv@f2 0028                           ___ftdiv@f3 0033  
                         ___ftneg@f1 0038                           ___awtoft@c 0028  
                         ___ftmul@f1 0048                           ___ftmul@f2 004B  
                         ___ftsub@f1 004B                           ___ftsub@f2 0048  
                         ___fttol@f1 0058                     ?_OLEDClearBuffer 0070  
                     __pcstackCOMMON 0070                     ??_ODOScroll_tens 0028  
                ??_SYSTEM_Initialize 0020                        __end_of_atan2 0233  
                      __end_of_putch 156F                    __end_of_i2c_Start 153B  
                  __end_of_i2c_Write 155C                          _CurrentSlot 007C  
               __end_of_LSM303D_init 15F2                           _atan2$1160 00AD  
                         _atan2$1161 00B0                           _atan2$1162 00B6  
                         _atan2$1163 00B3                       _OPTION_REGbits 0095  
               __size_of_OLEDCommand 0019                              ??_atan2 006C  
          __end_of_SYSTEM_Initialize 1587                     ODOScroll_units@i 0039  
                            ??_putch 0020                            ?_i2c_Init 0070  
                          ?_i2c_Read 0070                           __pbssBANK1 00C8  
                          ?_i2c_Wait 0070                            ?_i2c_Stop 0070  
                 __size_of_eval_poly 0060          __size_of_EUSART_Receive_ISR 0045  
                         __pmaintext 0A71                              ?___ftge 0020  
                            ?___wmul 0020                           __pintentry 0004  
                            _BAUDCON 019F           OLEDClearBuffer@PageAddress 002D  
                          ?___awtoft 0028                            ?___ftpack 0020  
                            ?_printf 002E                   i2c_Address@address 0022  
             ODOScroll_tens@position 0026                              _OSCSTAT 009A  
                            _OSCTUNE 0098                              _SSPCON1 0215  
                            _SSPCON2 0216                              _SSPSTAT 0214  
                         ??_i2c_Init 0020                           ??_i2c_Read 0020  
                         ??_i2c_Wait 0020                           ??_i2c_Stop 0020  
           __size_of_ODOScroll_units 00ED                  _UpdateMagneticAngle 0C61  
                    __size_of___ftge 003C                              ___awdiv 17AE  
                            ___ftadd 06E7                              ___ftdiv 0B04  
                            ___ftneg 155C                      __size_of___wmul 001C  
                            ___ftmul 0BAD                              ___ftsub 1627  
                            ___fttol 095D                         OLEDCommand@c 0024  
                            ___lwdiv 16BF                              ___lwmod 1692  
                         ??___awtoft 002B                           ??___ftpack 0025  
                  __end_of_eval_poly 0881                              __ptext1 0233  
                            __ptext2 1565                              __ptext3 1593  
                            __ptext4 1692                              __ptext5 16BF  
                            __ptext6 0C61                              __ptext7 0034  
                            __ptext8 0577                              __ptext9 07DD  
                    __size_of_printf 01A5                              _console 2350  
                  __end_of_hexpowers 03EA                              _dpowers 03D8  
              _OSCILLATOR_Initialize 1545                              _isdigit 1593  
                    atan@val_squared 00A7             ??_PIN_MANAGER_Initialize 0020  
                            atan@val 00AA            ODOScroll_tens@ptrODOFonts 0037  
               ?_UpdateMagneticAngle 0070           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 1588                              main@pos 006F  
                  _OLEDUpdateDisplay 09E4                 end_of_initialization 0030  
               i2c_Address@l_address 0023                   ?_OLEDUpdateDisplay 0070  
                   ??_LSM303D_Read_M 0023                            _OLEDSetUp 08E6  
                  _EUSART_Initialize 15A2                  ??_OLEDUpdateDisplay 002E  
                 ?_EUSART_Initialize 0070                            _RCSTAbits 019D  
                            printf@c 003E                              printf@f 002E  
              __size_of_LSM303D_init 0019                         __pstringtext 03D8  
           ODOScroll_tens@ptrbuffer2 0033                         ?_i2c_Address 0020  
                ??_EUSART_Initialize 0020                            _PORTDbits 000F  
                   __CFG_FOSC$INTOSC 0000                ??_UpdateMagneticAngle 006C  
                  LSM303D_Read_M@X_H 0029                    LSM303D_Read_M@Y_H 002B  
                  LSM303D_Read_M@X_L 0028            __end_of_OLEDUpdateDisplay 0A71  
                  LSM303D_Read_M@Z_H 002D                    LSM303D_Read_M@Y_L 002A  
                  LSM303D_Read_M@Z_L 002C                         ?_i2c_Restart 0070  
          __end_of_EUSART_Initialize 15B2                          ___ftdiv@exp 0036  
          UpdateMagneticAngle@angrad 00BF                          printf@width 003A  
                          _TXSTAbits 019E                         _LSM303D_init 15D9  
                         ?_OLEDSetUp 0070                          ___ftmul@exp 0052  
         ODOScroll_units@ptrODOFonts 0037                    ??_ODOScroll_units 0028  
                     __end_of___ftge 1769                       __end_of___wmul 1627  
             OLEDUpdateDisplay@clear 0036               ?_OSCILLATOR_Initialize 0070  
            ODOScroll_units@position 0026                       __end_of_printf 03D8  
                          _i2c_Start 1536                            _i2c_Write 1553  
                start_initialization 0018                           eval_poly@d 005B  
                         eval_poly@n 005D                           eval_poly@x 0058  
    __size_of_PIN_MANAGER_Initialize 002B                __end_of_LSM303D_Write 15D9  
                  __size_of_i2c_Init 000C                    __size_of_i2c_Read 0020  
                  __size_of_i2c_Wait 0008                    __size_of_i2c_Stop 0005  
                           ??___ftge 0026                             ??___wmul 0024  
                      ??_OLEDCommand 0024                             ??_printf 0032  
           __size_of_OLEDClearBuffer 0039                    __size_of___awtoft 0022  
                  __size_of___ftpack 0065                          __pbssBIGRAM 2290  
                         ?_i2c_Start 0070                           ?_i2c_Write 0070  
                        __pbssCOMMON 007A                            ___latbits 0003  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
         __size_of_OLEDUpdateDisplay 008D                    LSM303D_Write@data 0021  
               OLEDUpdateDisplay@ptr 0034           __end_of_EUSART_Receive_ISR 17AE  
         __size_of_EUSART_Initialize 0010                      ODOScroll_tens@i 0039  
                        ??_OLEDSetUp 0026                     ___lwdiv@dividend 0022  
             _PIN_MANAGER_Initialize 1667                ODOScroll_tens@buffer2 002F  
                           ?___awdiv 0020                             ?___ftadd 003B  
                           ?___ftdiv 0028                             ?___ftneg 0038  
                           ?___ftmul 0048                             ?___ftsub 0048  
                           ?___fttol 0058                             ?___lwdiv 0020  
                           ?___lwmod 0028                ODOScroll_tens@ptrTEST 002B  
            ODOScroll_tens@byteIndex 0035         ??_INTERRUPT_InterruptManager 0079  
               __size_of_i2c_Address 0011                             ?_isdigit 0070  
                          _eval_poly 0821              __size_of_ODOScroll_tens 00ED  
     OLEDUpdateDisplay@ColumnAddress 0037                  __end_of_OLEDCommand 160B  
                          _hexpowers 03E2                     ___lwdiv@quotient 0025  
                     __size_of_atan2 01FF                       __size_of_putch 000A  
               __size_of_i2c_Restart 0005                       ___wmul@product 0024  
                          clear_ram0 1587                            atan@recip 00A6  
                           _PIE1bits 0091                             _ODOFonts 03EA  
__size_of_INTERRUPT_InterruptManager 0012                             _PIR1bits 0011  
            ODOScroll_tens@ptrbuffer 0031               UpdateMagneticAngle@Acc 00C2  
                  ___wmul@multiplier 0020                           printf@flag 0039  
                        ??_i2c_Start 0020                           printf@prec 0038  
                        ??_i2c_Write 0020               ODOScroll_units@buffer2 002F  
                         ?_eval_poly 0058                             _MagAngle 00D4  
                __end_ofatan@coeff_a 0534                  __end_ofatan@coeff_b 0543  
                  ??_OLEDClearBuffer 0026               ODOScroll_units@ptrTEST 002B  
                           _i2c_Init 156F                             _i2c_Read 0801  
                           _i2c_Wait 154B                             _i2c_Stop 153B  
                    _ODOScroll_units 0E24              ??_OSCILLATOR_Initialize 0020  
                   __size_of___awdiv 0052                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftneg 0009  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D                             ___awtoft 1645  
                           ___ftpack 0881          __end_of_UpdateMagneticAngle 0D37  
                        _OLEDCommand 15F2                     LSM303D_Write@reg 0022  
                        _isdigit$871 0020            ODOScroll_units@ptrbuffer2 0033  
                   __size_of_isdigit 000F                 ODOScroll_tens@buffer 002D  
                    ___lwdiv@divisor 0020                      ___lwdiv@counter 0027  
                           __ptext10 155C                             __ptext11 172D  
                           __ptext20 17AE                             __ptext12 0821  
                           __ptext21 0F11                             __ptext13 0BAD  
                           __ptext30 16F4                             __ptext22 1540  
                           __ptext14 0B04                             __ptext31 08E6  
                           __ptext23 0801                             __ptext15 1627  
                           __ptext40 153B                             __ptext32 15F2  
                           __ptext24 157B                             __ptext16 06E7  
                           __ptext41 1536                             __ptext33 15B2  
                           __ptext25 156F                             __ptext17 095D  
                           __ptext42 154B                             __ptext34 0E24  
                           __ptext26 1667                             __ptext18 1645  
                           __ptext35 0D37                             __ptext27 1545  
                           __ptext19 0881                             __ptext44 1769  
                           __ptext36 160B                             __ptext28 15A2  
                           __ptext37 15D9                             __ptext29 09E4  
                           __ptext38 15C3                             __ptext39 1553  
                      __size_of_fabs 0023                        __size_of_atan 0170  
                      __size_of_main 0093                             int$flags 007E  
            __size_of_LSM303D_Read_M 00EF   __end_of_INTERRUPT_InterruptManager 0016  
         _INTERRUPT_InterruptManager 0004                            printf@idx 0036  
                          printf@val 003C                ODOScroll_units@buffer 002D  
                           main@pos2 006E         OLEDUpdateDisplay@PageAddress 0038  
                        atan@coeff_a 0522                          atan@coeff_b 0534  
                     _ODOScroll_tens 0D37                            putch@byte 0020  
                        ??_eval_poly 005F             _UpdateMagneticAngle$1159 00BC  
                           isdigit@c 0021              __end_of_ODOScroll_units 0F11  
                 OLEDClearBuffer@ptr 002A                             intlevel1 0000  
                   ___lwmod@dividend 002A              ?_PIN_MANAGER_Initialize 0070  
                    i2c_Address@mode 0020                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0037                   _EUSART_Receive_ISR 1769  
             __size_of_LSM303D_Write 0016               __end_of_ODOScroll_tens 0E24  
                ?_EUSART_Receive_ISR 0070         OLEDClearBuffer@ColumnAddress 002C  
                    ___lwmod@divisor 0028                      ___lwmod@counter 002D  
                i2c_Read@i2cReadData 0022       __end_of_PIN_MANAGER_Initialize 1692  
               ??_EUSART_Receive_ISR 0070  
