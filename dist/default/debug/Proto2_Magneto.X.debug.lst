

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Sep 20 21:11:26 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16LF1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	dabs	1,0x620,48
    80                           	dabs	1,0x5A0,80
    81                           	dabs	1,0x550,32
    82                           	dabs	1,0x2350,0,_console
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0110                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011F                     	;# 
   155  018C                     	;# 
   156  0190                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0194                     	;# 
   164  0195                     	;# 
   165  0196                     	;# 
   166  0199                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019C                     	;# 
   175  019C                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020D                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021E                     	;# 
   204  021F                     	;# 
   205  028C                     	;# 
   206  028D                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  029E                     	;# 
   224  029F                     	;# 
   225  030C                     	;# 
   226  030D                     	;# 
   227  0311                     	;# 
   228  0311                     	;# 
   229  0312                     	;# 
   230  0313                     	;# 
   231  0314                     	;# 
   232  0315                     	;# 
   233  0315                     	;# 
   234  0316                     	;# 
   235  0318                     	;# 
   236  0318                     	;# 
   237  0319                     	;# 
   238  031A                     	;# 
   239  031C                     	;# 
   240  031C                     	;# 
   241  031D                     	;# 
   242  031E                     	;# 
   243  038C                     	;# 
   244  038D                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  040C                     	;# 
   249  040D                     	;# 
   250  0415                     	;# 
   251  0416                     	;# 
   252  0417                     	;# 
   253  041C                     	;# 
   254  041D                     	;# 
   255  041E                     	;# 
   256  048D                     	;# 
   257  0491                     	;# 
   258  0492                     	;# 
   259  0493                     	;# 
   260  0493                     	;# 
   261  0494                     	;# 
   262  0495                     	;# 
   263  0496                     	;# 
   264  0497                     	;# 
   265  0791                     	;# 
   266  0792                     	;# 
   267  0793                     	;# 
   268  0794                     	;# 
   269  0795                     	;# 
   270  0798                     	;# 
   271  0799                     	;# 
   272  079A                     	;# 
   273  079B                     	;# 
   274  079C                     	;# 
   275  079D                     	;# 
   276  07A0                     	;# 
   277  07A1                     	;# 
   278  07A2                     	;# 
   279  07A3                     	;# 
   280  07A4                     	;# 
   281  07A5                     	;# 
   282  07A6                     	;# 
   283  07A7                     	;# 
   284  07A8                     	;# 
   285  07A9                     	;# 
   286  07AA                     	;# 
   287  07AB                     	;# 
   288  07AC                     	;# 
   289  07AD                     	;# 
   290  07AE                     	;# 
   291  07AF                     	;# 
   292  07B0                     	;# 
   293  07B1                     	;# 
   294  07B2                     	;# 
   295  07B3                     	;# 
   296  07B4                     	;# 
   297  07B5                     	;# 
   298  07B6                     	;# 
   299  07B7                     	;# 
   300  0FE4                     	;# 
   301  0FE5                     	;# 
   302  0FE6                     	;# 
   303  0FE7                     	;# 
   304  0FE8                     	;# 
   305  0FE9                     	;# 
   306  0FEA                     	;# 
   307  0FEB                     	;# 
   308  0FED                     	;# 
   309  0FEE                     	;# 
   310  0FEF                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0110                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  011A                     	;# 
   378  011B                     	;# 
   379  011D                     	;# 
   380  011E                     	;# 
   381  011F                     	;# 
   382  018C                     	;# 
   383  0190                     	;# 
   384  0191                     	;# 
   385  0191                     	;# 
   386  0192                     	;# 
   387  0193                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0194                     	;# 
   391  0195                     	;# 
   392  0196                     	;# 
   393  0199                     	;# 
   394  0199                     	;# 
   395  019A                     	;# 
   396  019A                     	;# 
   397  019B                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019C                     	;# 
   402  019C                     	;# 
   403  019D                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406  019E                     	;# 
   407  019F                     	;# 
   408  019F                     	;# 
   409  020D                     	;# 
   410  0211                     	;# 
   411  0211                     	;# 
   412  0212                     	;# 
   413  0212                     	;# 
   414  0213                     	;# 
   415  0213                     	;# 
   416  0214                     	;# 
   417  0214                     	;# 
   418  0215                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0216                     	;# 
   422  0216                     	;# 
   423  0217                     	;# 
   424  0217                     	;# 
   425  0219                     	;# 
   426  021A                     	;# 
   427  021B                     	;# 
   428  021C                     	;# 
   429  021D                     	;# 
   430  021E                     	;# 
   431  021F                     	;# 
   432  028C                     	;# 
   433  028D                     	;# 
   434  0291                     	;# 
   435  0291                     	;# 
   436  0292                     	;# 
   437  0293                     	;# 
   438  0294                     	;# 
   439  0295                     	;# 
   440  0295                     	;# 
   441  0296                     	;# 
   442  0298                     	;# 
   443  0298                     	;# 
   444  0299                     	;# 
   445  029A                     	;# 
   446  029B                     	;# 
   447  029C                     	;# 
   448  029C                     	;# 
   449  029D                     	;# 
   450  029E                     	;# 
   451  029F                     	;# 
   452  030C                     	;# 
   453  030D                     	;# 
   454  0311                     	;# 
   455  0311                     	;# 
   456  0312                     	;# 
   457  0313                     	;# 
   458  0314                     	;# 
   459  0315                     	;# 
   460  0315                     	;# 
   461  0316                     	;# 
   462  0318                     	;# 
   463  0318                     	;# 
   464  0319                     	;# 
   465  031A                     	;# 
   466  031C                     	;# 
   467  031C                     	;# 
   468  031D                     	;# 
   469  031E                     	;# 
   470  038C                     	;# 
   471  038D                     	;# 
   472  0394                     	;# 
   473  0395                     	;# 
   474  0396                     	;# 
   475  040C                     	;# 
   476  040D                     	;# 
   477  0415                     	;# 
   478  0416                     	;# 
   479  0417                     	;# 
   480  041C                     	;# 
   481  041D                     	;# 
   482  041E                     	;# 
   483  048D                     	;# 
   484  0491                     	;# 
   485  0492                     	;# 
   486  0493                     	;# 
   487  0493                     	;# 
   488  0494                     	;# 
   489  0495                     	;# 
   490  0496                     	;# 
   491  0497                     	;# 
   492  0791                     	;# 
   493  0792                     	;# 
   494  0793                     	;# 
   495  0794                     	;# 
   496  0795                     	;# 
   497  0798                     	;# 
   498  0799                     	;# 
   499  079A                     	;# 
   500  079B                     	;# 
   501  079C                     	;# 
   502  079D                     	;# 
   503  07A0                     	;# 
   504  07A1                     	;# 
   505  07A2                     	;# 
   506  07A3                     	;# 
   507  07A4                     	;# 
   508  07A5                     	;# 
   509  07A6                     	;# 
   510  07A7                     	;# 
   511  07A8                     	;# 
   512  07A9                     	;# 
   513  07AA                     	;# 
   514  07AB                     	;# 
   515  07AC                     	;# 
   516  07AD                     	;# 
   517  07AE                     	;# 
   518  07AF                     	;# 
   519  07B0                     	;# 
   520  07B1                     	;# 
   521  07B2                     	;# 
   522  07B3                     	;# 
   523  07B4                     	;# 
   524  07B5                     	;# 
   525  07B6                     	;# 
   526  07B7                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000D                     	;# 
   552  000E                     	;# 
   553  000F                     	;# 
   554  0010                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0013                     	;# 
   558  0014                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  008E                     	;# 
   573  008F                     	;# 
   574  0090                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  010F                     	;# 
   594  0110                     	;# 
   595  0111                     	;# 
   596  0112                     	;# 
   597  0113                     	;# 
   598  0114                     	;# 
   599  0115                     	;# 
   600  0116                     	;# 
   601  0117                     	;# 
   602  0118                     	;# 
   603  0119                     	;# 
   604  011A                     	;# 
   605  011B                     	;# 
   606  011D                     	;# 
   607  011E                     	;# 
   608  011F                     	;# 
   609  018C                     	;# 
   610  0190                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0194                     	;# 
   618  0195                     	;# 
   619  0196                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019D                     	;# 
   632  019E                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  019F                     	;# 
   636  020D                     	;# 
   637  0211                     	;# 
   638  0211                     	;# 
   639  0212                     	;# 
   640  0212                     	;# 
   641  0213                     	;# 
   642  0213                     	;# 
   643  0214                     	;# 
   644  0214                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0216                     	;# 
   649  0216                     	;# 
   650  0217                     	;# 
   651  0217                     	;# 
   652  0219                     	;# 
   653  021A                     	;# 
   654  021B                     	;# 
   655  021C                     	;# 
   656  021D                     	;# 
   657  021E                     	;# 
   658  021F                     	;# 
   659  028C                     	;# 
   660  028D                     	;# 
   661  0291                     	;# 
   662  0291                     	;# 
   663  0292                     	;# 
   664  0293                     	;# 
   665  0294                     	;# 
   666  0295                     	;# 
   667  0295                     	;# 
   668  0296                     	;# 
   669  0298                     	;# 
   670  0298                     	;# 
   671  0299                     	;# 
   672  029A                     	;# 
   673  029B                     	;# 
   674  029C                     	;# 
   675  029C                     	;# 
   676  029D                     	;# 
   677  029E                     	;# 
   678  029F                     	;# 
   679  030C                     	;# 
   680  030D                     	;# 
   681  0311                     	;# 
   682  0311                     	;# 
   683  0312                     	;# 
   684  0313                     	;# 
   685  0314                     	;# 
   686  0315                     	;# 
   687  0315                     	;# 
   688  0316                     	;# 
   689  0318                     	;# 
   690  0318                     	;# 
   691  0319                     	;# 
   692  031A                     	;# 
   693  031C                     	;# 
   694  031C                     	;# 
   695  031D                     	;# 
   696  031E                     	;# 
   697  038C                     	;# 
   698  038D                     	;# 
   699  0394                     	;# 
   700  0395                     	;# 
   701  0396                     	;# 
   702  040C                     	;# 
   703  040D                     	;# 
   704  0415                     	;# 
   705  0416                     	;# 
   706  0417                     	;# 
   707  041C                     	;# 
   708  041D                     	;# 
   709  041E                     	;# 
   710  048D                     	;# 
   711  0491                     	;# 
   712  0492                     	;# 
   713  0493                     	;# 
   714  0493                     	;# 
   715  0494                     	;# 
   716  0495                     	;# 
   717  0496                     	;# 
   718  0497                     	;# 
   719  0791                     	;# 
   720  0792                     	;# 
   721  0793                     	;# 
   722  0794                     	;# 
   723  0795                     	;# 
   724  0798                     	;# 
   725  0799                     	;# 
   726  079A                     	;# 
   727  079B                     	;# 
   728  079C                     	;# 
   729  079D                     	;# 
   730  07A0                     	;# 
   731  07A1                     	;# 
   732  07A2                     	;# 
   733  07A3                     	;# 
   734  07A4                     	;# 
   735  07A5                     	;# 
   736  07A6                     	;# 
   737  07A7                     	;# 
   738  07A8                     	;# 
   739  07A9                     	;# 
   740  07AA                     	;# 
   741  07AB                     	;# 
   742  07AC                     	;# 
   743  07AD                     	;# 
   744  07AE                     	;# 
   745  07AF                     	;# 
   746  07B0                     	;# 
   747  07B1                     	;# 
   748  07B2                     	;# 
   749  07B3                     	;# 
   750  07B4                     	;# 
   751  07B5                     	;# 
   752  07B6                     	;# 
   753  07B7                     	;# 
   754  0FE4                     	;# 
   755  0FE5                     	;# 
   756  0FE6                     	;# 
   757  0FE7                     	;# 
   758  0FE8                     	;# 
   759  0FE9                     	;# 
   760  0FEA                     	;# 
   761  0FEB                     	;# 
   762  0FED                     	;# 
   763  0FEE                     	;# 
   764  0FEF                     	;# 
   765  0000                     	;# 
   766  0001                     	;# 
   767  0002                     	;# 
   768  0003                     	;# 
   769  0004                     	;# 
   770  0005                     	;# 
   771  0006                     	;# 
   772  0007                     	;# 
   773  0008                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000F                     	;# 
   781  0010                     	;# 
   782  0011                     	;# 
   783  0012                     	;# 
   784  0013                     	;# 
   785  0014                     	;# 
   786  0015                     	;# 
   787  0016                     	;# 
   788  0016                     	;# 
   789  0017                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  001A                     	;# 
   793  001B                     	;# 
   794  001C                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0094                     	;# 
   806  0095                     	;# 
   807  0096                     	;# 
   808  0097                     	;# 
   809  0098                     	;# 
   810  0099                     	;# 
   811  009A                     	;# 
   812  009B                     	;# 
   813  009B                     	;# 
   814  009C                     	;# 
   815  009D                     	;# 
   816  009E                     	;# 
   817  010C                     	;# 
   818  010D                     	;# 
   819  010E                     	;# 
   820  010F                     	;# 
   821  0110                     	;# 
   822  0111                     	;# 
   823  0112                     	;# 
   824  0113                     	;# 
   825  0114                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011B                     	;# 
   833  011D                     	;# 
   834  011E                     	;# 
   835  011F                     	;# 
   836  018C                     	;# 
   837  0190                     	;# 
   838  0191                     	;# 
   839  0191                     	;# 
   840  0192                     	;# 
   841  0193                     	;# 
   842  0193                     	;# 
   843  0193                     	;# 
   844  0194                     	;# 
   845  0195                     	;# 
   846  0196                     	;# 
   847  0199                     	;# 
   848  0199                     	;# 
   849  019A                     	;# 
   850  019A                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019C                     	;# 
   856  019C                     	;# 
   857  019D                     	;# 
   858  019D                     	;# 
   859  019E                     	;# 
   860  019E                     	;# 
   861  019F                     	;# 
   862  019F                     	;# 
   863  020D                     	;# 
   864  0211                     	;# 
   865  0211                     	;# 
   866  0212                     	;# 
   867  0212                     	;# 
   868  0213                     	;# 
   869  0213                     	;# 
   870  0214                     	;# 
   871  0214                     	;# 
   872  0215                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0216                     	;# 
   876  0216                     	;# 
   877  0217                     	;# 
   878  0217                     	;# 
   879  0219                     	;# 
   880  021A                     	;# 
   881  021B                     	;# 
   882  021C                     	;# 
   883  021D                     	;# 
   884  021E                     	;# 
   885  021F                     	;# 
   886  028C                     	;# 
   887  028D                     	;# 
   888  0291                     	;# 
   889  0291                     	;# 
   890  0292                     	;# 
   891  0293                     	;# 
   892  0294                     	;# 
   893  0295                     	;# 
   894  0295                     	;# 
   895  0296                     	;# 
   896  0298                     	;# 
   897  0298                     	;# 
   898  0299                     	;# 
   899  029A                     	;# 
   900  029B                     	;# 
   901  029C                     	;# 
   902  029C                     	;# 
   903  029D                     	;# 
   904  029E                     	;# 
   905  029F                     	;# 
   906  030C                     	;# 
   907  030D                     	;# 
   908  0311                     	;# 
   909  0311                     	;# 
   910  0312                     	;# 
   911  0313                     	;# 
   912  0314                     	;# 
   913  0315                     	;# 
   914  0315                     	;# 
   915  0316                     	;# 
   916  0318                     	;# 
   917  0318                     	;# 
   918  0319                     	;# 
   919  031A                     	;# 
   920  031C                     	;# 
   921  031C                     	;# 
   922  031D                     	;# 
   923  031E                     	;# 
   924  038C                     	;# 
   925  038D                     	;# 
   926  0394                     	;# 
   927  0395                     	;# 
   928  0396                     	;# 
   929  040C                     	;# 
   930  040D                     	;# 
   931  0415                     	;# 
   932  0416                     	;# 
   933  0417                     	;# 
   934  041C                     	;# 
   935  041D                     	;# 
   936  041E                     	;# 
   937  048D                     	;# 
   938  0491                     	;# 
   939  0492                     	;# 
   940  0493                     	;# 
   941  0493                     	;# 
   942  0494                     	;# 
   943  0495                     	;# 
   944  0496                     	;# 
   945  0497                     	;# 
   946  0791                     	;# 
   947  0792                     	;# 
   948  0793                     	;# 
   949  0794                     	;# 
   950  0795                     	;# 
   951  0798                     	;# 
   952  0799                     	;# 
   953  079A                     	;# 
   954  079B                     	;# 
   955  079C                     	;# 
   956  079D                     	;# 
   957  07A0                     	;# 
   958  07A1                     	;# 
   959  07A2                     	;# 
   960  07A3                     	;# 
   961  07A4                     	;# 
   962  07A5                     	;# 
   963  07A6                     	;# 
   964  07A7                     	;# 
   965  07A8                     	;# 
   966  07A9                     	;# 
   967  07AA                     	;# 
   968  07AB                     	;# 
   969  07AC                     	;# 
   970  07AD                     	;# 
   971  07AE                     	;# 
   972  07AF                     	;# 
   973  07B0                     	;# 
   974  07B1                     	;# 
   975  07B2                     	;# 
   976  07B3                     	;# 
   977  07B4                     	;# 
   978  07B5                     	;# 
   979  07B6                     	;# 
   980  07B7                     	;# 
   981  0FE4                     	;# 
   982  0FE5                     	;# 
   983  0FE6                     	;# 
   984  0FE7                     	;# 
   985  0FE8                     	;# 
   986  0FE9                     	;# 
   987  0FEA                     	;# 
   988  0FEB                     	;# 
   989  0FED                     	;# 
   990  0FEE                     	;# 
   991  0FEF                     	;# 
   992  0000                     	;# 
   993  0001                     	;# 
   994  0002                     	;# 
   995  0003                     	;# 
   996  0004                     	;# 
   997  0005                     	;# 
   998  0006                     	;# 
   999  0007                     	;# 
  1000  0008                     	;# 
  1001  0009                     	;# 
  1002  000A                     	;# 
  1003  000B                     	;# 
  1004  000C                     	;# 
  1005  000D                     	;# 
  1006  000E                     	;# 
  1007  000F                     	;# 
  1008  0010                     	;# 
  1009  0011                     	;# 
  1010  0012                     	;# 
  1011  0013                     	;# 
  1012  0014                     	;# 
  1013  0015                     	;# 
  1014  0016                     	;# 
  1015  0016                     	;# 
  1016  0017                     	;# 
  1017  0018                     	;# 
  1018  0019                     	;# 
  1019  001A                     	;# 
  1020  001B                     	;# 
  1021  001C                     	;# 
  1022  001E                     	;# 
  1023  001F                     	;# 
  1024  008C                     	;# 
  1025  008D                     	;# 
  1026  008E                     	;# 
  1027  008F                     	;# 
  1028  0090                     	;# 
  1029  0091                     	;# 
  1030  0092                     	;# 
  1031  0093                     	;# 
  1032  0094                     	;# 
  1033  0095                     	;# 
  1034  0096                     	;# 
  1035  0097                     	;# 
  1036  0098                     	;# 
  1037  0099                     	;# 
  1038  009A                     	;# 
  1039  009B                     	;# 
  1040  009B                     	;# 
  1041  009C                     	;# 
  1042  009D                     	;# 
  1043  009E                     	;# 
  1044  010C                     	;# 
  1045  010D                     	;# 
  1046  010E                     	;# 
  1047  010F                     	;# 
  1048  0110                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  011A                     	;# 
  1059  011B                     	;# 
  1060  011D                     	;# 
  1061  011E                     	;# 
  1062  011F                     	;# 
  1063  018C                     	;# 
  1064  0190                     	;# 
  1065  0191                     	;# 
  1066  0191                     	;# 
  1067  0192                     	;# 
  1068  0193                     	;# 
  1069  0193                     	;# 
  1070  0193                     	;# 
  1071  0194                     	;# 
  1072  0195                     	;# 
  1073  0196                     	;# 
  1074  0199                     	;# 
  1075  0199                     	;# 
  1076  019A                     	;# 
  1077  019A                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019C                     	;# 
  1083  019C                     	;# 
  1084  019D                     	;# 
  1085  019D                     	;# 
  1086  019E                     	;# 
  1087  019E                     	;# 
  1088  019F                     	;# 
  1089  019F                     	;# 
  1090  020D                     	;# 
  1091  0211                     	;# 
  1092  0211                     	;# 
  1093  0212                     	;# 
  1094  0212                     	;# 
  1095  0213                     	;# 
  1096  0213                     	;# 
  1097  0214                     	;# 
  1098  0214                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0219                     	;# 
  1107  021A                     	;# 
  1108  021B                     	;# 
  1109  021C                     	;# 
  1110  021D                     	;# 
  1111  021E                     	;# 
  1112  021F                     	;# 
  1113  028C                     	;# 
  1114  028D                     	;# 
  1115  0291                     	;# 
  1116  0291                     	;# 
  1117  0292                     	;# 
  1118  0293                     	;# 
  1119  0294                     	;# 
  1120  0295                     	;# 
  1121  0295                     	;# 
  1122  0296                     	;# 
  1123  0298                     	;# 
  1124  0298                     	;# 
  1125  0299                     	;# 
  1126  029A                     	;# 
  1127  029B                     	;# 
  1128  029C                     	;# 
  1129  029C                     	;# 
  1130  029D                     	;# 
  1131  029E                     	;# 
  1132  029F                     	;# 
  1133  030C                     	;# 
  1134  030D                     	;# 
  1135  0311                     	;# 
  1136  0311                     	;# 
  1137  0312                     	;# 
  1138  0313                     	;# 
  1139  0314                     	;# 
  1140  0315                     	;# 
  1141  0315                     	;# 
  1142  0316                     	;# 
  1143  0318                     	;# 
  1144  0318                     	;# 
  1145  0319                     	;# 
  1146  031A                     	;# 
  1147  031C                     	;# 
  1148  031C                     	;# 
  1149  031D                     	;# 
  1150  031E                     	;# 
  1151  038C                     	;# 
  1152  038D                     	;# 
  1153  0394                     	;# 
  1154  0395                     	;# 
  1155  0396                     	;# 
  1156  040C                     	;# 
  1157  040D                     	;# 
  1158  0415                     	;# 
  1159  0416                     	;# 
  1160  0417                     	;# 
  1161  041C                     	;# 
  1162  041D                     	;# 
  1163  041E                     	;# 
  1164  048D                     	;# 
  1165  0491                     	;# 
  1166  0492                     	;# 
  1167  0493                     	;# 
  1168  0493                     	;# 
  1169  0494                     	;# 
  1170  0495                     	;# 
  1171  0496                     	;# 
  1172  0497                     	;# 
  1173  0791                     	;# 
  1174  0792                     	;# 
  1175  0793                     	;# 
  1176  0794                     	;# 
  1177  0795                     	;# 
  1178  0798                     	;# 
  1179  0799                     	;# 
  1180  079A                     	;# 
  1181  079B                     	;# 
  1182  079C                     	;# 
  1183  079D                     	;# 
  1184  07A0                     	;# 
  1185  07A1                     	;# 
  1186  07A2                     	;# 
  1187  07A3                     	;# 
  1188  07A4                     	;# 
  1189  07A5                     	;# 
  1190  07A6                     	;# 
  1191  07A7                     	;# 
  1192  07A8                     	;# 
  1193  07A9                     	;# 
  1194  07AA                     	;# 
  1195  07AB                     	;# 
  1196  07AC                     	;# 
  1197  07AD                     	;# 
  1198  07AE                     	;# 
  1199  07AF                     	;# 
  1200  07B0                     	;# 
  1201  07B1                     	;# 
  1202  07B2                     	;# 
  1203  07B3                     	;# 
  1204  07B4                     	;# 
  1205  07B5                     	;# 
  1206  07B6                     	;# 
  1207  07B7                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000D                     	;# 
  1233  000E                     	;# 
  1234  000F                     	;# 
  1235  0010                     	;# 
  1236  0011                     	;# 
  1237  0012                     	;# 
  1238  0013                     	;# 
  1239  0014                     	;# 
  1240  0015                     	;# 
  1241  0016                     	;# 
  1242  0016                     	;# 
  1243  0017                     	;# 
  1244  0018                     	;# 
  1245  0019                     	;# 
  1246  001A                     	;# 
  1247  001B                     	;# 
  1248  001C                     	;# 
  1249  001E                     	;# 
  1250  001F                     	;# 
  1251  008C                     	;# 
  1252  008D                     	;# 
  1253  008E                     	;# 
  1254  008F                     	;# 
  1255  0090                     	;# 
  1256  0091                     	;# 
  1257  0092                     	;# 
  1258  0093                     	;# 
  1259  0094                     	;# 
  1260  0095                     	;# 
  1261  0096                     	;# 
  1262  0097                     	;# 
  1263  0098                     	;# 
  1264  0099                     	;# 
  1265  009A                     	;# 
  1266  009B                     	;# 
  1267  009B                     	;# 
  1268  009C                     	;# 
  1269  009D                     	;# 
  1270  009E                     	;# 
  1271  010C                     	;# 
  1272  010D                     	;# 
  1273  010E                     	;# 
  1274  010F                     	;# 
  1275  0110                     	;# 
  1276  0111                     	;# 
  1277  0112                     	;# 
  1278  0113                     	;# 
  1279  0114                     	;# 
  1280  0115                     	;# 
  1281  0116                     	;# 
  1282  0117                     	;# 
  1283  0118                     	;# 
  1284  0119                     	;# 
  1285  011A                     	;# 
  1286  011B                     	;# 
  1287  011D                     	;# 
  1288  011E                     	;# 
  1289  011F                     	;# 
  1290  018C                     	;# 
  1291  0190                     	;# 
  1292  0191                     	;# 
  1293  0191                     	;# 
  1294  0192                     	;# 
  1295  0193                     	;# 
  1296  0193                     	;# 
  1297  0193                     	;# 
  1298  0194                     	;# 
  1299  0195                     	;# 
  1300  0196                     	;# 
  1301  0199                     	;# 
  1302  0199                     	;# 
  1303  019A                     	;# 
  1304  019A                     	;# 
  1305  019B                     	;# 
  1306  019B                     	;# 
  1307  019B                     	;# 
  1308  019B                     	;# 
  1309  019C                     	;# 
  1310  019C                     	;# 
  1311  019D                     	;# 
  1312  019D                     	;# 
  1313  019E                     	;# 
  1314  019E                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  020D                     	;# 
  1318  0211                     	;# 
  1319  0211                     	;# 
  1320  0212                     	;# 
  1321  0212                     	;# 
  1322  0213                     	;# 
  1323  0213                     	;# 
  1324  0214                     	;# 
  1325  0214                     	;# 
  1326  0215                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0216                     	;# 
  1330  0216                     	;# 
  1331  0217                     	;# 
  1332  0217                     	;# 
  1333  0219                     	;# 
  1334  021A                     	;# 
  1335  021B                     	;# 
  1336  021C                     	;# 
  1337  021D                     	;# 
  1338  021E                     	;# 
  1339  021F                     	;# 
  1340  028C                     	;# 
  1341  028D                     	;# 
  1342  0291                     	;# 
  1343  0291                     	;# 
  1344  0292                     	;# 
  1345  0293                     	;# 
  1346  0294                     	;# 
  1347  0295                     	;# 
  1348  0295                     	;# 
  1349  0296                     	;# 
  1350  0298                     	;# 
  1351  0298                     	;# 
  1352  0299                     	;# 
  1353  029A                     	;# 
  1354  029B                     	;# 
  1355  029C                     	;# 
  1356  029C                     	;# 
  1357  029D                     	;# 
  1358  029E                     	;# 
  1359  029F                     	;# 
  1360  030C                     	;# 
  1361  030D                     	;# 
  1362  0311                     	;# 
  1363  0311                     	;# 
  1364  0312                     	;# 
  1365  0313                     	;# 
  1366  0314                     	;# 
  1367  0315                     	;# 
  1368  0315                     	;# 
  1369  0316                     	;# 
  1370  0318                     	;# 
  1371  0318                     	;# 
  1372  0319                     	;# 
  1373  031A                     	;# 
  1374  031C                     	;# 
  1375  031C                     	;# 
  1376  031D                     	;# 
  1377  031E                     	;# 
  1378  038C                     	;# 
  1379  038D                     	;# 
  1380  0394                     	;# 
  1381  0395                     	;# 
  1382  0396                     	;# 
  1383  040C                     	;# 
  1384  040D                     	;# 
  1385  0415                     	;# 
  1386  0416                     	;# 
  1387  0417                     	;# 
  1388  041C                     	;# 
  1389  041D                     	;# 
  1390  041E                     	;# 
  1391  048D                     	;# 
  1392  0491                     	;# 
  1393  0492                     	;# 
  1394  0493                     	;# 
  1395  0493                     	;# 
  1396  0494                     	;# 
  1397  0495                     	;# 
  1398  0496                     	;# 
  1399  0497                     	;# 
  1400  0791                     	;# 
  1401  0792                     	;# 
  1402  0793                     	;# 
  1403  0794                     	;# 
  1404  0795                     	;# 
  1405  0798                     	;# 
  1406  0799                     	;# 
  1407  079A                     	;# 
  1408  079B                     	;# 
  1409  079C                     	;# 
  1410  079D                     	;# 
  1411  07A0                     	;# 
  1412  07A1                     	;# 
  1413  07A2                     	;# 
  1414  07A3                     	;# 
  1415  07A4                     	;# 
  1416  07A5                     	;# 
  1417  07A6                     	;# 
  1418  07A7                     	;# 
  1419  07A8                     	;# 
  1420  07A9                     	;# 
  1421  07AA                     	;# 
  1422  07AB                     	;# 
  1423  07AC                     	;# 
  1424  07AD                     	;# 
  1425  07AE                     	;# 
  1426  07AF                     	;# 
  1427  07B0                     	;# 
  1428  07B1                     	;# 
  1429  07B2                     	;# 
  1430  07B3                     	;# 
  1431  07B4                     	;# 
  1432  07B5                     	;# 
  1433  07B6                     	;# 
  1434  07B7                     	;# 
  1435  0FE4                     	;# 
  1436  0FE5                     	;# 
  1437  0FE6                     	;# 
  1438  0FE7                     	;# 
  1439  0FE8                     	;# 
  1440  0FE9                     	;# 
  1441  0FEA                     	;# 
  1442  0FEB                     	;# 
  1443  0FED                     	;# 
  1444  0FEE                     	;# 
  1445  0FEF                     	;# 
  1446  0000                     	;# 
  1447  0001                     	;# 
  1448  0002                     	;# 
  1449  0003                     	;# 
  1450  0004                     	;# 
  1451  0005                     	;# 
  1452  0006                     	;# 
  1453  0007                     	;# 
  1454  0008                     	;# 
  1455  0009                     	;# 
  1456  000A                     	;# 
  1457  000B                     	;# 
  1458  000C                     	;# 
  1459  000D                     	;# 
  1460  000E                     	;# 
  1461  000F                     	;# 
  1462  0010                     	;# 
  1463  0011                     	;# 
  1464  0012                     	;# 
  1465  0013                     	;# 
  1466  0014                     	;# 
  1467  0015                     	;# 
  1468  0016                     	;# 
  1469  0016                     	;# 
  1470  0017                     	;# 
  1471  0018                     	;# 
  1472  0019                     	;# 
  1473  001A                     	;# 
  1474  001B                     	;# 
  1475  001C                     	;# 
  1476  001E                     	;# 
  1477  001F                     	;# 
  1478  008C                     	;# 
  1479  008D                     	;# 
  1480  008E                     	;# 
  1481  008F                     	;# 
  1482  0090                     	;# 
  1483  0091                     	;# 
  1484  0092                     	;# 
  1485  0093                     	;# 
  1486  0094                     	;# 
  1487  0095                     	;# 
  1488  0096                     	;# 
  1489  0097                     	;# 
  1490  0098                     	;# 
  1491  0099                     	;# 
  1492  009A                     	;# 
  1493  009B                     	;# 
  1494  009B                     	;# 
  1495  009C                     	;# 
  1496  009D                     	;# 
  1497  009E                     	;# 
  1498  010C                     	;# 
  1499  010D                     	;# 
  1500  010E                     	;# 
  1501  010F                     	;# 
  1502  0110                     	;# 
  1503  0111                     	;# 
  1504  0112                     	;# 
  1505  0113                     	;# 
  1506  0114                     	;# 
  1507  0115                     	;# 
  1508  0116                     	;# 
  1509  0117                     	;# 
  1510  0118                     	;# 
  1511  0119                     	;# 
  1512  011A                     	;# 
  1513  011B                     	;# 
  1514  011D                     	;# 
  1515  011E                     	;# 
  1516  011F                     	;# 
  1517  018C                     	;# 
  1518  0190                     	;# 
  1519  0191                     	;# 
  1520  0191                     	;# 
  1521  0192                     	;# 
  1522  0193                     	;# 
  1523  0193                     	;# 
  1524  0193                     	;# 
  1525  0194                     	;# 
  1526  0195                     	;# 
  1527  0196                     	;# 
  1528  0199                     	;# 
  1529  0199                     	;# 
  1530  019A                     	;# 
  1531  019A                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019B                     	;# 
  1536  019C                     	;# 
  1537  019C                     	;# 
  1538  019D                     	;# 
  1539  019D                     	;# 
  1540  019E                     	;# 
  1541  019E                     	;# 
  1542  019F                     	;# 
  1543  019F                     	;# 
  1544  020D                     	;# 
  1545  0211                     	;# 
  1546  0211                     	;# 
  1547  0212                     	;# 
  1548  0212                     	;# 
  1549  0213                     	;# 
  1550  0213                     	;# 
  1551  0214                     	;# 
  1552  0214                     	;# 
  1553  0215                     	;# 
  1554  0215                     	;# 
  1555  0215                     	;# 
  1556  0216                     	;# 
  1557  0216                     	;# 
  1558  0217                     	;# 
  1559  0217                     	;# 
  1560  0219                     	;# 
  1561  021A                     	;# 
  1562  021B                     	;# 
  1563  021C                     	;# 
  1564  021D                     	;# 
  1565  021E                     	;# 
  1566  021F                     	;# 
  1567  028C                     	;# 
  1568  028D                     	;# 
  1569  0291                     	;# 
  1570  0291                     	;# 
  1571  0292                     	;# 
  1572  0293                     	;# 
  1573  0294                     	;# 
  1574  0295                     	;# 
  1575  0295                     	;# 
  1576  0296                     	;# 
  1577  0298                     	;# 
  1578  0298                     	;# 
  1579  0299                     	;# 
  1580  029A                     	;# 
  1581  029B                     	;# 
  1582  029C                     	;# 
  1583  029C                     	;# 
  1584  029D                     	;# 
  1585  029E                     	;# 
  1586  029F                     	;# 
  1587  030C                     	;# 
  1588  030D                     	;# 
  1589  0311                     	;# 
  1590  0311                     	;# 
  1591  0312                     	;# 
  1592  0313                     	;# 
  1593  0314                     	;# 
  1594  0315                     	;# 
  1595  0315                     	;# 
  1596  0316                     	;# 
  1597  0318                     	;# 
  1598  0318                     	;# 
  1599  0319                     	;# 
  1600  031A                     	;# 
  1601  031C                     	;# 
  1602  031C                     	;# 
  1603  031D                     	;# 
  1604  031E                     	;# 
  1605  038C                     	;# 
  1606  038D                     	;# 
  1607  0394                     	;# 
  1608  0395                     	;# 
  1609  0396                     	;# 
  1610  040C                     	;# 
  1611  040D                     	;# 
  1612  0415                     	;# 
  1613  0416                     	;# 
  1614  0417                     	;# 
  1615  041C                     	;# 
  1616  041D                     	;# 
  1617  041E                     	;# 
  1618  048D                     	;# 
  1619  0491                     	;# 
  1620  0492                     	;# 
  1621  0493                     	;# 
  1622  0493                     	;# 
  1623  0494                     	;# 
  1624  0495                     	;# 
  1625  0496                     	;# 
  1626  0497                     	;# 
  1627  0791                     	;# 
  1628  0792                     	;# 
  1629  0793                     	;# 
  1630  0794                     	;# 
  1631  0795                     	;# 
  1632  0798                     	;# 
  1633  0799                     	;# 
  1634  079A                     	;# 
  1635  079B                     	;# 
  1636  079C                     	;# 
  1637  079D                     	;# 
  1638  07A0                     	;# 
  1639  07A1                     	;# 
  1640  07A2                     	;# 
  1641  07A3                     	;# 
  1642  07A4                     	;# 
  1643  07A5                     	;# 
  1644  07A6                     	;# 
  1645  07A7                     	;# 
  1646  07A8                     	;# 
  1647  07A9                     	;# 
  1648  07AA                     	;# 
  1649  07AB                     	;# 
  1650  07AC                     	;# 
  1651  07AD                     	;# 
  1652  07AE                     	;# 
  1653  07AF                     	;# 
  1654  07B0                     	;# 
  1655  07B1                     	;# 
  1656  07B2                     	;# 
  1657  07B3                     	;# 
  1658  07B4                     	;# 
  1659  07B5                     	;# 
  1660  07B6                     	;# 
  1661  07B7                     	;# 
  1662  0FE4                     	;# 
  1663  0FE5                     	;# 
  1664  0FE6                     	;# 
  1665  0FE7                     	;# 
  1666  0FE8                     	;# 
  1667  0FE9                     	;# 
  1668  0FEA                     	;# 
  1669  0FEB                     	;# 
  1670  0FED                     	;# 
  1671  0FEE                     	;# 
  1672  0FEF                     	;# 
  1673  0000                     	;# 
  1674  0001                     	;# 
  1675  0002                     	;# 
  1676  0003                     	;# 
  1677  0004                     	;# 
  1678  0005                     	;# 
  1679  0006                     	;# 
  1680  0007                     	;# 
  1681  0008                     	;# 
  1682  0009                     	;# 
  1683  000A                     	;# 
  1684  000B                     	;# 
  1685  000C                     	;# 
  1686  000D                     	;# 
  1687  000E                     	;# 
  1688  000F                     	;# 
  1689  0010                     	;# 
  1690  0011                     	;# 
  1691  0012                     	;# 
  1692  0013                     	;# 
  1693  0014                     	;# 
  1694  0015                     	;# 
  1695  0016                     	;# 
  1696  0016                     	;# 
  1697  0017                     	;# 
  1698  0018                     	;# 
  1699  0019                     	;# 
  1700  001A                     	;# 
  1701  001B                     	;# 
  1702  001C                     	;# 
  1703  001E                     	;# 
  1704  001F                     	;# 
  1705  008C                     	;# 
  1706  008D                     	;# 
  1707  008E                     	;# 
  1708  008F                     	;# 
  1709  0090                     	;# 
  1710  0091                     	;# 
  1711  0092                     	;# 
  1712  0093                     	;# 
  1713  0094                     	;# 
  1714  0095                     	;# 
  1715  0096                     	;# 
  1716  0097                     	;# 
  1717  0098                     	;# 
  1718  0099                     	;# 
  1719  009A                     	;# 
  1720  009B                     	;# 
  1721  009B                     	;# 
  1722  009C                     	;# 
  1723  009D                     	;# 
  1724  009E                     	;# 
  1725  010C                     	;# 
  1726  010D                     	;# 
  1727  010E                     	;# 
  1728  010F                     	;# 
  1729  0110                     	;# 
  1730  0111                     	;# 
  1731  0112                     	;# 
  1732  0113                     	;# 
  1733  0114                     	;# 
  1734  0115                     	;# 
  1735  0116                     	;# 
  1736  0117                     	;# 
  1737  0118                     	;# 
  1738  0119                     	;# 
  1739  011A                     	;# 
  1740  011B                     	;# 
  1741  011D                     	;# 
  1742  011E                     	;# 
  1743  011F                     	;# 
  1744  018C                     	;# 
  1745  0190                     	;# 
  1746  0191                     	;# 
  1747  0191                     	;# 
  1748  0192                     	;# 
  1749  0193                     	;# 
  1750  0193                     	;# 
  1751  0193                     	;# 
  1752  0194                     	;# 
  1753  0195                     	;# 
  1754  0196                     	;# 
  1755  0199                     	;# 
  1756  0199                     	;# 
  1757  019A                     	;# 
  1758  019A                     	;# 
  1759  019B                     	;# 
  1760  019B                     	;# 
  1761  019B                     	;# 
  1762  019B                     	;# 
  1763  019C                     	;# 
  1764  019C                     	;# 
  1765  019D                     	;# 
  1766  019D                     	;# 
  1767  019E                     	;# 
  1768  019E                     	;# 
  1769  019F                     	;# 
  1770  019F                     	;# 
  1771  020D                     	;# 
  1772  0211                     	;# 
  1773  0211                     	;# 
  1774  0212                     	;# 
  1775  0212                     	;# 
  1776  0213                     	;# 
  1777  0213                     	;# 
  1778  0214                     	;# 
  1779  0214                     	;# 
  1780  0215                     	;# 
  1781  0215                     	;# 
  1782  0215                     	;# 
  1783  0216                     	;# 
  1784  0216                     	;# 
  1785  0217                     	;# 
  1786  0217                     	;# 
  1787  0219                     	;# 
  1788  021A                     	;# 
  1789  021B                     	;# 
  1790  021C                     	;# 
  1791  021D                     	;# 
  1792  021E                     	;# 
  1793  021F                     	;# 
  1794  028C                     	;# 
  1795  028D                     	;# 
  1796  0291                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0294                     	;# 
  1801  0295                     	;# 
  1802  0295                     	;# 
  1803  0296                     	;# 
  1804  0298                     	;# 
  1805  0298                     	;# 
  1806  0299                     	;# 
  1807  029A                     	;# 
  1808  029B                     	;# 
  1809  029C                     	;# 
  1810  029C                     	;# 
  1811  029D                     	;# 
  1812  029E                     	;# 
  1813  029F                     	;# 
  1814  030C                     	;# 
  1815  030D                     	;# 
  1816  0311                     	;# 
  1817  0311                     	;# 
  1818  0312                     	;# 
  1819  0313                     	;# 
  1820  0314                     	;# 
  1821  0315                     	;# 
  1822  0315                     	;# 
  1823  0316                     	;# 
  1824  0318                     	;# 
  1825  0318                     	;# 
  1826  0319                     	;# 
  1827  031A                     	;# 
  1828  031C                     	;# 
  1829  031C                     	;# 
  1830  031D                     	;# 
  1831  031E                     	;# 
  1832  038C                     	;# 
  1833  038D                     	;# 
  1834  0394                     	;# 
  1835  0395                     	;# 
  1836  0396                     	;# 
  1837  040C                     	;# 
  1838  040D                     	;# 
  1839  0415                     	;# 
  1840  0416                     	;# 
  1841  0417                     	;# 
  1842  041C                     	;# 
  1843  041D                     	;# 
  1844  041E                     	;# 
  1845  048D                     	;# 
  1846  0491                     	;# 
  1847  0492                     	;# 
  1848  0493                     	;# 
  1849  0493                     	;# 
  1850  0494                     	;# 
  1851  0495                     	;# 
  1852  0496                     	;# 
  1853  0497                     	;# 
  1854  0791                     	;# 
  1855  0792                     	;# 
  1856  0793                     	;# 
  1857  0794                     	;# 
  1858  0795                     	;# 
  1859  0798                     	;# 
  1860  0799                     	;# 
  1861  079A                     	;# 
  1862  079B                     	;# 
  1863  079C                     	;# 
  1864  079D                     	;# 
  1865  07A0                     	;# 
  1866  07A1                     	;# 
  1867  07A2                     	;# 
  1868  07A3                     	;# 
  1869  07A4                     	;# 
  1870  07A5                     	;# 
  1871  07A6                     	;# 
  1872  07A7                     	;# 
  1873  07A8                     	;# 
  1874  07A9                     	;# 
  1875  07AA                     	;# 
  1876  07AB                     	;# 
  1877  07AC                     	;# 
  1878  07AD                     	;# 
  1879  07AE                     	;# 
  1880  07AF                     	;# 
  1881  07B0                     	;# 
  1882  07B1                     	;# 
  1883  07B2                     	;# 
  1884  07B3                     	;# 
  1885  07B4                     	;# 
  1886  07B5                     	;# 
  1887  07B6                     	;# 
  1888  07B7                     	;# 
  1889  0FE4                     	;# 
  1890  0FE5                     	;# 
  1891  0FE6                     	;# 
  1892  0FE7                     	;# 
  1893  0FE8                     	;# 
  1894  0FE9                     	;# 
  1895  0FEA                     	;# 
  1896  0FEB                     	;# 
  1897  0FED                     	;# 
  1898  0FEE                     	;# 
  1899  0FEF                     	;_console
  1900                           
  1901                           	psect	idataBANK0
  1902  07FA                     __pidataBANK0:	
  1903                           
  1904                           ;initializer for _stateMap
  1905  07FA  3490               	retlw	144
  1906  07FB  3480               	retlw	128
  1907  07FC  3420               	retlw	32
  1908  07FD  3460               	retlw	96
  1909  07FE  3440               	retlw	64
  1910  07FF  3410               	retlw	16
  1911                           
  1912                           	psect	idataBANK2
  1913  1F8A                     __pidataBANK2:	
  1914                           ;initializer for Switec_motor@stateMap
  1915                           
  1916  1F8A  3490               	retlw	144
  1917  1F8B  3480               	retlw	128
  1918  1F8C  3420               	retlw	32
  1919  1F8D  3460               	retlw	96
  1920  1F8E  3440               	retlw	64
  1921  1F8F  3410               	retlw	16
  1922                           
  1923                           	psect	idataBANK3
  1924  13DA                     __pidataBANK3:	
  1925                           
  1926                           ;initializer for _DIGIT
  1927  13DA  3401               	retlw	1
  1928  13DB  3401               	retlw	1
  1929  13DC  3401               	retlw	1
  1930  13DD  3400               	retlw	0
  1931  13DE  3401               	retlw	1
  1932  13DF  3401               	retlw	1
  1933  13E0  3401               	retlw	1
  1934  13E1  3400               	retlw	0
  1935  13E2  3400               	retlw	0
  1936  13E3  3401               	retlw	1
  1937  13E4  3400               	retlw	0
  1938  13E5  3400               	retlw	0
  1939  13E6  3401               	retlw	1
  1940  13E7  3400               	retlw	0
  1941  13E8  3401               	retlw	1
  1942  13E9  3400               	retlw	0
  1943  13EA  3401               	retlw	1
  1944  13EB  3401               	retlw	1
  1945  13EC  3401               	retlw	1
  1946  13ED  3400               	retlw	0
  1947  13EE  3401               	retlw	1
  1948  13EF  3401               	retlw	1
  1949  13F0  3400               	retlw	0
  1950  13F1  3401               	retlw	1
  1951  13F2  3401               	retlw	1
  1952  13F3  3400               	retlw	0
  1953  13F4  3401               	retlw	1
  1954  13F5  3401               	retlw	1
  1955  13F6  3400               	retlw	0
  1956  13F7  3401               	retlw	1
  1957  13F8  3401               	retlw	1
  1958  13F9  3401               	retlw	1
  1959  13FA  3400               	retlw	0
  1960  13FB  3401               	retlw	1
  1961  13FC  3400               	retlw	0
  1962  13FD  3401               	retlw	1
  1963  13FE  3401               	retlw	1
  1964  13FF  3400               	retlw	0
  1965  1400  3401               	retlw	1
  1966  1401  3400               	retlw	0
  1967  1402  3401               	retlw	1
  1968  1403  3401               	retlw	1
  1969  1404  3401               	retlw	1
  1970  1405  3401               	retlw	1
  1971  1406  3400               	retlw	0
  1972  1407  3401               	retlw	1
  1973  1408  3401               	retlw	1
  1974  1409  3401               	retlw	1
  1975  140A  3401               	retlw	1
  1976  140B  3401               	retlw	1
  1977  140C  3400               	retlw	0
  1978  140D  3401               	retlw	1
  1979  140E  3400               	retlw	0
  1980  140F  3400               	retlw	0
  1981  1410  3401               	retlw	1
  1982  1411  3400               	retlw	0
  1983  1412  3401               	retlw	1
  1984  1413  3401               	retlw	1
  1985  1414  3401               	retlw	1
  1986  1415  3401               	retlw	1
  1987  1416  3401               	retlw	1
  1988  1417  3401               	retlw	1
  1989  1418  3401               	retlw	1
  1990  1419  3401               	retlw	1
  1991  141A  3401               	retlw	1
  1992  141B  3401               	retlw	1
  1993  141C  3401               	retlw	1
  1994  141D  3400               	retlw	0
  1995  141E  3401               	retlw	1
  1996  141F  3401               	retlw	1
  1997  1420  3400               	retlw	0
  1998  1421  3400               	retlw	0
  1999  1422  3400               	retlw	0
  2000  1423  3400               	retlw	0
  2001  1424  3400               	retlw	0
  2002  1425  3400               	retlw	0
  2003  1426  3400               	retlw	0
  2004                           
  2005                           	psect	stringtext
  2006  1800                     __pstringtext:	
  2007  1800                     atan@coeff_a:	
  2008  1800  343C               	retlw	60
  2009  1801  3404               	retlw	4
  2010  1802  3442               	retlw	66
  2011  1803  349F               	retlw	159
  2012  1804  346A               	retlw	106
  2013  1805  3442               	retlw	66
  2014  1806  3490               	retlw	144
  2015  1807  3401               	retlw	1
  2016  1808  3442               	retlw	66
  2017  1809  344D               	retlw	77
  2018  180A  34BB               	retlw	187
  2019  180B  3440               	retlw	64
  2020  180C  34EC               	retlw	236
  2021  180D  3447               	retlw	71
  2022  180E  343E               	retlw	62
  2023  180F  348E               	retlw	142
  2024  1810  341F               	retlw	31
  2025  1811  34BB               	retlw	187
  2026  1812                     __end_ofatan@coeff_a:	
  2027  1812                     atan@coeff_b:	
  2028  1812  343C               	retlw	60
  2029  1813  3404               	retlw	4
  2030  1814  3442               	retlw	66
  2031  1815  345A               	retlw	90
  2032  1816  348B               	retlw	139
  2033  1817  3442               	retlw	66
  2034  1818  3404               	retlw	4
  2035  1819  3444               	retlw	68
  2036  181A  3442               	retlw	66
  2037  181B  349C               	retlw	156
  2038  181C  344F               	retlw	79
  2039  181D  3441               	retlw	65
  2040  181E  3400               	retlw	0
  2041  181F  3480               	retlw	128
  2042  1820  343F               	retlw	63
  2043  1821                     __end_ofatan@coeff_b:	
  2044  000B                     _INTCONbits	set	11
  2045  0011                     _PIR1bits	set	17
  2046  000F                     _PORTD	set	15
  2047  0060                     _RA0	set	96
  2048  0061                     _RA1	set	97
  2049  0062                     _RA2	set	98
  2050  0064                     _RA4	set	100
  2051  0070                     _RC0	set	112
  2052  0071                     _RC1	set	113
  2053  0072                     _RC2	set	114
  2054  0078                     _RD0	set	120
  2055  0079                     _RD1	set	121
  2056  007A                     _RD2	set	122
  2057  0080                     _RE0	set	128
  2058  0081                     _RE1	set	129
  2059  0082                     _RE2	set	130
  2060  0083                     _RE3	set	131
  2061  0084                     _RE4	set	132
  2062  0085                     _RE5	set	133
  2063  0086                     _RE6	set	134
  2064  0095                     _OPTION_REGbits	set	149
  2065  0099                     _OSCCON	set	153
  2066  009A                     _OSCSTAT	set	154
  2067  0098                     _OSCTUNE	set	152
  2068  0091                     _PIE1bits	set	145
  2069  008C                     _TRISA	set	140
  2070  008D                     _TRISB	set	141
  2071  008E                     _TRISC	set	142
  2072  008F                     _TRISD	set	143
  2073  0090                     _TRISE	set	144
  2074  0473                     _TRISC3	set	1139
  2075  0474                     _TRISC4	set	1140
  2076  011D                     _APFCON	set	285
  2077  010C                     _LATA	set	268
  2078  010D                     _LATB	set	269
  2079  010E                     _LATC	set	270
  2080  010F                     _LATD	set	271
  2081  0110                     _LATE	set	272
  2082  018C                     _ANSELA	set	396
  2083  0190                     _ANSELE	set	400
  2084  019F                     _BAUD1CON	set	415
  2085  0199                     _RC1REG	set	409
  2086  019D                     _RC1STA	set	413
  2087  019D                     _RC1STAbits	set	413
  2088  019C                     _SP1BRGH	set	412
  2089  019B                     _SP1BRGL	set	411
  2090  019A                     _TX1REG	set	410
  2091  019E                     _TX1STA	set	414
  2092  019E                     _TX1STAbits	set	414
  2093  0212                     _SSP1ADD	set	530
  2094  0211                     _SSP1BUF	set	529
  2095  0215                     _SSP1CON1	set	533
  2096  0216                     _SSP1CON2	set	534
  2097  0214                     _SSP1STAT	set	532
  2098  020D                     _WPUB	set	525
  2099  10B5                     _ACKDT	set	4277
  2100  10B4                     _ACKEN	set	4276
  2101  10B2                     _PEN	set	4274
  2102  10B3                     _RCEN	set	4275
  2103  10B1                     _RSEN	set	4273
  2104  10B0                     _SEN	set	4272
  2105  1460                     _RF0	set	5216
  2106  1461                     _RF1	set	5217
  2107  1462                     _RF2	set	5218
  2108  1463                     _RF3	set	5219
  2109  1464                     _RF4	set	5220
  2110  1465                     _RF5	set	5221
  2111  1466                     _RF6	set	5222
  2112  1467                     _RF7	set	5223
  2113  1468                     _RG0	set	5224
  2114  1469                     _RG1	set	5225
  2115  146A                     _RG2	set	5226
  2116  146B                     _RG3	set	5227
  2117  030C                     _TRISF	set	780
  2118  030D                     _TRISG	set	781
  2119  038C                     _LATF	set	908
  2120  038D                     _LATG	set	909
  2121  040C                     _ANSELF	set	1036
  2122  040D                     _ANSELG	set	1037
  2123  048D                     _WPUG	set	1165
  2124  1821                     STR_1:	
  2125  1821  3473               	retlw	115	;'s'
  2126  1822  3474               	retlw	116	;'t'
  2127  1823  3472               	retlw	114	;'r'
  2128  1824  340D               	retlw	13
  2129  1825  3400               	retlw	0
  2130                           
  2131                           ; #config settings
  2132  0000                     
  2133                           	psect	cinit
  2134  0018                     start_initialization:	
  2135  0018                     __initialization:		;BIGRAM
  2136                           
  2137                           ; Clear objects allocated to BIGRAM
  2138  0018  3050               	movlw	low (0+9040)
  2139  0019  0084               	movwf	4
  2140  001A  3023               	movlw	high (0+9040)
  2141  001B  0085               	movwf	5
  2142  001C  30A0               	movlw	160
  2143  001D  00FE               	movwf	btemp
  2144  001E  3000               	movlw	0
  2145  001F  00FF               	movwf	btemp+1
  2146  0020  319F  27D8  3180   	fcall	clear_ram0
  2147                           
  2148                           ; Clear objects allocated to BANK0
  2149  0023  01DF               	clrf	__pbssBANK0& (0+127)
  2150  0024  01E0               	clrf	(__pbssBANK0+1)& (0+127)
  2151  0025  01E1               	clrf	(__pbssBANK0+2)& (0+127)
  2152  0026  01E2               	clrf	(__pbssBANK0+3)& (0+127)
  2153  0027  01E3               	clrf	(__pbssBANK0+4)& (0+127)
  2154  0028  01E4               	clrf	(__pbssBANK0+5)& (0+127)
  2155  0029  01E5               	clrf	(__pbssBANK0+6)& (0+127)
  2156  002A  01E6               	clrf	(__pbssBANK0+7)& (0+127)
  2157  002B  01E7               	clrf	(__pbssBANK0+8)& (0+127)
  2158                           
  2159                           ; Clear objects allocated to BANK2
  2160  002C  3057               	movlw	low __pbssBANK2
  2161  002D  0084               	movwf	4
  2162  002E  3001               	movlw	high __pbssBANK2
  2163  002F  0085               	movwf	5
  2164  0030  3012               	movlw	18
  2165  0031  00FE               	movwf	btemp
  2166  0032  3000               	movlw	0
  2167  0033  00FF               	movwf	btemp+1
  2168  0034  319F  27D8  3180   	fcall	clear_ram0
  2169                           
  2170                           ; Initialize objects allocated to BANK0
  2171  0037  30FA               	movlw	low __pidataBANK0
  2172  0038  0084               	movwf	4
  2173  0039  3087               	movlw	(high __pidataBANK0)| (0+128)
  2174  003A  0085               	movwf	5
  2175  003B  3068               	movlw	low __pdataBANK0
  2176  003C  0086               	movwf	6
  2177  003D  3000               	movlw	high __pdataBANK0
  2178  003E  0087               	movwf	7
  2179  003F  3000               	movlw	0
  2180  0040  00FF               	movwf	btemp+1
  2181  0041  3006               	movlw	6
  2182  0042  319F  27CC  3180   	fcall	init_ram
  2183                           
  2184                           ; Initialize objects allocated to BANK2
  2185  0045  308A               	movlw	low __pidataBANK2
  2186  0046  0084               	movwf	4
  2187  0047  309F               	movlw	(high __pidataBANK2)| (0+128)
  2188  0048  0085               	movwf	5
  2189  0049  3069               	movlw	low __pdataBANK2
  2190  004A  0086               	movwf	6
  2191  004B  3001               	movlw	high __pdataBANK2
  2192  004C  0087               	movwf	7
  2193  004D  3000               	movlw	0
  2194  004E  00FF               	movwf	btemp+1
  2195  004F  3006               	movlw	6
  2196  0050  319F  27CC  3180   	fcall	init_ram
  2197                           
  2198                           ; Initialize objects allocated to BANK3
  2199  0053  30DA               	movlw	low __pidataBANK3
  2200  0054  0084               	movwf	4
  2201  0055  3093               	movlw	(high __pidataBANK3)| (0+128)
  2202  0056  0085               	movwf	5
  2203  0057  30A0               	movlw	low __pdataBANK3
  2204  0058  0086               	movwf	6
  2205  0059  3001               	movlw	high __pdataBANK3
  2206  005A  0087               	movwf	7
  2207  005B  3000               	movlw	0
  2208  005C  00FF               	movwf	btemp+1
  2209  005D  304D               	movlw	77
  2210  005E  319F  27CC         	fcall	init_ram
  2211  0060                     end_of_initialization:	
  2212                           ;End of C runtime variable initialization code
  2213                           
  2214  0060                     __end_of__initialization:	
  2215  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2216  0061  0020               	movlb	0
  2217  0062  318D  2D62         	ljmp	_main	;jump to C main() function
  2218                           
  2219                           	psect	bssBANK0
  2220  005F                     __pbssBANK0:	
  2221  005F                     _charac:	
  2222  005F                     	ds	2
  2223  0061                     _lines:	
  2224  0061                     	ds	2
  2225  0063                     _position:	
  2226  0063                     	ds	2
  2227  0065                     _vZ:	
  2228  0065                     	ds	2
  2229  0067                     _state:	
  2230  0067                     	ds	1
  2231                           
  2232                           	psect	dataBANK0
  2233  0068                     __pdataBANK0:	
  2234  0068                     _stateMap:	
  2235  0068                     	ds	6
  2236                           
  2237                           	psect	bssBANK2
  2238  0157                     __pbssBANK2:	
  2239  0157                     _Xoff:	
  2240  0157                     	ds	3
  2241  015A                     _Xsf:	
  2242  015A                     	ds	3
  2243  015D                     _Yoff:	
  2244  015D                     	ds	3
  2245  0160                     _Ysf:	
  2246  0160                     	ds	3
  2247  0163                     _errno:	
  2248  0163                     	ds	2
  2249  0165                     _vX:	
  2250  0165                     	ds	2
  2251  0167                     _vY:	
  2252  0167                     	ds	2
  2253                           
  2254                           	psect	dataBANK2
  2255  0169                     __pdataBANK2:	
  2256  0169                     Switec_motor@stateMap:	
  2257  0169                     	ds	6
  2258                           
  2259                           	psect	dataBANK3
  2260  01A0                     __pdataBANK3:	
  2261  01A0                     _DIGIT:	
  2262  01A0                     	ds	77
  2263                           
  2264                           	psect	clrtext
  2265  1FD8                     clear_ram0:	
  2266                           ;	Called with FSR0 containing the base address, and
  2267                           ;	btemp/btemp+1 has the size to clear
  2268                           
  2269  1FD8  0064               	clrwdt	;clear the watchdog before getting into this loop
  2270  1FD9                     clrloop0:	
  2271  1FD9  0180               	clrf	0	;clear RAM location pointed to by FSR
  2272  1FDA  3101               	addfsr 0,1
  2273  1FDB  3001               	movlw	1
  2274  1FDC  02FE               	subwf	126,f
  2275  1FDD  3000               	movlw	0
  2276  1FDE  3BFF               	subwfb	127,f
  2277  1FDF  087F               	movf	127,w
  2278  1FE0  047E               	iorwf	126,w
  2279  1FE1  1903               	btfsc	3,2
  2280  1FE2  3400               	retlw	0	;all done for this memory range, return
  2281  1FE3  2FD9               	goto	clrloop0	;have we reached the end yet?
  2282                           
  2283                           	psect	inittext
  2284  1FCC                     init_ram:	
  2285  1FCC  00FE               	movwf	126
  2286  1FCD                     initloop:	
  2287  1FCD  0012               	moviw fsr0++
  2288  1FCE  001E               	movwi fsr1++
  2289  1FCF  3001               	movlw	1
  2290  1FD0  02FE               	subwf	126,f
  2291  1FD1  3000               	movlw	0
  2292  1FD2  3BFF               	subwfb	127,f
  2293  1FD3  087F               	movf	127,w
  2294  1FD4  047E               	iorwf	126,w
  2295  1FD5  1903               	btfsc	3,2
  2296  1FD6  3400               	retlw	0
  2297  1FD7  2FCD               	goto	initloop
  2298                           
  2299                           	psect	cstackBANK2
  2300  0120                     __pcstackBANK2:	
  2301  0120                     LIS3MDL_Read_XY@X_L:	
  2302  0120                     atan@y:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305                           
  2306                           ; 3 bytes @ 0x0
  2307  0120                     	ds	1
  2308  0121                     LIS3MDL_Read_XY@X_H:	
  2309                           
  2310                           ; 1 bytes @ 0x1
  2311  0121                     	ds	1
  2312  0122                     LIS3MDL_Read_XY@Y_L:	
  2313                           
  2314                           ; 1 bytes @ 0x2
  2315  0122                     	ds	1
  2316  0123                     LIS3MDL_Read_XY@Y_H:	
  2317  0123                     atan@x:	
  2318                           ; 1 bytes @ 0x3
  2319                           
  2320                           
  2321                           ; 3 bytes @ 0x3
  2322  0123                     	ds	1
  2323  0124                     _LIS3MDL_Read_XY$1139:	
  2324                           
  2325                           ; 2 bytes @ 0x4
  2326  0124                     	ds	2
  2327  0126                     atan@recip:	
  2328                           
  2329                           ; 1 bytes @ 0x6
  2330  0126                     	ds	1
  2331  0127                     atan@val_squared:	
  2332                           
  2333                           ; 3 bytes @ 0x7
  2334  0127                     	ds	3
  2335  012A                     atan@val:	
  2336                           
  2337                           ; 3 bytes @ 0xA
  2338  012A                     	ds	3
  2339  012D                     _atan2$1141:	
  2340                           
  2341                           ; 3 bytes @ 0xD
  2342  012D                     	ds	3
  2343  0130                     _atan2$1142:	
  2344                           
  2345                           ; 3 bytes @ 0x10
  2346  0130                     	ds	3
  2347  0133                     _atan2$1144:	
  2348                           
  2349                           ; 3 bytes @ 0x13
  2350  0133                     	ds	3
  2351  0136                     _atan2$1143:	
  2352                           
  2353                           ; 3 bytes @ 0x16
  2354  0136                     	ds	3
  2355  0139                     atan2@v:	
  2356                           
  2357                           ; 3 bytes @ 0x19
  2358  0139                     	ds	3
  2359  013C                     ??_main:	
  2360                           
  2361                           ; 0 bytes @ 0x1C
  2362  013C                     	ds	3
  2363  013F                     main@angle:	
  2364                           
  2365                           ; 3 bytes @ 0x1F
  2366  013F                     	ds	3
  2367  0142                     _main$1138:	
  2368                           
  2369                           ; 3 bytes @ 0x22
  2370  0142                     	ds	3
  2371  0145                     _main$1137:	
  2372                           
  2373                           ; 2 bytes @ 0x25
  2374  0145                     	ds	2
  2375  0147                     main@minX:	
  2376                           
  2377                           ; 2 bytes @ 0x27
  2378  0147                     	ds	2
  2379  0149                     main@minY:	
  2380                           
  2381                           ; 2 bytes @ 0x29
  2382  0149                     	ds	2
  2383  014B                     main@dX:	
  2384                           
  2385                           ; 3 bytes @ 0x2B
  2386  014B                     	ds	3
  2387  014E                     main@dY:	
  2388                           
  2389                           ; 3 bytes @ 0x2E
  2390  014E                     	ds	3
  2391  0151                     main@maxX:	
  2392                           
  2393                           ; 2 bytes @ 0x31
  2394  0151                     	ds	2
  2395  0153                     main@maxY:	
  2396                           
  2397                           ; 2 bytes @ 0x33
  2398  0153                     	ds	2
  2399  0155                     main@i:	
  2400                           
  2401                           ; 2 bytes @ 0x35
  2402  0155                     	ds	2
  2403                           
  2404                           	psect	cstackBANK1
  2405  00A0                     __pcstackBANK1:	
  2406  00A0                     ??_SYSTEM_Initialize:	
  2407  00A0                     ??_OSCILLATOR_Initialize:	
  2408                           ; 0 bytes @ 0x0
  2409                           
  2410  00A0                     ??_EUSART_Initialize:	
  2411                           ; 0 bytes @ 0x0
  2412                           
  2413  00A0                     ??_i2c_Init:	
  2414                           ; 0 bytes @ 0x0
  2415                           
  2416  00A0                     ??_PIN_MANAGER_Initialize:	
  2417                           ; 0 bytes @ 0x0
  2418                           
  2419  00A0                     ??_i2c_Wait:	
  2420                           ; 0 bytes @ 0x0
  2421                           
  2422  00A0                     ??_i2c_Start:	
  2423                           ; 0 bytes @ 0x0
  2424                           
  2425  00A0                     ??_i2c_Restart:	
  2426                           ; 0 bytes @ 0x0
  2427                           
  2428  00A0                     ??_i2c_Stop:	
  2429                           ; 0 bytes @ 0x0
  2430                           
  2431  00A0                     ??_i2c_Write:	
  2432                           ; 0 bytes @ 0x0
  2433                           
  2434  00A0                     ??_i2c_Read:	
  2435                           ; 0 bytes @ 0x0
  2436                           
  2437  00A0                     ??_stepCounterClock:	
  2438                           ; 0 bytes @ 0x0
  2439                           
  2440  00A0                     ??_putch:	
  2441                           ; 0 bytes @ 0x0
  2442                           
  2443  00A0                     ?___ftge:	
  2444                           ; 0 bytes @ 0x0
  2445                           
  2446  00A0                     ?___bmul:	
  2447                           ; 1 bit 
  2448                           
  2449  00A0                     ?___wmul:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  00A0                     ?___awmod:	
  2453                           ; 2 bytes @ 0x0
  2454                           
  2455  00A0                     ?___ftpack:	
  2456                           ; 2 bytes @ 0x0
  2457                           
  2458  00A0                     i2c_Write@data:	
  2459                           ; 3 bytes @ 0x0
  2460                           
  2461  00A0                     putch@byte:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  00A0                     ___bmul@multiplicand:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  00A0                     ___wmul@multiplier:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  00A0                     ___awmod@divisor:	
  2471                           ; 2 bytes @ 0x0
  2472                           
  2473  00A0                     ___ftpack@arg:	
  2474                           ; 2 bytes @ 0x0
  2475                           
  2476  00A0                     ___ftge@ff1:	
  2477                           ; 3 bytes @ 0x0
  2478                           
  2479                           
  2480                           ; 3 bytes @ 0x0
  2481  00A0                     	ds	1
  2482  00A1                     ?_LIS3MDL_Write:	
  2483  00A1                     ??___bmul:	
  2484                           ; 0 bytes @ 0x1
  2485                           
  2486  00A1                     ?_printf:	
  2487                           ; 0 bytes @ 0x1
  2488                           
  2489  00A1                     i2c_Read@ack:	
  2490                           ; 2 bytes @ 0x1
  2491                           
  2492  00A1                     LIS3MDL_Write@data:	
  2493                           ; 1 bytes @ 0x1
  2494                           
  2495  00A1                     printf@f:	
  2496                           ; 1 bytes @ 0x1
  2497                           
  2498                           
  2499                           ; 2 bytes @ 0x1
  2500  00A1                     	ds	1
  2501  00A2                     ??_zeroNeedle:	
  2502  00A2                     ??_LIS3MDL_Write:	
  2503                           ; 0 bytes @ 0x2
  2504                           
  2505  00A2                     i2c_Read@i2cReadData:	
  2506                           ; 0 bytes @ 0x2
  2507                           
  2508  00A2                     LIS3MDL_Write@reg:	
  2509                           ; 1 bytes @ 0x2
  2510                           
  2511  00A2                     ___bmul@product:	
  2512                           ; 1 bytes @ 0x2
  2513                           
  2514  00A2                     zeroNeedle@i:	
  2515                           ; 1 bytes @ 0x2
  2516                           
  2517  00A2                     ___wmul@multiplicand:	
  2518                           ; 2 bytes @ 0x2
  2519                           
  2520  00A2                     ___awmod@dividend:	
  2521                           ; 2 bytes @ 0x2
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x2
  2525  00A2                     	ds	1
  2526  00A3                     ??_printf:	
  2527  00A3                     ??_LIS3MDL_Wait:	
  2528                           ; 0 bytes @ 0x3
  2529                           
  2530  00A3                     ??_LIS3MDL_Read_Raw_XY:	
  2531                           ; 0 bytes @ 0x3
  2532                           
  2533  00A3                     ___bmul@multiplier:	
  2534                           ; 0 bytes @ 0x3
  2535                           
  2536  00A3                     ___ftpack@exp:	
  2537                           ; 1 bytes @ 0x3
  2538                           
  2539  00A3                     ___ftge@ff2:	
  2540                           ; 1 bytes @ 0x3
  2541                           
  2542                           
  2543                           ; 3 bytes @ 0x3
  2544  00A3                     	ds	1
  2545  00A4                     ??___wmul:	
  2546  00A4                     ??___awmod:	
  2547                           ; 0 bytes @ 0x4
  2548                           
  2549  00A4                     LIS3MDL_Wait@ZYXDA:	
  2550                           ; 0 bytes @ 0x4
  2551                           
  2552  00A4                     ___ftpack@sign:	
  2553                           ; 1 bytes @ 0x4
  2554                           
  2555  00A4                     ___wmul@product:	
  2556                           ; 1 bytes @ 0x4
  2557                           
  2558                           
  2559                           ; 2 bytes @ 0x4
  2560  00A4                     	ds	1
  2561  00A5                     ??___ftpack:	
  2562  00A5                     ___awmod@counter:	
  2563                           ; 0 bytes @ 0x5
  2564                           
  2565                           
  2566                           ; 1 bytes @ 0x5
  2567  00A5                     	ds	1
  2568  00A6                     ??___ftge:	
  2569  00A6                     printf@ap:	
  2570                           ; 0 bytes @ 0x6
  2571                           
  2572  00A6                     ___awmod@sign:	
  2573                           ; 1 bytes @ 0x6
  2574                           
  2575                           
  2576                           ; 1 bytes @ 0x6
  2577  00A6                     	ds	1
  2578  00A7                     ?___awdiv:	
  2579  00A7                     printf@c:	
  2580                           ; 2 bytes @ 0x7
  2581                           
  2582  00A7                     ___awdiv@divisor:	
  2583                           ; 1 bytes @ 0x7
  2584                           
  2585                           
  2586                           ; 2 bytes @ 0x7
  2587  00A7                     	ds	1
  2588  00A8                     ?___awtoft:	
  2589  00A8                     ?___ftdiv:	
  2590                           ; 3 bytes @ 0x8
  2591                           
  2592  00A8                     LIS3MDL_Read_Raw_XY@X_L:	
  2593                           ; 3 bytes @ 0x8
  2594                           
  2595  00A8                     ___awtoft@c:	
  2596                           ; 1 bytes @ 0x8
  2597                           
  2598  00A8                     ___ftdiv@f2:	
  2599                           ; 2 bytes @ 0x8
  2600                           
  2601                           
  2602                           ; 3 bytes @ 0x8
  2603  00A8                     	ds	1
  2604  00A9                     LIS3MDL_Read_Raw_XY@X_H:	
  2605  00A9                     ___awdiv@dividend:	
  2606                           ; 1 bytes @ 0x9
  2607                           
  2608                           
  2609                           ; 2 bytes @ 0x9
  2610  00A9                     	ds	1
  2611  00AA                     LIS3MDL_Read_Raw_XY@Y_L:	
  2612                           
  2613                           ; 1 bytes @ 0xA
  2614  00AA                     	ds	1
  2615  00AB                     ??___awdiv:	
  2616  00AB                     ??___awtoft:	
  2617                           ; 0 bytes @ 0xB
  2618                           
  2619  00AB                     LIS3MDL_Read_Raw_XY@Y_H:	
  2620                           ; 0 bytes @ 0xB
  2621                           
  2622  00AB                     ___ftdiv@f1:	
  2623                           ; 1 bytes @ 0xB
  2624                           
  2625                           
  2626                           ; 3 bytes @ 0xB
  2627  00AB                     	ds	1
  2628  00AC                     ___awdiv@counter:	
  2629                           
  2630                           ; 1 bytes @ 0xC
  2631  00AC                     	ds	1
  2632  00AD                     ___awdiv@sign:	
  2633  00AD                     ___awtoft@sign:	
  2634                           ; 1 bytes @ 0xD
  2635                           
  2636                           
  2637                           ; 1 bytes @ 0xD
  2638  00AD                     	ds	1
  2639  00AE                     ??___ftdiv:	
  2640  00AE                     ___awdiv@quotient:	
  2641                           ; 0 bytes @ 0xE
  2642                           
  2643                           
  2644                           ; 2 bytes @ 0xE
  2645  00AE                     	ds	2
  2646  00B0                     ?_display:	
  2647  00B0                     display@x:	
  2648                           ; 0 bytes @ 0x10
  2649                           
  2650                           
  2651                           ; 2 bytes @ 0x10
  2652  00B0                     	ds	2
  2653  00B2                     ??_display:	
  2654  00B2                     ___ftdiv@cntr:	
  2655                           ; 0 bytes @ 0x12
  2656                           
  2657                           
  2658                           ; 1 bytes @ 0x12
  2659  00B2                     	ds	1
  2660  00B3                     display@neg:	
  2661  00B3                     ___ftdiv@f3:	
  2662                           ; 1 bytes @ 0x13
  2663                           
  2664                           
  2665                           ; 3 bytes @ 0x13
  2666  00B3                     	ds	1
  2667  00B4                     display@x0:	
  2668                           
  2669                           ; 2 bytes @ 0x14
  2670  00B4                     	ds	2
  2671  00B6                     ___ftdiv@exp:	
  2672  00B6                     display@x1:	
  2673                           ; 1 bytes @ 0x16
  2674                           
  2675                           
  2676                           ; 2 bytes @ 0x16
  2677  00B6                     	ds	1
  2678  00B7                     ___ftdiv@sign:	
  2679                           
  2680                           ; 1 bytes @ 0x17
  2681  00B7                     	ds	1
  2682  00B8                     ?___ftneg:	
  2683  00B8                     display@x2:	
  2684                           ; 3 bytes @ 0x18
  2685                           
  2686  00B8                     ___ftneg@f1:	
  2687                           ; 2 bytes @ 0x18
  2688                           
  2689                           
  2690                           ; 3 bytes @ 0x18
  2691  00B8                     	ds	2
  2692  00BA                     display@x3:	
  2693                           
  2694                           ; 2 bytes @ 0x1A
  2695  00BA                     	ds	1
  2696  00BB                     ??___ftneg:	
  2697  00BB                     ?_fabs:	
  2698                           ; 0 bytes @ 0x1B
  2699                           
  2700  00BB                     ?___ftadd:	
  2701                           ; 3 bytes @ 0x1B
  2702                           
  2703  00BB                     fabs@d:	
  2704                           ; 3 bytes @ 0x1B
  2705                           
  2706  00BB                     ___ftadd@f1:	
  2707                           ; 3 bytes @ 0x1B
  2708                           
  2709                           
  2710                           ; 3 bytes @ 0x1B
  2711  00BB                     	ds	3
  2712  00BE                     ??_fabs:	
  2713  00BE                     ___ftadd@f2:	
  2714                           ; 0 bytes @ 0x1E
  2715                           
  2716                           
  2717                           ; 3 bytes @ 0x1E
  2718  00BE                     	ds	3
  2719  00C1                     ??___ftadd:	
  2720                           
  2721                           ; 0 bytes @ 0x21
  2722  00C1                     	ds	4
  2723  00C5                     ___ftadd@sign:	
  2724                           
  2725                           ; 1 bytes @ 0x25
  2726  00C5                     	ds	1
  2727  00C6                     ___ftadd@exp2:	
  2728                           
  2729                           ; 1 bytes @ 0x26
  2730  00C6                     	ds	1
  2731  00C7                     ___ftadd@exp1:	
  2732                           
  2733                           ; 1 bytes @ 0x27
  2734  00C7                     	ds	1
  2735  00C8                     ?___ftmul:	
  2736  00C8                     ?___ftsub:	
  2737                           ; 3 bytes @ 0x28
  2738                           
  2739  00C8                     ___ftmul@f1:	
  2740                           ; 3 bytes @ 0x28
  2741                           
  2742  00C8                     ___ftsub@f2:	
  2743                           ; 3 bytes @ 0x28
  2744                           
  2745                           
  2746                           ; 3 bytes @ 0x28
  2747  00C8                     	ds	3
  2748  00CB                     ___ftmul@f2:	
  2749  00CB                     ___ftsub@f1:	
  2750                           ; 3 bytes @ 0x2B
  2751                           
  2752                           
  2753                           ; 3 bytes @ 0x2B
  2754  00CB                     	ds	3
  2755  00CE                     ??___ftmul:	
  2756  00CE                     ??___ftsub:	
  2757                           ; 0 bytes @ 0x2E
  2758                           
  2759                           
  2760                           ; 0 bytes @ 0x2E
  2761  00CE                     	ds	4
  2762  00D2                     ___ftmul@exp:	
  2763                           
  2764                           ; 1 bytes @ 0x32
  2765  00D2                     	ds	1
  2766  00D3                     ___ftmul@f3_as_product:	
  2767                           
  2768                           ; 3 bytes @ 0x33
  2769  00D3                     	ds	3
  2770  00D6                     ___ftmul@cntr:	
  2771                           
  2772                           ; 1 bytes @ 0x36
  2773  00D6                     	ds	1
  2774  00D7                     ___ftmul@sign:	
  2775                           
  2776                           ; 1 bytes @ 0x37
  2777  00D7                     	ds	1
  2778  00D8                     ?_eval_poly:	
  2779  00D8                     ?___fttol:	
  2780                           ; 3 bytes @ 0x38
  2781                           
  2782  00D8                     ___fttol@f1:	
  2783                           ; 4 bytes @ 0x38
  2784                           
  2785  00D8                     eval_poly@x:	
  2786                           ; 3 bytes @ 0x38
  2787                           
  2788                           
  2789                           ; 3 bytes @ 0x38
  2790  00D8                     	ds	3
  2791  00DB                     eval_poly@d:	
  2792                           
  2793                           ; 2 bytes @ 0x3B
  2794  00DB                     	ds	1
  2795  00DC                     ??___fttol:	
  2796                           
  2797                           ; 0 bytes @ 0x3C
  2798  00DC                     	ds	1
  2799  00DD                     eval_poly@n:	
  2800                           
  2801                           ; 2 bytes @ 0x3D
  2802  00DD                     	ds	2
  2803  00DF                     ??_eval_poly:	
  2804  00DF                     eval_poly@res:	
  2805                           ; 0 bytes @ 0x3F
  2806                           
  2807                           
  2808                           ; 3 bytes @ 0x3F
  2809  00DF                     	ds	1
  2810  00E0                     ___fttol@sign1:	
  2811                           
  2812                           ; 1 bytes @ 0x40
  2813  00E0                     	ds	1
  2814  00E1                     ___fttol@lval:	
  2815                           
  2816                           ; 4 bytes @ 0x41
  2817  00E1                     	ds	1
  2818  00E2                     ?_atan:	
  2819  00E2                     atan@f:	
  2820                           ; 3 bytes @ 0x42
  2821                           
  2822                           
  2823                           ; 3 bytes @ 0x42
  2824  00E2                     	ds	3
  2825  00E5                     ??_atan:	
  2826  00E5                     ___fttol@exp1:	
  2827                           ; 0 bytes @ 0x45
  2828                           
  2829                           
  2830                           ; 1 bytes @ 0x45
  2831  00E5                     	ds	1
  2832  00E6                     ??_LIS3MDL_Read_XY:	
  2833  00E6                     ?_atan2:	
  2834                           ; 0 bytes @ 0x46
  2835                           
  2836  00E6                     atan2@y:	
  2837                           ; 3 bytes @ 0x46
  2838                           
  2839                           
  2840                           ; 3 bytes @ 0x46
  2841  00E6                     	ds	3
  2842  00E9                     atan2@x:	
  2843                           
  2844                           ; 3 bytes @ 0x49
  2845  00E9                     	ds	2
  2846  00EB                     ??_LIS3MDL_init:	
  2847                           
  2848                           ; 0 bytes @ 0x4B
  2849  00EB                     	ds	1
  2850  00EC                     ??_atan2:	
  2851  00EC                     ?_argXY:	
  2852                           ; 0 bytes @ 0x4C
  2853                           
  2854                           
  2855                           ; 3 bytes @ 0x4C
  2856  00EC                     	ds	3
  2857  00EF                     ??_argXY:	
  2858                           
  2859                           	psect	cstackCOMMON
  2860  0070                     __pcstackCOMMON:	
  2861                           ; 0 bytes @ 0x4F
  2862                           
  2863  0070                     ?_SYSTEM_Initialize:	
  2864  0070                     ?_LIS3MDL_init:	
  2865                           ; 0 bytes @ 0x0
  2866                           
  2867  0070                     ?_LIS3MDL_Wait:	
  2868                           ; 0 bytes @ 0x0
  2869                           
  2870  0070                     ?_LIS3MDL_Read_Raw_XY:	
  2871                           ; 0 bytes @ 0x0
  2872                           
  2873  0070                     ?_LIS3MDL_Read_XY:	
  2874                           ; 0 bytes @ 0x0
  2875                           
  2876  0070                     ?_OSCILLATOR_Initialize:	
  2877                           ; 0 bytes @ 0x0
  2878                           
  2879  0070                     ?_EUSART_Initialize:	
  2880                           ; 0 bytes @ 0x0
  2881                           
  2882  0070                     ?_processline:	
  2883                           ; 0 bytes @ 0x0
  2884                           
  2885  0070                     ?_isspace:	
  2886                           ; 0 bytes @ 0x0
  2887                           
  2888  0070                     ??_isspace:	
  2889                           ; 1 bit 
  2890                           
  2891  0070                     ?_isalpha:	
  2892                           ; 0 bytes @ 0x0
  2893                           
  2894  0070                     ??_toupper:	
  2895                           ; 1 bit 
  2896                           
  2897  0070                     ?_isdigit:	
  2898                           ; 0 bytes @ 0x0
  2899                           
  2900  0070                     ??_isdigit:	
  2901                           ; 1 bit 
  2902                           
  2903  0070                     ?_isupper:	
  2904                           ; 0 bytes @ 0x0
  2905                           
  2906  0070                     ??_isupper:	
  2907                           ; 1 bit 
  2908                           
  2909  0070                     ?_main:	
  2910                           ; 0 bytes @ 0x0
  2911                           
  2912  0070                     ?_PIN_MANAGER_Initialize:	
  2913                           ; 0 bytes @ 0x0
  2914                           
  2915  0070                     ?_i2c_Wait:	
  2916                           ; 0 bytes @ 0x0
  2917                           
  2918  0070                     ?_i2c_Start:	
  2919                           ; 0 bytes @ 0x0
  2920                           
  2921  0070                     ?_i2c_Restart:	
  2922                           ; 0 bytes @ 0x0
  2923                           
  2924  0070                     ?_i2c_Stop:	
  2925                           ; 0 bytes @ 0x0
  2926                           
  2927  0070                     ?_i2c_Write:	
  2928                           ; 0 bytes @ 0x0
  2929                           
  2930  0070                     ?_stepClock:	
  2931                           ; 0 bytes @ 0x0
  2932                           
  2933  0070                     ??_stepClock:	
  2934                           ; 0 bytes @ 0x0
  2935                           
  2936  0070                     ?_stepCounterClock:	
  2937                           ; 0 bytes @ 0x0
  2938                           
  2939  0070                     ?_INTERRUPT_InterruptManager:	
  2940                           ; 0 bytes @ 0x0
  2941                           
  2942  0070                     ?_putch:	
  2943                           ; 0 bytes @ 0x0
  2944                           
  2945  0070                     ?i1_stepCounterClock:	
  2946                           ; 0 bytes @ 0x0
  2947                           
  2948  0070                     ??i1_stepCounterClock:	
  2949                           ; 0 bytes @ 0x0
  2950                           
  2951  0070                     ?_strncpy:	
  2952                           ; 0 bytes @ 0x0
  2953                           
  2954  0070                     ?_strcpy:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0070                     ?_toupper:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0070                     ?_i2c_Read:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0070                     ?i1___bmul:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0070                     ?_zeroNeedle:	
  2967                           ; 1 bytes @ 0x0
  2968                           
  2969  0070                     ?_i2c_Init:	
  2970                           ; 2 bytes @ 0x0
  2971                           
  2972  0070                     ?_EUSART_Receive_ISR:	
  2973                           ; 2 bytes @ 0x0
  2974                           
  2975  0070                     ?i1___awmod:	
  2976                           ; 2 bytes @ 0x0
  2977                           
  2978  0070                     ?___lmul:	
  2979                           ; 2 bytes @ 0x0
  2980                           
  2981  0070                     strcpy@from:	
  2982                           ; 4 bytes @ 0x0
  2983                           
  2984  0070                     _isdigit$939:	
  2985                           ; 1 bytes @ 0x0
  2986                           
  2987  0070                     _isspace$942:	
  2988                           ; 1 bytes @ 0x0
  2989                           
  2990  0070                     _isupper$945:	
  2991                           ; 1 bytes @ 0x0
  2992                           
  2993  0070                     i1___bmul@multiplicand:	
  2994                           ; 1 bytes @ 0x0
  2995                           
  2996  0070                     strncpy@from:	
  2997                           ; 1 bytes @ 0x0
  2998                           
  2999  0070                     i1___awmod@divisor:	
  3000                           ; 2 bytes @ 0x0
  3001                           
  3002  0070                     ___lmul@multiplier:	
  3003                           ; 2 bytes @ 0x0
  3004                           
  3005                           
  3006                           ; 4 bytes @ 0x0
  3007  0070                     	ds	1
  3008  0071                     ??_strcpy:	
  3009  0071                     ??i1___bmul:	
  3010                           ; 0 bytes @ 0x1
  3011                           
  3012  0071                     toupper@c:	
  3013                           ; 0 bytes @ 0x1
  3014                           
  3015  0071                     isdigit@c:	
  3016                           ; 1 bytes @ 0x1
  3017                           
  3018  0071                     isspace@c:	
  3019                           ; 1 bytes @ 0x1
  3020                           
  3021  0071                     isupper@c:	
  3022                           ; 1 bytes @ 0x1
  3023                           
  3024                           
  3025                           ; 1 bytes @ 0x1
  3026  0071                     	ds	1
  3027  0072                     ??_isalpha:	
  3028  0072                     ?_goToPos:	
  3029                           ; 0 bytes @ 0x2
  3030                           
  3031  0072                     strcpy@cp:	
  3032                           ; 0 bytes @ 0x2
  3033                           
  3034  0072                     _isalpha$936:	
  3035                           ; 1 bytes @ 0x2
  3036                           
  3037  0072                     i1___bmul@multiplier:	
  3038                           ; 1 bytes @ 0x2
  3039                           
  3040  0072                     goToPos@pos:	
  3041                           ; 1 bytes @ 0x2
  3042                           
  3043  0072                     strncpy@size:	
  3044                           ; 2 bytes @ 0x2
  3045                           
  3046  0072                     i1___awmod@dividend:	
  3047                           ; 2 bytes @ 0x2
  3048                           
  3049                           
  3050                           ; 2 bytes @ 0x2
  3051  0072                     	ds	1
  3052  0073                     strcpy@to:	
  3053  0073                     isalpha@c:	
  3054                           ; 1 bytes @ 0x3
  3055                           
  3056  0073                     i1___bmul@product:	
  3057                           ; 1 bytes @ 0x3
  3058                           
  3059                           
  3060                           ; 1 bytes @ 0x3
  3061  0073                     	ds	1
  3062  0074                     ??_strncpy:	
  3063  0074                     ??_goToPos:	
  3064                           ; 0 bytes @ 0x4
  3065                           
  3066  0074                     ??i1___awmod:	
  3067                           ; 0 bytes @ 0x4
  3068                           
  3069  0074                     goToPos@target:	
  3070                           ; 0 bytes @ 0x4
  3071                           
  3072  0074                     ___lmul@multiplicand:	
  3073                           ; 2 bytes @ 0x4
  3074                           
  3075                           
  3076                           ; 4 bytes @ 0x4
  3077  0074                     	ds	1
  3078  0075                     i1___awmod@counter:	
  3079                           
  3080                           ; 1 bytes @ 0x5
  3081  0075                     	ds	1
  3082  0076                     strncpy@to:	
  3083  0076                     i1___awmod@sign:	
  3084                           ; 1 bytes @ 0x6
  3085                           
  3086                           
  3087                           ; 1 bytes @ 0x6
  3088  0076                     	ds	1
  3089  0077                     ?i1___awdiv:	
  3090  0077                     strncpy@cp:	
  3091                           ; 2 bytes @ 0x7
  3092                           
  3093  0077                     i1___awdiv@divisor:	
  3094                           ; 1 bytes @ 0x7
  3095                           
  3096                           
  3097                           ; 2 bytes @ 0x7
  3098  0077                     	ds	1
  3099  0078                     ??___lmul:	
  3100  0078                     ___lmul@product:	
  3101                           ; 0 bytes @ 0x8
  3102                           
  3103                           
  3104                           ; 4 bytes @ 0x8
  3105  0078                     	ds	1
  3106  0079                     i1___awdiv@dividend:	
  3107                           
  3108                           ; 2 bytes @ 0x9
  3109  0079                     	ds	2
  3110  007B                     ??i1___awdiv:	
  3111                           
  3112                           ; 0 bytes @ 0xB
  3113  007B                     	ds	1
  3114  007C                     ??i1_display:	
  3115                           
  3116                           ; 0 bytes @ 0xC
  3117  007C                     	ds	1
  3118  007D                     ??_processline:	
  3119                           
  3120                           ; 0 bytes @ 0xD
  3121  007D                     	ds	1
  3122                           
  3123                           	psect	cstackBANK0
  3124  0020                     __pcstackBANK0:	
  3125  0020                     ?_strtol:	
  3126  0020                     strtol@endptr:	
  3127                           ; 4 bytes @ 0x0
  3128                           
  3129  0020                     i1___awdiv@counter:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132                           
  3133                           ; 1 bytes @ 0x0
  3134  0020                     	ds	1
  3135  0021                     i1___awdiv@sign:	
  3136  0021                     strtol@base:	
  3137                           ; 1 bytes @ 0x1
  3138                           
  3139                           
  3140                           ; 2 bytes @ 0x1
  3141  0021                     	ds	1
  3142  0022                     i1___awdiv@quotient:	
  3143                           
  3144                           ; 2 bytes @ 0x2
  3145  0022                     	ds	2
  3146  0024                     ??_strtol:	
  3147  0024                     ?i1_display:	
  3148                           ; 0 bytes @ 0x4
  3149                           
  3150  0024                     i1display@x:	
  3151                           ; 0 bytes @ 0x4
  3152                           
  3153                           
  3154                           ; 2 bytes @ 0x4
  3155  0024                     	ds	2
  3156  0026                     i1display@neg:	
  3157                           
  3158                           ; 1 bytes @ 0x6
  3159  0026                     	ds	1
  3160  0027                     i1display@x0:	
  3161                           
  3162                           ; 2 bytes @ 0x7
  3163  0027                     	ds	1
  3164  0028                     strtol@sign:	
  3165                           
  3166                           ; 1 bytes @ 0x8
  3167  0028                     	ds	1
  3168  0029                     i1display@x1:	
  3169  0029                     strtol@a:	
  3170                           ; 2 bytes @ 0x9
  3171                           
  3172                           
  3173                           ; 4 bytes @ 0x9
  3174  0029                     	ds	2
  3175  002B                     i1display@x2:	
  3176                           
  3177                           ; 2 bytes @ 0xB
  3178  002B                     	ds	2
  3179  002D                     strtol@s:	
  3180  002D                     i1display@x3:	
  3181                           ; 1 bytes @ 0xD
  3182                           
  3183                           
  3184                           ; 2 bytes @ 0xD
  3185  002D                     	ds	1
  3186  002E                     strtol@c:	
  3187                           
  3188                           ; 1 bytes @ 0xE
  3189  002E                     	ds	1
  3190  002F                     processline@src1:	
  3191                           
  3192                           ; 8 bytes @ 0xF
  3193  002F                     	ds	8
  3194  0037                     processline@src2:	
  3195                           
  3196                           ; 8 bytes @ 0x17
  3197  0037                     	ds	8
  3198  003F                     processline@distance:	
  3199                           
  3200                           ; 2 bytes @ 0x1F
  3201  003F                     	ds	2
  3202  0041                     processline@bearing:	
  3203                           
  3204                           ; 2 bytes @ 0x21
  3205  0041                     	ds	2
  3206  0043                     processline@dist:	
  3207                           
  3208                           ; 5 bytes @ 0x23
  3209  0043                     	ds	5
  3210  0048                     processline@bear:	
  3211                           
  3212                           ; 3 bytes @ 0x28
  3213  0048                     	ds	3
  3214  004B                     processline@ptr:	
  3215                           
  3216                           ; 1 bytes @ 0x2B
  3217  004B                     	ds	1
  3218  004C                     processline@ch:	
  3219                           
  3220                           ; 1 bytes @ 0x2C
  3221  004C                     	ds	1
  3222  004D                     ??_EUSART_Receive_ISR:	
  3223                           
  3224                           ; 0 bytes @ 0x2D
  3225  004D                     	ds	8
  3226  0055                     EUSART_Receive_ISR@str:	
  3227                           
  3228                           ; 8 bytes @ 0x35
  3229  0055                     	ds	8
  3230  005D                     EUSART_Receive_ISR@incoming:	
  3231                           
  3232                           ; 1 bytes @ 0x3D
  3233  005D                     	ds	1
  3234  005E                     ??_INTERRUPT_InterruptManager:	
  3235                           
  3236                           ; 0 bytes @ 0x3E
  3237  005E                     	ds	1
  3238                           
  3239                           	psect	maintext
  3240  0D62                     __pmaintext:	
  3241 ;;
  3242 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3243 ;;
  3244 ;; *************** function _main *****************
  3245 ;; Defined at:
  3246 ;;		line 13 in file "main.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  i               2   53[BANK2 ] int 
  3251 ;;  dY              3   46[BANK2 ] float 
  3252 ;;  dX              3   43[BANK2 ] float 
  3253 ;;  angle           3   31[BANK2 ] float 
  3254 ;;  maxY            2   51[BANK2 ] int 
  3255 ;;  maxX            2   49[BANK2 ] int 
  3256 ;;  minY            2   41[BANK2 ] int 
  3257 ;;  minX            2   39[BANK2 ] int 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : B1F/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Locals:         0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Totals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;Total ram usage:       27 bytes
  3272 ;; Hardware stack levels required when called:   12
  3273 ;; This function calls:
  3274 ;;		_LIS3MDL_Read_Raw_XY
  3275 ;;		_LIS3MDL_Read_XY
  3276 ;;		_LIS3MDL_Wait
  3277 ;;		_LIS3MDL_init
  3278 ;;		_SYSTEM_Initialize
  3279 ;;		___awdiv
  3280 ;;		___awtoft
  3281 ;;		___ftadd
  3282 ;;		___ftdiv
  3283 ;;		___ftge
  3284 ;;		___ftmul
  3285 ;;		___ftneg
  3286 ;;		_argXY
  3287 ;;		_display
  3288 ;;		_printf
  3289 ;;		_zeroNeedle
  3290 ;; This function is called by:
  3291 ;;		Startup code after reset
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           
  3296                           ;psect for function _main
  3297  0D62                     _main:	
  3298                           
  3299                           ;main.c: 15: double angle;
  3300                           ;main.c: 16: int minX=0,maxX=0,minY=0,maxY=0;
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3304  0D62  0022               	movlb	2	; select bank2
  3305  0D63  01C7               	clrf	main@minX^(0+256)
  3306  0D64  01C8               	clrf	(main@minX+1)^(0+256)
  3307  0D65  01D1               	clrf	main@maxX^(0+256)
  3308  0D66  01D2               	clrf	(main@maxX+1)^(0+256)
  3309  0D67  01C9               	clrf	main@minY^(0+256)
  3310  0D68  01CA               	clrf	(main@minY+1)^(0+256)
  3311  0D69  01D3               	clrf	main@maxY^(0+256)
  3312  0D6A  01D4               	clrf	(main@maxY+1)^(0+256)
  3313                           
  3314                           ;main.c: 17: float dX,dY;
  3315                           ;main.c: 19: SYSTEM_Initialize();
  3316  0D6B  319F  27C0  318D   	fcall	_SYSTEM_Initialize
  3317                           
  3318                           ;main.c: 20: LIS3MDL_init();
  3319  0D6E  3191  2196  318D   	fcall	_LIS3MDL_init
  3320                           
  3321                           ;main.c: 22: zeroNeedle();
  3322  0D71  3190  20CE  318D   	fcall	_zeroNeedle
  3323                           
  3324                           ;main.c: 25: (INTCONbits.GIE = 1);
  3325  0D74  178B               	bsf	11,7	;volatile
  3326                           
  3327                           ;main.c: 26: (INTCONbits.PEIE = 1);
  3328  0D75  170B               	bsf	11,6	;volatile
  3329                           
  3330                           ;main.c: 27: RC2=1;
  3331  0D76  0020               	movlb	0	; select bank0
  3332  0D77  150E               	bsf	14,2	;volatile
  3333                           
  3334                           ;main.c: 28: _delay((unsigned long)((100)*(16000000/4000.0)));
  3335  0D78  3003               	movlw	3
  3336  0D79  0022               	movlb	2	; select bank2
  3337  0D7A  00BE               	movwf	(??_main^(0+256)+2)
  3338  0D7B  3008               	movlw	8
  3339  0D7C  00BD               	movwf	(??_main^(0+256)+1)
  3340  0D7D  3078               	movlw	120
  3341  0D7E  00BC               	movwf	??_main^(0+256)
  3342  0D7F                     u8827:	
  3343  0D7F  0BBC               	decfsz	??_main^(0+256),f
  3344  0D80  2D7F               	goto	u8827
  3345  0D81  0BBD               	decfsz	(??_main^(0+256)+1),f
  3346  0D82  2D7F               	goto	u8827
  3347  0D83  0BBE               	decfsz	(??_main^(0+256)+2),f
  3348  0D84  2D7F               	goto	u8827
  3349                           
  3350                           ;main.c: 29: printf("str\r");
  3351  0D85  3021               	movlw	low (STR_1| (0+32768))
  3352  0D86  0021               	movlb	1	; select bank1
  3353  0D87  00A1               	movwf	printf@f^(0+128)
  3354  0D88  3098               	movlw	high (STR_1| (0+32768))
  3355  0D89  00A2               	movwf	(printf@f^(0+128)+1)
  3356  0D8A  3190  20B1  318D   	fcall	_printf
  3357                           
  3358                           ;main.c: 31: for(int i=1000;i>0;i--)
  3359  0D8D  30E8               	movlw	232
  3360  0D8E  0022               	movlb	2	; select bank2
  3361  0D8F  00D5               	movwf	main@i^(0+256)
  3362  0D90  3003               	movlw	3
  3363  0D91  00D6               	movwf	(main@i^(0+256)+1)
  3364  0D92  0856               	movf	(main@i+1)^(0+256),w
  3365  0D93  3A80               	xorlw	128
  3366  0D94  00BC               	movwf	??_main^(0+256)
  3367  0D95  3080               	movlw	128
  3368  0D96  023C               	subwf	??_main^(0+256),w
  3369  0D97  1D03               	skipz
  3370  0D98  2D9B               	goto	u7575
  3371  0D99  3001               	movlw	1
  3372  0D9A  0255               	subwf	main@i^(0+256),w
  3373  0D9B                     u7575:	
  3374  0D9B  1C03               	btfss	3,0
  3375  0D9C  2E1D               	goto	l4201
  3376  0D9D                     l4181:	
  3377                           
  3378                           ;main.c: 32: {
  3379                           ;main.c: 33: LIS3MDL_Wait();
  3380  0D9D  3191  21BA  318D   	fcall	_LIS3MDL_Wait
  3381                           
  3382                           ;main.c: 34: LIS3MDL_Read_Raw_XY();
  3383  0DA0  3194  24CB  318D   	fcall	_LIS3MDL_Read_Raw_XY
  3384                           
  3385                           ;main.c: 35: if(vX<minX)
  3386  0DA3  0022               	movlb	2	; select bank2
  3387  0DA4  0866               	movf	(_vX+1)^(0+256),w
  3388  0DA5  3A80               	xorlw	128
  3389  0DA6  00BC               	movwf	??_main^(0+256)
  3390  0DA7  0848               	movf	(main@minX+1)^(0+256),w
  3391  0DA8  3A80               	xorlw	128
  3392  0DA9  023C               	subwf	??_main^(0+256),w
  3393  0DAA  1D03               	skipz
  3394  0DAB  2DAE               	goto	u7585
  3395  0DAC  0847               	movf	main@minX^(0+256),w
  3396  0DAD  0265               	subwf	_vX^(0+256),w
  3397  0DAE                     u7585:	
  3398  0DAE  1803               	skipnc
  3399  0DAF  2DB5               	goto	l43
  3400                           
  3401                           ;main.c: 36: minX=vX;
  3402  0DB0  0022               	movlb	2	; select bank2
  3403  0DB1  0866               	movf	(_vX+1)^(0+256),w
  3404  0DB2  00C8               	movwf	(main@minX+1)^(0+256)
  3405  0DB3  0865               	movf	_vX^(0+256),w
  3406  0DB4  00C7               	movwf	main@minX^(0+256)
  3407  0DB5                     l43:	
  3408                           
  3409                           ;main.c: 37: if(vX>maxX)
  3410  0DB5  0022               	movlb	2	; select bank2
  3411  0DB6  0852               	movf	(main@maxX+1)^(0+256),w
  3412  0DB7  3A80               	xorlw	128
  3413  0DB8  00BC               	movwf	??_main^(0+256)
  3414  0DB9  0866               	movf	(_vX+1)^(0+256),w
  3415  0DBA  3A80               	xorlw	128
  3416  0DBB  023C               	subwf	??_main^(0+256),w
  3417  0DBC  1D03               	skipz
  3418  0DBD  2DC0               	goto	u7595
  3419  0DBE  0865               	movf	_vX^(0+256),w
  3420  0DBF  0251               	subwf	main@maxX^(0+256),w
  3421  0DC0                     u7595:	
  3422  0DC0  1803               	skipnc
  3423  0DC1  2DC7               	goto	l44
  3424                           
  3425                           ;main.c: 38: maxX=vX;
  3426  0DC2  0022               	movlb	2	; select bank2
  3427  0DC3  0866               	movf	(_vX+1)^(0+256),w
  3428  0DC4  00D2               	movwf	(main@maxX+1)^(0+256)
  3429  0DC5  0865               	movf	_vX^(0+256),w
  3430  0DC6  00D1               	movwf	main@maxX^(0+256)
  3431  0DC7                     l44:	
  3432                           
  3433                           ;main.c: 39: if(vY<minY)
  3434  0DC7  0022               	movlb	2	; select bank2
  3435  0DC8  0868               	movf	(_vY+1)^(0+256),w
  3436  0DC9  3A80               	xorlw	128
  3437  0DCA  00BC               	movwf	??_main^(0+256)
  3438  0DCB  084A               	movf	(main@minY+1)^(0+256),w
  3439  0DCC  3A80               	xorlw	128
  3440  0DCD  023C               	subwf	??_main^(0+256),w
  3441  0DCE  1D03               	skipz
  3442  0DCF  2DD2               	goto	u7605
  3443  0DD0  0849               	movf	main@minY^(0+256),w
  3444  0DD1  0267               	subwf	_vY^(0+256),w
  3445  0DD2                     u7605:	
  3446  0DD2  1803               	skipnc
  3447  0DD3  2DD9               	goto	l45
  3448                           
  3449                           ;main.c: 40: minY=vY;
  3450  0DD4  0022               	movlb	2	; select bank2
  3451  0DD5  0868               	movf	(_vY+1)^(0+256),w
  3452  0DD6  00CA               	movwf	(main@minY+1)^(0+256)
  3453  0DD7  0867               	movf	_vY^(0+256),w
  3454  0DD8  00C9               	movwf	main@minY^(0+256)
  3455  0DD9                     l45:	
  3456                           
  3457                           ;main.c: 41: if(vY>maxY)
  3458  0DD9  0022               	movlb	2	; select bank2
  3459  0DDA  0854               	movf	(main@maxY+1)^(0+256),w
  3460  0DDB  3A80               	xorlw	128
  3461  0DDC  00BC               	movwf	??_main^(0+256)
  3462  0DDD  0868               	movf	(_vY+1)^(0+256),w
  3463  0DDE  3A80               	xorlw	128
  3464  0DDF  023C               	subwf	??_main^(0+256),w
  3465  0DE0  1D03               	skipz
  3466  0DE1  2DE4               	goto	u7615
  3467  0DE2  0867               	movf	_vY^(0+256),w
  3468  0DE3  0253               	subwf	main@maxY^(0+256),w
  3469  0DE4                     u7615:	
  3470  0DE4  1803               	skipnc
  3471  0DE5  2DEB               	goto	l4193
  3472                           
  3473                           ;main.c: 42: maxY=vY;
  3474  0DE6  0022               	movlb	2	; select bank2
  3475  0DE7  0868               	movf	(_vY+1)^(0+256),w
  3476  0DE8  00D4               	movwf	(main@maxY+1)^(0+256)
  3477  0DE9  0867               	movf	_vY^(0+256),w
  3478  0DEA  00D3               	movwf	main@maxY^(0+256)
  3479  0DEB                     l4193:	
  3480                           
  3481                           ;main.c: 43: display(i/10);
  3482  0DEB  300A               	movlw	10
  3483  0DEC  0021               	movlb	1	; select bank1
  3484  0DED  00A7               	movwf	___awdiv@divisor^(0+128)
  3485  0DEE  3000               	movlw	0
  3486  0DEF  00A8               	movwf	(___awdiv@divisor^(0+128)+1)
  3487  0DF0  0022               	movlb	2	; select bank2
  3488  0DF1  0856               	movf	(main@i+1)^(0+256),w
  3489  0DF2  0021               	movlb	1	; select bank1
  3490  0DF3  00AA               	movwf	(___awdiv@dividend+1)^(0+128)
  3491  0DF4  0022               	movlb	2	; select bank2
  3492  0DF5  0855               	movf	main@i^(0+256),w
  3493  0DF6  0021               	movlb	1	; select bank1
  3494  0DF7  00A9               	movwf	___awdiv@dividend^(0+128)
  3495  0DF8  3194  2479  318D   	fcall	___awdiv
  3496  0DFB  0021               	movlb	1	; select bank1
  3497  0DFC  0828               	movf	(?___awdiv+1)^(0+128),w
  3498  0DFD  0022               	movlb	2	; select bank2
  3499  0DFE  00C6               	movwf	(_main$1137+1)^(0+256)
  3500  0DFF  0021               	movlb	1	; select bank1
  3501  0E00  0827               	movf	?___awdiv^(0+128),w
  3502  0E01  0022               	movlb	2	; select bank2
  3503  0E02  00C5               	movwf	_main$1137^(0+256)
  3504                           
  3505                           ;main.c: 43: display(i/10);
  3506  0E03  0846               	movf	(_main$1137+1)^(0+256),w
  3507  0E04  0021               	movlb	1	; select bank1
  3508  0E05  00B1               	movwf	(display@x+1)^(0+128)
  3509  0E06  0022               	movlb	2	; select bank2
  3510  0E07  0845               	movf	_main$1137^(0+256),w
  3511  0E08  0021               	movlb	1	; select bank1
  3512  0E09  00B0               	movwf	display@x^(0+128)
  3513  0E0A  3180  2064  318D   	fcall	_display
  3514  0E0D  30FF               	movlw	255
  3515  0E0E  0022               	movlb	2	; select bank2
  3516  0E0F  07D5               	addwf	main@i^(0+256),f
  3517  0E10  30FF               	movlw	255
  3518  0E11  3DD6               	addwfc	(main@i+1)^(0+256),f
  3519  0E12  0856               	movf	(main@i+1)^(0+256),w
  3520  0E13  3A80               	xorlw	128
  3521  0E14  00BC               	movwf	??_main^(0+256)
  3522  0E15  3080               	movlw	128
  3523  0E16  023C               	subwf	??_main^(0+256),w
  3524  0E17  1D03               	skipz
  3525  0E18  2E1B               	goto	u7625
  3526  0E19  3001               	movlw	1
  3527  0E1A  0255               	subwf	main@i^(0+256),w
  3528  0E1B                     u7625:	
  3529  0E1B  1803               	skipnc
  3530  0E1C  2D9D               	goto	l4181
  3531  0E1D                     l4201:	
  3532                           
  3533                           ;main.c: 44: }
  3534                           ;main.c: 46: dX = maxX-minX;
  3535  0E1D  0022               	movlb	2	; select bank2
  3536  0E1E  0947               	comf	main@minX^(0+256),w
  3537  0E1F  00BC               	movwf	??_main^(0+256)
  3538  0E20  0948               	comf	(main@minX+1)^(0+256),w
  3539  0E21  00BD               	movwf	(??_main^(0+256)+1)
  3540  0E22  0ABC               	incf	??_main^(0+256),f
  3541  0E23  1903               	skipnz
  3542  0E24  0ABD               	incf	(??_main^(0+256)+1),f
  3543  0E25  0851               	movf	main@maxX^(0+256),w
  3544  0E26  073C               	addwf	??_main^(0+256),w
  3545  0E27  0021               	movlb	1	; select bank1
  3546  0E28  00A8               	movwf	___awtoft@c^(0+128)
  3547  0E29  0022               	movlb	2	; select bank2
  3548  0E2A  0852               	movf	(main@maxX+1)^(0+256),w
  3549  0E2B  3D3D               	addwfc	(??_main+1)^(0+256),w
  3550  0E2C  0021               	movlb	1	; select bank1
  3551  0E2D  00A9               	movwf	(___awtoft@c+1)^(0+128)
  3552  0E2E  3191  210B  318D   	fcall	___awtoft
  3553  0E31  0021               	movlb	1	; select bank1
  3554  0E32  0828               	movf	?___awtoft^(0+128),w
  3555  0E33  0022               	movlb	2	; select bank2
  3556  0E34  00CB               	movwf	main@dX^(0+256)
  3557  0E35  0021               	movlb	1	; select bank1
  3558  0E36  0829               	movf	(?___awtoft+1)^(0+128),w
  3559  0E37  0022               	movlb	2	; select bank2
  3560  0E38  00CC               	movwf	(main@dX+1)^(0+256)
  3561  0E39  0021               	movlb	1	; select bank1
  3562  0E3A  082A               	movf	(?___awtoft+2)^(0+128),w
  3563  0E3B  0022               	movlb	2	; select bank2
  3564  0E3C  00CD               	movwf	(main@dX+2)^(0+256)
  3565                           
  3566                           ;main.c: 47: dY = maxY-minY;
  3567  0E3D  0949               	comf	main@minY^(0+256),w
  3568  0E3E  00BC               	movwf	??_main^(0+256)
  3569  0E3F  094A               	comf	(main@minY+1)^(0+256),w
  3570  0E40  00BD               	movwf	(??_main^(0+256)+1)
  3571  0E41  0ABC               	incf	??_main^(0+256),f
  3572  0E42  1903               	skipnz
  3573  0E43  0ABD               	incf	(??_main^(0+256)+1),f
  3574  0E44  0853               	movf	main@maxY^(0+256),w
  3575  0E45  073C               	addwf	??_main^(0+256),w
  3576  0E46  0021               	movlb	1	; select bank1
  3577  0E47  00A8               	movwf	___awtoft@c^(0+128)
  3578  0E48  0022               	movlb	2	; select bank2
  3579  0E49  0854               	movf	(main@maxY+1)^(0+256),w
  3580  0E4A  3D3D               	addwfc	(??_main+1)^(0+256),w
  3581  0E4B  0021               	movlb	1	; select bank1
  3582  0E4C  00A9               	movwf	(___awtoft@c+1)^(0+128)
  3583  0E4D  3191  210B  318D   	fcall	___awtoft
  3584  0E50  0021               	movlb	1	; select bank1
  3585  0E51  0828               	movf	?___awtoft^(0+128),w
  3586  0E52  0022               	movlb	2	; select bank2
  3587  0E53  00CE               	movwf	main@dY^(0+256)
  3588  0E54  0021               	movlb	1	; select bank1
  3589  0E55  0829               	movf	(?___awtoft+1)^(0+128),w
  3590  0E56  0022               	movlb	2	; select bank2
  3591  0E57  00CF               	movwf	(main@dY+1)^(0+256)
  3592  0E58  0021               	movlb	1	; select bank1
  3593  0E59  082A               	movf	(?___awtoft+2)^(0+128),w
  3594  0E5A  0022               	movlb	2	; select bank2
  3595  0E5B  00D0               	movwf	(main@dY+2)^(0+256)
  3596                           
  3597                           ;main.c: 48: Xsf=dY/dX;
  3598  0E5C  084B               	movf	main@dX^(0+256),w
  3599  0E5D  0021               	movlb	1	; select bank1
  3600  0E5E  00A8               	movwf	___ftdiv@f2^(0+128)
  3601  0E5F  0022               	movlb	2	; select bank2
  3602  0E60  084C               	movf	(main@dX+1)^(0+256),w
  3603  0E61  0021               	movlb	1	; select bank1
  3604  0E62  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  3605  0E63  0022               	movlb	2	; select bank2
  3606  0E64  084D               	movf	(main@dX+2)^(0+256),w
  3607  0E65  0021               	movlb	1	; select bank1
  3608  0E66  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  3609  0E67  0022               	movlb	2	; select bank2
  3610  0E68  084E               	movf	main@dY^(0+256),w
  3611  0E69  0021               	movlb	1	; select bank1
  3612  0E6A  00AB               	movwf	___ftdiv@f1^(0+128)
  3613  0E6B  0022               	movlb	2	; select bank2
  3614  0E6C  084F               	movf	(main@dY+1)^(0+256),w
  3615  0E6D  0021               	movlb	1	; select bank1
  3616  0E6E  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  3617  0E6F  0022               	movlb	2	; select bank2
  3618  0E70  0850               	movf	(main@dY+2)^(0+256),w
  3619  0E71  0021               	movlb	1	; select bank1
  3620  0E72  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  3621  0E73  3197  2757  318D   	fcall	___ftdiv
  3622  0E76  0021               	movlb	1	; select bank1
  3623  0E77  0828               	movf	?___ftdiv^(0+128),w
  3624  0E78  0022               	movlb	2	; select bank2
  3625  0E79  00DA               	movwf	_Xsf^(0+256)
  3626  0E7A  0021               	movlb	1	; select bank1
  3627  0E7B  0829               	movf	(?___ftdiv+1)^(0+128),w
  3628  0E7C  0022               	movlb	2	; select bank2
  3629  0E7D  00DB               	movwf	(_Xsf+1)^(0+256)
  3630  0E7E  0021               	movlb	1	; select bank1
  3631  0E7F  082A               	movf	(?___ftdiv+2)^(0+128),w
  3632  0E80  0022               	movlb	2	; select bank2
  3633  0E81  00DC               	movwf	(_Xsf+2)^(0+256)
  3634                           
  3635                           ;main.c: 49: if(Xsf<1)
  3636  0E82  085A               	movf	_Xsf^(0+256),w
  3637  0E83  0021               	movlb	1	; select bank1
  3638  0E84  00A0               	movwf	___ftge@ff1^(0+128)
  3639  0E85  0022               	movlb	2	; select bank2
  3640  0E86  085B               	movf	(_Xsf+1)^(0+256),w
  3641  0E87  0021               	movlb	1	; select bank1
  3642  0E88  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  3643  0E89  0022               	movlb	2	; select bank2
  3644  0E8A  085C               	movf	(_Xsf+2)^(0+256),w
  3645  0E8B  0021               	movlb	1	; select bank1
  3646  0E8C  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  3647  0E8D  3000               	movlw	0
  3648  0E8E  00A3               	movwf	___ftge@ff2^(0+128)
  3649  0E8F  3080               	movlw	128
  3650  0E90  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  3651  0E91  303F               	movlw	63
  3652  0E92  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  3653  0E93  3192  22CA  318D   	fcall	___ftge
  3654  0E96  1803               	btfsc	3,0
  3655  0E97  2E9F               	goto	l4205
  3656                           
  3657                           ;main.c: 50: Xsf=1;
  3658  0E98  3000               	movlw	0
  3659  0E99  0022               	movlb	2	; select bank2
  3660  0E9A  00DA               	movwf	_Xsf^(0+256)
  3661  0E9B  3080               	movlw	128
  3662  0E9C  00DB               	movwf	(_Xsf+1)^(0+256)
  3663  0E9D  303F               	movlw	63
  3664  0E9E  00DC               	movwf	(_Xsf+2)^(0+256)
  3665  0E9F                     l4205:	
  3666                           
  3667                           ;main.c: 51: Ysf=dX/dY;
  3668  0E9F  0022               	movlb	2	; select bank2
  3669  0EA0  084E               	movf	main@dY^(0+256),w
  3670  0EA1  0021               	movlb	1	; select bank1
  3671  0EA2  00A8               	movwf	___ftdiv@f2^(0+128)
  3672  0EA3  0022               	movlb	2	; select bank2
  3673  0EA4  084F               	movf	(main@dY+1)^(0+256),w
  3674  0EA5  0021               	movlb	1	; select bank1
  3675  0EA6  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  3676  0EA7  0022               	movlb	2	; select bank2
  3677  0EA8  0850               	movf	(main@dY+2)^(0+256),w
  3678  0EA9  0021               	movlb	1	; select bank1
  3679  0EAA  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  3680  0EAB  0022               	movlb	2	; select bank2
  3681  0EAC  084B               	movf	main@dX^(0+256),w
  3682  0EAD  0021               	movlb	1	; select bank1
  3683  0EAE  00AB               	movwf	___ftdiv@f1^(0+128)
  3684  0EAF  0022               	movlb	2	; select bank2
  3685  0EB0  084C               	movf	(main@dX+1)^(0+256),w
  3686  0EB1  0021               	movlb	1	; select bank1
  3687  0EB2  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  3688  0EB3  0022               	movlb	2	; select bank2
  3689  0EB4  084D               	movf	(main@dX+2)^(0+256),w
  3690  0EB5  0021               	movlb	1	; select bank1
  3691  0EB6  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  3692  0EB7  3197  2757  318D   	fcall	___ftdiv
  3693  0EBA  0021               	movlb	1	; select bank1
  3694  0EBB  0828               	movf	?___ftdiv^(0+128),w
  3695  0EBC  0022               	movlb	2	; select bank2
  3696  0EBD  00E0               	movwf	_Ysf^(0+256)
  3697  0EBE  0021               	movlb	1	; select bank1
  3698  0EBF  0829               	movf	(?___ftdiv+1)^(0+128),w
  3699  0EC0  0022               	movlb	2	; select bank2
  3700  0EC1  00E1               	movwf	(_Ysf+1)^(0+256)
  3701  0EC2  0021               	movlb	1	; select bank1
  3702  0EC3  082A               	movf	(?___ftdiv+2)^(0+128),w
  3703  0EC4  0022               	movlb	2	; select bank2
  3704  0EC5  00E2               	movwf	(_Ysf+2)^(0+256)
  3705                           
  3706                           ;main.c: 52: if(Ysf<1)
  3707  0EC6  0860               	movf	_Ysf^(0+256),w
  3708  0EC7  0021               	movlb	1	; select bank1
  3709  0EC8  00A0               	movwf	___ftge@ff1^(0+128)
  3710  0EC9  0022               	movlb	2	; select bank2
  3711  0ECA  0861               	movf	(_Ysf+1)^(0+256),w
  3712  0ECB  0021               	movlb	1	; select bank1
  3713  0ECC  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  3714  0ECD  0022               	movlb	2	; select bank2
  3715  0ECE  0862               	movf	(_Ysf+2)^(0+256),w
  3716  0ECF  0021               	movlb	1	; select bank1
  3717  0ED0  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  3718  0ED1  3000               	movlw	0
  3719  0ED2  00A3               	movwf	___ftge@ff2^(0+128)
  3720  0ED3  3080               	movlw	128
  3721  0ED4  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  3722  0ED5  303F               	movlw	63
  3723  0ED6  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  3724  0ED7  3192  22CA  318D   	fcall	___ftge
  3725  0EDA  1803               	btfsc	3,0
  3726  0EDB  2EE3               	goto	l4211
  3727                           
  3728                           ;main.c: 53: Ysf=1;
  3729  0EDC  3000               	movlw	0
  3730  0EDD  0022               	movlb	2	; select bank2
  3731  0EDE  00E0               	movwf	_Ysf^(0+256)
  3732  0EDF  3080               	movlw	128
  3733  0EE0  00E1               	movwf	(_Ysf+1)^(0+256)
  3734  0EE1  303F               	movlw	63
  3735  0EE2  00E2               	movwf	(_Ysf+2)^(0+256)
  3736  0EE3                     l4211:	
  3737                           
  3738                           ;main.c: 55: Xoff= ((dX)/2 - maxX) * Xsf;
  3739  0EE3  0022               	movlb	2	; select bank2
  3740  0EE4  085A               	movf	_Xsf^(0+256),w
  3741  0EE5  0021               	movlb	1	; select bank1
  3742  0EE6  00C8               	movwf	___ftmul@f1^(0+128)
  3743  0EE7  0022               	movlb	2	; select bank2
  3744  0EE8  085B               	movf	(_Xsf+1)^(0+256),w
  3745  0EE9  0021               	movlb	1	; select bank1
  3746  0EEA  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  3747  0EEB  0022               	movlb	2	; select bank2
  3748  0EEC  085C               	movf	(_Xsf+2)^(0+256),w
  3749  0EED  0021               	movlb	1	; select bank1
  3750  0EEE  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  3751  0EEF  0022               	movlb	2	; select bank2
  3752  0EF0  0852               	movf	(main@maxX+1)^(0+256),w
  3753  0EF1  0021               	movlb	1	; select bank1
  3754  0EF2  00A9               	movwf	(___awtoft@c+1)^(0+128)
  3755  0EF3  0022               	movlb	2	; select bank2
  3756  0EF4  0851               	movf	main@maxX^(0+256),w
  3757  0EF5  0021               	movlb	1	; select bank1
  3758  0EF6  00A8               	movwf	___awtoft@c^(0+128)
  3759  0EF7  3191  210B  318D   	fcall	___awtoft
  3760  0EFA  0021               	movlb	1	; select bank1
  3761  0EFB  0828               	movf	?___awtoft^(0+128),w
  3762  0EFC  00B8               	movwf	___ftneg@f1^(0+128)
  3763  0EFD  0829               	movf	(?___awtoft+1)^(0+128),w
  3764  0EFE  00B9               	movwf	(___ftneg@f1+1)^(0+128)
  3765  0EFF  082A               	movf	(?___awtoft+2)^(0+128),w
  3766  0F00  00BA               	movwf	(___ftneg@f1+2)^(0+128)
  3767  0F01  319F  27A1  318D   	fcall	___ftneg
  3768  0F04  0021               	movlb	1	; select bank1
  3769  0F05  0838               	movf	?___ftneg^(0+128),w
  3770  0F06  00BB               	movwf	___ftadd@f1^(0+128)
  3771  0F07  0839               	movf	(?___ftneg+1)^(0+128),w
  3772  0F08  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  3773  0F09  083A               	movf	(?___ftneg+2)^(0+128),w
  3774  0F0A  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  3775  0F0B  3000               	movlw	0
  3776  0F0C  00A8               	movwf	___ftdiv@f2^(0+128)
  3777  0F0D  3000               	movlw	0
  3778  0F0E  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  3779  0F0F  3040               	movlw	64
  3780  0F10  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  3781  0F11  0022               	movlb	2	; select bank2
  3782  0F12  084B               	movf	main@dX^(0+256),w
  3783  0F13  0021               	movlb	1	; select bank1
  3784  0F14  00AB               	movwf	___ftdiv@f1^(0+128)
  3785  0F15  0022               	movlb	2	; select bank2
  3786  0F16  084C               	movf	(main@dX+1)^(0+256),w
  3787  0F17  0021               	movlb	1	; select bank1
  3788  0F18  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  3789  0F19  0022               	movlb	2	; select bank2
  3790  0F1A  084D               	movf	(main@dX+2)^(0+256),w
  3791  0F1B  0021               	movlb	1	; select bank1
  3792  0F1C  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  3793  0F1D  3197  2757  318D   	fcall	___ftdiv
  3794  0F20  0021               	movlb	1	; select bank1
  3795  0F21  0828               	movf	?___ftdiv^(0+128),w
  3796  0F22  00BE               	movwf	___ftadd@f2^(0+128)
  3797  0F23  0829               	movf	(?___ftdiv+1)^(0+128),w
  3798  0F24  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  3799  0F25  082A               	movf	(?___ftdiv+2)^(0+128),w
  3800  0F26  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  3801  0F27  3188  20D2  318D   	fcall	___ftadd
  3802  0F2A  0021               	movlb	1	; select bank1
  3803  0F2B  083B               	movf	?___ftadd^(0+128),w
  3804  0F2C  00CB               	movwf	___ftmul@f2^(0+128)
  3805  0F2D  083C               	movf	(?___ftadd+1)^(0+128),w
  3806  0F2E  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  3807  0F2F  083D               	movf	(?___ftadd+2)^(0+128),w
  3808  0F30  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  3809  0F31  3188  201E  318D   	fcall	___ftmul
  3810  0F34  0021               	movlb	1	; select bank1
  3811  0F35  0848               	movf	?___ftmul^(0+128),w
  3812  0F36  0022               	movlb	2	; select bank2
  3813  0F37  00D7               	movwf	_Xoff^(0+256)
  3814  0F38  0021               	movlb	1	; select bank1
  3815  0F39  0849               	movf	(?___ftmul+1)^(0+128),w
  3816  0F3A  0022               	movlb	2	; select bank2
  3817  0F3B  00D8               	movwf	(_Xoff+1)^(0+256)
  3818  0F3C  0021               	movlb	1	; select bank1
  3819  0F3D  084A               	movf	(?___ftmul+2)^(0+128),w
  3820  0F3E  0022               	movlb	2	; select bank2
  3821  0F3F  00D9               	movwf	(_Xoff+2)^(0+256)
  3822                           
  3823                           ;main.c: 56: Yoff = ((dY)/2 - maxY) * Ysf;
  3824  0F40  0860               	movf	_Ysf^(0+256),w
  3825  0F41  0021               	movlb	1	; select bank1
  3826  0F42  00C8               	movwf	___ftmul@f1^(0+128)
  3827  0F43  0022               	movlb	2	; select bank2
  3828  0F44  0861               	movf	(_Ysf+1)^(0+256),w
  3829  0F45  0021               	movlb	1	; select bank1
  3830  0F46  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  3831  0F47  0022               	movlb	2	; select bank2
  3832  0F48  0862               	movf	(_Ysf+2)^(0+256),w
  3833  0F49  0021               	movlb	1	; select bank1
  3834  0F4A  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  3835  0F4B  0022               	movlb	2	; select bank2
  3836  0F4C  0854               	movf	(main@maxY+1)^(0+256),w
  3837  0F4D  0021               	movlb	1	; select bank1
  3838  0F4E  00A9               	movwf	(___awtoft@c+1)^(0+128)
  3839  0F4F  0022               	movlb	2	; select bank2
  3840  0F50  0853               	movf	main@maxY^(0+256),w
  3841  0F51  0021               	movlb	1	; select bank1
  3842  0F52  00A8               	movwf	___awtoft@c^(0+128)
  3843  0F53  3191  210B  318D   	fcall	___awtoft
  3844  0F56  0021               	movlb	1	; select bank1
  3845  0F57  0828               	movf	?___awtoft^(0+128),w
  3846  0F58  00B8               	movwf	___ftneg@f1^(0+128)
  3847  0F59  0829               	movf	(?___awtoft+1)^(0+128),w
  3848  0F5A  00B9               	movwf	(___ftneg@f1+1)^(0+128)
  3849  0F5B  082A               	movf	(?___awtoft+2)^(0+128),w
  3850  0F5C  00BA               	movwf	(___ftneg@f1+2)^(0+128)
  3851  0F5D  319F  27A1  318D   	fcall	___ftneg
  3852  0F60  0021               	movlb	1	; select bank1
  3853  0F61  0838               	movf	?___ftneg^(0+128),w
  3854  0F62  00BB               	movwf	___ftadd@f1^(0+128)
  3855  0F63  0839               	movf	(?___ftneg+1)^(0+128),w
  3856  0F64  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  3857  0F65  083A               	movf	(?___ftneg+2)^(0+128),w
  3858  0F66  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  3859  0F67  3000               	movlw	0
  3860  0F68  00A8               	movwf	___ftdiv@f2^(0+128)
  3861  0F69  3000               	movlw	0
  3862  0F6A  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  3863  0F6B  3040               	movlw	64
  3864  0F6C  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  3865  0F6D  0022               	movlb	2	; select bank2
  3866  0F6E  084E               	movf	main@dY^(0+256),w
  3867  0F6F  0021               	movlb	1	; select bank1
  3868  0F70  00AB               	movwf	___ftdiv@f1^(0+128)
  3869  0F71  0022               	movlb	2	; select bank2
  3870  0F72  084F               	movf	(main@dY+1)^(0+256),w
  3871  0F73  0021               	movlb	1	; select bank1
  3872  0F74  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  3873  0F75  0022               	movlb	2	; select bank2
  3874  0F76  0850               	movf	(main@dY+2)^(0+256),w
  3875  0F77  0021               	movlb	1	; select bank1
  3876  0F78  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  3877  0F79  3197  2757  318D   	fcall	___ftdiv
  3878  0F7C  0021               	movlb	1	; select bank1
  3879  0F7D  0828               	movf	?___ftdiv^(0+128),w
  3880  0F7E  00BE               	movwf	___ftadd@f2^(0+128)
  3881  0F7F  0829               	movf	(?___ftdiv+1)^(0+128),w
  3882  0F80  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  3883  0F81  082A               	movf	(?___ftdiv+2)^(0+128),w
  3884  0F82  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  3885  0F83  3188  20D2  318D   	fcall	___ftadd
  3886  0F86  0021               	movlb	1	; select bank1
  3887  0F87  083B               	movf	?___ftadd^(0+128),w
  3888  0F88  00CB               	movwf	___ftmul@f2^(0+128)
  3889  0F89  083C               	movf	(?___ftadd+1)^(0+128),w
  3890  0F8A  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  3891  0F8B  083D               	movf	(?___ftadd+2)^(0+128),w
  3892  0F8C  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  3893  0F8D  3188  201E  318D   	fcall	___ftmul
  3894  0F90  0021               	movlb	1	; select bank1
  3895  0F91  0848               	movf	?___ftmul^(0+128),w
  3896  0F92  0022               	movlb	2	; select bank2
  3897  0F93  00DD               	movwf	_Yoff^(0+256)
  3898  0F94  0021               	movlb	1	; select bank1
  3899  0F95  0849               	movf	(?___ftmul+1)^(0+128),w
  3900  0F96  0022               	movlb	2	; select bank2
  3901  0F97  00DE               	movwf	(_Yoff+1)^(0+256)
  3902  0F98  0021               	movlb	1	; select bank1
  3903  0F99  084A               	movf	(?___ftmul+2)^(0+128),w
  3904  0F9A  0022               	movlb	2	; select bank2
  3905  0F9B  00DF               	movwf	(_Yoff+2)^(0+256)
  3906  0F9C                     l4215:	
  3907                           ;main.c: 59: while (1)
  3908                           
  3909                           
  3910                           ;main.c: 60: {
  3911                           ;main.c: 64: LIS3MDL_Wait();
  3912  0F9C  3191  21BA  318D   	fcall	_LIS3MDL_Wait
  3913                           
  3914                           ;main.c: 65: LIS3MDL_Read_XY();
  3915  0F9F  318A  22C1  318D   	fcall	_LIS3MDL_Read_XY
  3916                           
  3917                           ;main.c: 68: angle = ((argXY()/3.14159265358979323846)*180)+180;
  3918  0FA2  3192  2205  318D   	fcall	_argXY
  3919  0FA5  0021               	movlb	1	; select bank1
  3920  0FA6  086C               	movf	?_argXY^(0+128),w
  3921  0FA7  0022               	movlb	2	; select bank2
  3922  0FA8  00C2               	movwf	_main$1138^(0+256)
  3923  0FA9  0021               	movlb	1	; select bank1
  3924  0FAA  086D               	movf	(?_argXY+1)^(0+128),w
  3925  0FAB  0022               	movlb	2	; select bank2
  3926  0FAC  00C3               	movwf	(_main$1138+1)^(0+256)
  3927  0FAD  0021               	movlb	1	; select bank1
  3928  0FAE  086E               	movf	(?_argXY+2)^(0+128),w
  3929  0FAF  0022               	movlb	2	; select bank2
  3930  0FB0  00C4               	movwf	(_main$1138+2)^(0+256)
  3931                           
  3932                           ;main.c: 68: angle = ((argXY()/3.14159265358979323846)*180)+180;
  3933  0FB1  3000               	movlw	0
  3934  0FB2  0021               	movlb	1	; select bank1
  3935  0FB3  00BB               	movwf	___ftadd@f1^(0+128)
  3936  0FB4  3034               	movlw	52
  3937  0FB5  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  3938  0FB6  3043               	movlw	67
  3939  0FB7  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  3940  0FB8  3000               	movlw	0
  3941  0FB9  00C8               	movwf	___ftmul@f1^(0+128)
  3942  0FBA  3034               	movlw	52
  3943  0FBB  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  3944  0FBC  3043               	movlw	67
  3945  0FBD  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  3946  0FBE  3010               	movlw	16
  3947  0FBF  00A8               	movwf	___ftdiv@f2^(0+128)
  3948  0FC0  3049               	movlw	73
  3949  0FC1  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  3950  0FC2  3040               	movlw	64
  3951  0FC3  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  3952  0FC4  0022               	movlb	2	; select bank2
  3953  0FC5  0842               	movf	_main$1138^(0+256),w
  3954  0FC6  0021               	movlb	1	; select bank1
  3955  0FC7  00AB               	movwf	___ftdiv@f1^(0+128)
  3956  0FC8  0022               	movlb	2	; select bank2
  3957  0FC9  0843               	movf	(_main$1138+1)^(0+256),w
  3958  0FCA  0021               	movlb	1	; select bank1
  3959  0FCB  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  3960  0FCC  0022               	movlb	2	; select bank2
  3961  0FCD  0844               	movf	(_main$1138+2)^(0+256),w
  3962  0FCE  0021               	movlb	1	; select bank1
  3963  0FCF  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  3964  0FD0  3197  2757  318D   	fcall	___ftdiv
  3965  0FD3  0021               	movlb	1	; select bank1
  3966  0FD4  0828               	movf	?___ftdiv^(0+128),w
  3967  0FD5  00CB               	movwf	___ftmul@f2^(0+128)
  3968  0FD6  0829               	movf	(?___ftdiv+1)^(0+128),w
  3969  0FD7  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  3970  0FD8  082A               	movf	(?___ftdiv+2)^(0+128),w
  3971  0FD9  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  3972  0FDA  3188  201E  318D   	fcall	___ftmul
  3973  0FDD  0021               	movlb	1	; select bank1
  3974  0FDE  0848               	movf	?___ftmul^(0+128),w
  3975  0FDF  00BE               	movwf	___ftadd@f2^(0+128)
  3976  0FE0  0849               	movf	(?___ftmul+1)^(0+128),w
  3977  0FE1  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  3978  0FE2  084A               	movf	(?___ftmul+2)^(0+128),w
  3979  0FE3  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  3980  0FE4  3188  20D2  318D   	fcall	___ftadd
  3981  0FE7  0021               	movlb	1	; select bank1
  3982  0FE8  083B               	movf	?___ftadd^(0+128),w
  3983  0FE9  0022               	movlb	2	; select bank2
  3984  0FEA  00BF               	movwf	main@angle^(0+256)
  3985  0FEB  0021               	movlb	1	; select bank1
  3986  0FEC  083C               	movf	(?___ftadd+1)^(0+128),w
  3987  0FED  0022               	movlb	2	; select bank2
  3988  0FEE  00C0               	movwf	(main@angle+1)^(0+256)
  3989  0FEF  0021               	movlb	1	; select bank1
  3990  0FF0  083D               	movf	(?___ftadd+2)^(0+128),w
  3991  0FF1  0022               	movlb	2	; select bank2
  3992  0FF2  00C1               	movwf	(main@angle+2)^(0+256)
  3993                           
  3994                           ;main.c: 74: _delay((unsigned long)((200)*(16000000/4000.0)));
  3995  0FF3  3005               	movlw	5
  3996  0FF4  00BE               	movwf	(??_main^(0+256)+2)
  3997  0FF5  300F               	movlw	15
  3998  0FF6  00BD               	movwf	(??_main^(0+256)+1)
  3999  0FF7  30F4               	movlw	244
  4000  0FF8  00BC               	movwf	??_main^(0+256)
  4001  0FF9                     u8837:	
  4002  0FF9  0BBC               	decfsz	??_main^(0+256),f
  4003  0FFA  2FF9               	goto	u8837
  4004  0FFB  0BBD               	decfsz	(??_main^(0+256)+1),f
  4005  0FFC  2FF9               	goto	u8837
  4006  0FFD  0BBE               	decfsz	(??_main^(0+256)+2),f
  4007  0FFE  2FF9               	goto	u8837
  4008  0FFF  2F9C               	goto	l4215
  4009  1000                     __end_of_main:	
  4010                           
  4011                           	psect	text1
  4012  10CE                     __ptext1:	
  4013 ;; *************** function _zeroNeedle *****************
  4014 ;; Defined at:
  4015 ;;		line 34 in file "Switec_motor.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  i               2    2[BANK1 ] unsigned int 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  2    6[None  ] int 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;Total ram usage:        2 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    7
  4036 ;; This function calls:
  4037 ;;		_stepCounterClock
  4038 ;; This function is called by:
  4039 ;;		_main
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _zeroNeedle
  4045  10CE                     _zeroNeedle:	
  4046                           
  4047                           ;Switec_motor.c: 36: for(unsigned int i=0; i<1080;i++)
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in _zeroNeedle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4051  10CE  0021               	movlb	1	; select bank1
  4052  10CF  01A2               	clrf	zeroNeedle@i^(0+128)
  4053  10D0  01A3               	clrf	(zeroNeedle@i+1)^(0+128)
  4054  10D1  3004               	movlw	4
  4055  10D2  0223               	subwf	(zeroNeedle@i+1)^(0+128),w
  4056  10D3  3038               	movlw	56
  4057  10D4  1903               	skipnz
  4058  10D5  0222               	subwf	zeroNeedle@i^(0+128),w
  4059  10D6  1803               	btfsc	3,0
  4060  10D7  28E7               	goto	l3987
  4061  10D8                     l3981:	
  4062                           
  4063                           ;Switec_motor.c: 37: {
  4064                           ;Switec_motor.c: 38: stepCounterClock();
  4065  10D8  3191  21DF  3190   	fcall	_stepCounterClock
  4066  10DB  3001               	movlw	1
  4067  10DC  0021               	movlb	1	; select bank1
  4068  10DD  07A2               	addwf	zeroNeedle@i^(0+128),f
  4069  10DE  3000               	movlw	0
  4070  10DF  3DA3               	addwfc	(zeroNeedle@i+1)^(0+128),f
  4071  10E0  3004               	movlw	4
  4072  10E1  0223               	subwf	(zeroNeedle@i+1)^(0+128),w
  4073  10E2  3038               	movlw	56
  4074  10E3  1903               	skipnz
  4075  10E4  0222               	subwf	zeroNeedle@i^(0+128),w
  4076  10E5  1C03               	skipc
  4077  10E6  28D8               	goto	l3981
  4078  10E7                     l3987:	
  4079                           
  4080                           ;Switec_motor.c: 39: }
  4081                           ;Switec_motor.c: 40: position=0;
  4082  10E7  0020               	movlb	0	; select bank0
  4083  10E8  01E3               	clrf	_position
  4084  10E9  01E4               	clrf	_position+1
  4085  10EA  0008               	return
  4086  10EB                     __end_of_zeroNeedle:	
  4087                           
  4088                           	psect	text2
  4089  11DF                     __ptext2:	
  4090 ;; *************** function _stepCounterClock *****************
  4091 ;; Defined at:
  4092 ;;		line 21 in file "Switec_motor.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    6
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_zeroNeedle
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _stepCounterClock
  4122  11DF                     _stepCounterClock:	
  4123                           
  4124                           ;Switec_motor.c: 23: PORTD = PORTD & 0x0F;
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _stepCounterClock: [wreg+fsr1l+fsr1h+status,2+status,0]
  4128  11DF  0020               	movlb	0	; select bank0
  4129  11E0  080F               	movf	15,w	;volatile
  4130  11E1  390F               	andlw	15
  4131  11E2  008F               	movwf	15	;volatile
  4132                           
  4133                           ;Switec_motor.c: 24: PORTD = PORTD | stateMap[state];
  4134  11E3  0867               	movf	_state,w
  4135  11E4  3E68               	addlw	(low (_stateMap| 0))& (0+255)
  4136  11E5  0086               	movwf	6
  4137  11E6  0187               	clrf	7
  4138  11E7  0801               	movf	1,w
  4139  11E8  040F               	iorwf	15,w	;volatile
  4140  11E9  008F               	movwf	15	;volatile
  4141                           
  4142                           ;Switec_motor.c: 25: if (state==0)
  4143  11EA  0867               	movf	_state,w	;volatile
  4144  11EB  1D03               	btfss	3,2
  4145  11EC  29F4               	goto	l3819
  4146                           
  4147                           ;Switec_motor.c: 26: state = 5;
  4148  11ED  3005               	movlw	5
  4149  11EE  0021               	movlb	1	; select bank1
  4150  11EF  00A0               	movwf	??_stepCounterClock^(0+128)
  4151  11F0  0820               	movf	??_stepCounterClock^(0+128),w
  4152  11F1  0020               	movlb	0	; select bank0
  4153  11F2  00E7               	movwf	_state	;volatile
  4154  11F3  29F6               	goto	l3821
  4155  11F4                     l3819:	
  4156                           
  4157                           ;Switec_motor.c: 27: else
  4158                           ;Switec_motor.c: 28: state--;
  4159  11F4  3001               	movlw	1
  4160  11F5  02E7               	subwf	_state,f	;volatile
  4161  11F6                     l3821:	
  4162                           
  4163                           ;Switec_motor.c: 30: _delay((unsigned long)((3)*(16000000/4000.0)));
  4164  11F6  3010               	movlw	16
  4165  11F7  0021               	movlb	1	; select bank1
  4166  11F8  00A1               	movwf	(??_stepCounterClock^(0+128)+1)
  4167  11F9  3094               	movlw	148
  4168  11FA  00A0               	movwf	??_stepCounterClock^(0+128)
  4169  11FB                     u8847:	
  4170  11FB  0BA0               	decfsz	??_stepCounterClock^(0+128),f
  4171  11FC  29FB               	goto	u8847
  4172  11FD  0BA1               	decfsz	(??_stepCounterClock^(0+128)+1),f
  4173  11FE  29FB               	goto	u8847
  4174  11FF  0000               	nop
  4175                           
  4176                           ;Switec_motor.c: 31: PORTD = PORTD & 0x0F;
  4177  1200  0020               	movlb	0	; select bank0
  4178  1201  080F               	movf	15,w	;volatile
  4179  1202  390F               	andlw	15
  4180  1203  008F               	movwf	15	;volatile
  4181  1204  0008               	return
  4182  1205                     __end_of_stepCounterClock:	
  4183                           
  4184                           	psect	text3
  4185  10B1                     __ptext3:	
  4186 ;; *************** function _printf *****************
  4187 ;; Defined at:
  4188 ;;		line 464 in file "/Applications/microchip/xc8/v1.35/sources/common/doprnt.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  f               2    1[BANK1 ] PTR const unsigned char 
  4191 ;;		 -> STR_1(5), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  tmpval          4    0        struct .
  4194 ;;  cp              2    0        PTR const unsigned char 
  4195 ;;  len             2    0        unsigned int 
  4196 ;;  val             2    0        unsigned int 
  4197 ;;  c               1    7[BANK1 ] char 
  4198 ;;  ap              1    6[BANK1 ] PTR void [1]
  4199 ;;		 -> ?_printf(2), 
  4200 ;;  flag            1    0        unsigned char 
  4201 ;;  prec            1    0        char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  2    1[BANK1 ] int 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4211 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;Total ram usage:        7 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    7
  4218 ;; This function calls:
  4219 ;;		_putch
  4220 ;; This function is called by:
  4221 ;;		_main
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           
  4226                           ;psect for function _printf
  4227  10B1                     _printf:	
  4228                           
  4229                           ;doprnt.c: 466: va_list ap;
  4230                           ;doprnt.c: 499: signed char c;
  4231                           ;doprnt.c: 506: signed char prec;
  4232                           ;doprnt.c: 508: unsigned char flag;
  4233                           ;doprnt.c: 523: union {
  4234                           ;doprnt.c: 524: unsigned long vd;
  4235                           ;doprnt.c: 525: double integ;
  4236                           ;doprnt.c: 526: } tmpval;
  4237                           ;doprnt.c: 528: unsigned int val;
  4238                           ;doprnt.c: 529: unsigned len;
  4239                           ;doprnt.c: 530: const char * cp;
  4240                           ;doprnt.c: 533: *ap = __va_start();
  4241                           
  4242                           ;incstack = 0
  4243                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4244  10B1  30A3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4245  10B2  0021               	movlb	1	; select bank1
  4246  10B3  00A3               	movwf	??_printf^(0+128)
  4247  10B4  0823               	movf	??_printf^(0+128),w
  4248  10B5  00A6               	movwf	printf@ap^(0+128)
  4249  10B6                     l3993:	
  4250                           ;doprnt.c: 543: }
  4251                           ;doprnt.c: 1422: {
  4252                           
  4253                           ;doprnt.c: 542: continue;
  4254                           
  4255                           ;doprnt.c: 536: while(c = *f++) {
  4256                           
  4257  10B6  0021               	movlb	1	; select bank1
  4258  10B7  0822               	movf	(printf@f+1)^(0+128),w
  4259  10B8  00A4               	movwf	(??_printf^(0+128)+1)
  4260  10B9  0821               	movf	printf@f^(0+128),w
  4261  10BA  00A3               	movwf	??_printf^(0+128)
  4262  10BB  0AA1               	incf	printf@f^(0+128),f
  4263  10BC  1903               	skipnz
  4264  10BD  0AA2               	incf	(printf@f+1)^(0+128),f
  4265  10BE  0823               	movf	??_printf^(0+128),w
  4266  10BF  0084               	movwf	4
  4267  10C0  0824               	movf	(??_printf+1)^(0+128),w
  4268  10C1  0085               	movwf	5
  4269  10C2  0800               	movf	0,w	;code access
  4270  10C3  00A5               	movwf	(??_printf+2)^(0+128)
  4271  10C4  0825               	movf	(??_printf+2)^(0+128),w
  4272  10C5  00A7               	movwf	printf@c^(0+128)
  4273  10C6  0827               	movf	printf@c^(0+128),w
  4274  10C7  1903               	btfsc	3,2
  4275  10C8  0008               	return
  4276                           
  4277                           ;doprnt.c: 540: {
  4278                           ;doprnt.c: 541: (putch(c) );
  4279  10C9  0827               	movf	printf@c^(0+128),w
  4280  10CA  319F  27AA  3190   	fcall	_putch
  4281  10CD  28B6               	goto	l3993
  4282  10CE                     __end_of_printf:	
  4283                           ;doprnt.c: 1469: }
  4284                           ;doprnt.c: 1533: }
  4285                           ;doprnt.c: 1540: return 0;
  4286                           ;	Return value of _printf is never used
  4287                           
  4288                           
  4289                           	psect	text4
  4290  1FAA                     __ptext4:	
  4291 ;; *************** function _putch *****************
  4292 ;; Defined at:
  4293 ;;		line 88 in file "eusart.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  byte            1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  byte            1    0[BANK1 ] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;		None               void
  4300 ;; Registers used:
  4301 ;;		wreg
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;Total ram usage:        1 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    6
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_printf
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _putch
  4323  1FAA                     _putch:	
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _putch: [wreg]
  4327                           ;putch@byte stored from wreg
  4328  1FAA  0021               	movlb	1	; select bank1
  4329  1FAB  00A0               	movwf	putch@byte^(0+128)
  4330  1FAC                     l480:	
  4331                           ;eusart.c: 90: while(!TX1STAbits.TRMT);
  4332                           
  4333  1FAC  0023               	movlb	3	; select bank3
  4334  1FAD  1C9E               	btfss	30,1	;volatile
  4335  1FAE  2FAC               	goto	l480
  4336                           
  4337                           ;eusart.c: 91: TX1REG = byte;
  4338  1FAF  0021               	movlb	1	; select bank1
  4339  1FB0  0820               	movf	putch@byte^(0+128),w
  4340  1FB1  0023               	movlb	3	; select bank3
  4341  1FB2  009A               	movwf	26	;volatile
  4342  1FB3  0008               	return
  4343  1FB4                     __end_of_putch:	
  4344                           
  4345                           	psect	text5
  4346  0064                     __ptext5:	
  4347 ;; *************** function _display *****************
  4348 ;; Defined at:
  4349 ;;		line 161 in file "DigitsDriver.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  x               2   16[BANK1 ] int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  x3              2   26[BANK1 ] int 
  4354 ;;  x2              2   24[BANK1 ] int 
  4355 ;;  x1              2   22[BANK1 ] int 
  4356 ;;  x0              2   20[BANK1 ] int 
  4357 ;;  neg             1   19[BANK1 ] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;		None               void
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4367 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;Total ram usage:       12 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    7
  4374 ;; This function calls:
  4375 ;;		___awdiv
  4376 ;;		___awmod
  4377 ;;		___bmul
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           
  4384                           ;psect for function _display
  4385  0064                     _display:	
  4386                           
  4387                           ;DigitsDriver.c: 163: bool neg =0;
  4388                           
  4389                           ;incstack = 0
  4390                           ; Regs used in _display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4391  0064  0021               	movlb	1	; select bank1
  4392  0065  01B3               	clrf	display@neg^(0+128)
  4393                           
  4394                           ;DigitsDriver.c: 165: if(x<0)
  4395  0066  1FB1               	btfss	(display@x+1)^(0+128),7
  4396  0067  286F               	goto	l4029
  4397                           
  4398                           ;DigitsDriver.c: 166: {
  4399                           ;DigitsDriver.c: 167: neg=1;
  4400  0068  01B3               	clrf	display@neg^(0+128)
  4401  0069  0AB3               	incf	display@neg^(0+128),f
  4402                           
  4403                           ;DigitsDriver.c: 168: x=-1*x;
  4404  006A  09B0               	comf	display@x^(0+128),f
  4405  006B  09B1               	comf	(display@x+1)^(0+128),f
  4406  006C  0AB0               	incf	display@x^(0+128),f
  4407  006D  1903               	skipnz
  4408  006E  0AB1               	incf	(display@x+1)^(0+128),f
  4409  006F                     l4029:	
  4410                           
  4411                           ;DigitsDriver.c: 169: }
  4412                           ;DigitsDriver.c: 172: int x3=x/1000;
  4413  006F  30E8               	movlw	232
  4414  0070  00A7               	movwf	___awdiv@divisor^(0+128)
  4415  0071  3003               	movlw	3
  4416  0072  00A8               	movwf	(___awdiv@divisor^(0+128)+1)
  4417  0073  0831               	movf	(display@x+1)^(0+128),w
  4418  0074  00AA               	movwf	(___awdiv@dividend+1)^(0+128)
  4419  0075  0830               	movf	display@x^(0+128),w
  4420  0076  00A9               	movwf	___awdiv@dividend^(0+128)
  4421  0077  3194  2479  3180   	fcall	___awdiv
  4422  007A  0021               	movlb	1	; select bank1
  4423  007B  0828               	movf	(?___awdiv+1)^(0+128),w
  4424  007C  00BB               	movwf	(display@x3+1)^(0+128)
  4425  007D  0827               	movf	?___awdiv^(0+128),w
  4426  007E  00BA               	movwf	display@x3^(0+128)
  4427                           
  4428                           ;DigitsDriver.c: 173: int x2=(x%1000)/100;
  4429  007F  3064               	movlw	100
  4430  0080  00A7               	movwf	___awdiv@divisor^(0+128)
  4431  0081  3000               	movlw	0
  4432  0082  00A8               	movwf	(___awdiv@divisor^(0+128)+1)
  4433  0083  0831               	movf	(display@x+1)^(0+128),w
  4434  0084  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  4435  0085  0830               	movf	display@x^(0+128),w
  4436  0086  00A2               	movwf	___awmod@dividend^(0+128)
  4437  0087  30E8               	movlw	232
  4438  0088  00A0               	movwf	___awmod@divisor^(0+128)
  4439  0089  3003               	movlw	3
  4440  008A  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  4441  008B  3193  234B  3180   	fcall	___awmod
  4442  008E  0021               	movlb	1	; select bank1
  4443  008F  0821               	movf	(?___awmod+1)^(0+128),w
  4444  0090  00AA               	movwf	(___awdiv@dividend+1)^(0+128)
  4445  0091  0820               	movf	?___awmod^(0+128),w
  4446  0092  00A9               	movwf	___awdiv@dividend^(0+128)
  4447  0093  3194  2479  3180   	fcall	___awdiv
  4448  0096  0021               	movlb	1	; select bank1
  4449  0097  0828               	movf	(?___awdiv+1)^(0+128),w
  4450  0098  00B9               	movwf	(display@x2+1)^(0+128)
  4451  0099  0827               	movf	?___awdiv^(0+128),w
  4452  009A  00B8               	movwf	display@x2^(0+128)
  4453                           
  4454                           ;DigitsDriver.c: 174: int x1=(x%100)/10;
  4455  009B  300A               	movlw	10
  4456  009C  00A7               	movwf	___awdiv@divisor^(0+128)
  4457  009D  3000               	movlw	0
  4458  009E  00A8               	movwf	(___awdiv@divisor^(0+128)+1)
  4459  009F  0831               	movf	(display@x+1)^(0+128),w
  4460  00A0  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  4461  00A1  0830               	movf	display@x^(0+128),w
  4462  00A2  00A2               	movwf	___awmod@dividend^(0+128)
  4463  00A3  3064               	movlw	100
  4464  00A4  00A0               	movwf	___awmod@divisor^(0+128)
  4465  00A5  3000               	movlw	0
  4466  00A6  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  4467  00A7  3193  234B  3180   	fcall	___awmod
  4468  00AA  0021               	movlb	1	; select bank1
  4469  00AB  0821               	movf	(?___awmod+1)^(0+128),w
  4470  00AC  00AA               	movwf	(___awdiv@dividend+1)^(0+128)
  4471  00AD  0820               	movf	?___awmod^(0+128),w
  4472  00AE  00A9               	movwf	___awdiv@dividend^(0+128)
  4473  00AF  3194  2479  3180   	fcall	___awdiv
  4474  00B2  0021               	movlb	1	; select bank1
  4475  00B3  0828               	movf	(?___awdiv+1)^(0+128),w
  4476  00B4  00B7               	movwf	(display@x1+1)^(0+128)
  4477  00B5  0827               	movf	?___awdiv^(0+128),w
  4478  00B6  00B6               	movwf	display@x1^(0+128)
  4479                           
  4480                           ;DigitsDriver.c: 175: int x0 = x%10;
  4481  00B7  300A               	movlw	10
  4482  00B8  00A0               	movwf	___awmod@divisor^(0+128)
  4483  00B9  3000               	movlw	0
  4484  00BA  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  4485  00BB  0831               	movf	(display@x+1)^(0+128),w
  4486  00BC  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  4487  00BD  0830               	movf	display@x^(0+128),w
  4488  00BE  00A2               	movwf	___awmod@dividend^(0+128)
  4489  00BF  3193  234B  3180   	fcall	___awmod
  4490  00C2  0021               	movlb	1	; select bank1
  4491  00C3  0821               	movf	(?___awmod+1)^(0+128),w
  4492  00C4  00B5               	movwf	(display@x0+1)^(0+128)
  4493  00C5  0820               	movf	?___awmod^(0+128),w
  4494  00C6  00B4               	movwf	display@x0^(0+128)
  4495                           
  4496                           ;DigitsDriver.c: 177: if ((x3==0) && (x2==0) && (x1==0))
  4497  00C7  083A               	movf	display@x3^(0+128),w
  4498  00C8  043B               	iorwf	(display@x3+1)^(0+128),w
  4499  00C9  1D03               	btfss	3,2
  4500  00CA  28D7               	goto	l4045
  4501  00CB  0838               	movf	display@x2^(0+128),w
  4502  00CC  0439               	iorwf	(display@x2+1)^(0+128),w
  4503  00CD  1D03               	btfss	3,2
  4504  00CE  28D7               	goto	l4045
  4505  00CF  0836               	movf	display@x1^(0+128),w
  4506  00D0  0437               	iorwf	(display@x1+1)^(0+128),w
  4507  00D1  1D03               	btfss	3,2
  4508  00D2  28D7               	goto	l4045
  4509                           
  4510                           ;DigitsDriver.c: 178: x1=10;
  4511  00D3  300A               	movlw	10
  4512  00D4  00B6               	movwf	display@x1^(0+128)
  4513  00D5  3000               	movlw	0
  4514  00D6  00B7               	movwf	(display@x1^(0+128)+1)
  4515  00D7                     l4045:	
  4516                           
  4517                           ;DigitsDriver.c: 179: if ((x3==0) && (x2==0))
  4518  00D7  083A               	movf	display@x3^(0+128),w
  4519  00D8  043B               	iorwf	(display@x3+1)^(0+128),w
  4520  00D9  1D03               	btfss	3,2
  4521  00DA  28E3               	goto	l4051
  4522  00DB  0838               	movf	display@x2^(0+128),w
  4523  00DC  0439               	iorwf	(display@x2+1)^(0+128),w
  4524  00DD  1D03               	btfss	3,2
  4525  00DE  28E3               	goto	l4051
  4526                           
  4527                           ;DigitsDriver.c: 180: x2=10;
  4528  00DF  300A               	movlw	10
  4529  00E0  00B8               	movwf	display@x2^(0+128)
  4530  00E1  3000               	movlw	0
  4531  00E2  00B9               	movwf	(display@x2^(0+128)+1)
  4532  00E3                     l4051:	
  4533                           
  4534                           ;DigitsDriver.c: 181: if (x3==0)
  4535  00E3  083A               	movf	display@x3^(0+128),w
  4536  00E4  043B               	iorwf	(display@x3+1)^(0+128),w
  4537  00E5  1D03               	btfss	3,2
  4538  00E6  28EB               	goto	l4055
  4539                           
  4540                           ;DigitsDriver.c: 182: x3=10;
  4541  00E7  300A               	movlw	10
  4542  00E8  00BA               	movwf	display@x3^(0+128)
  4543  00E9  3000               	movlw	0
  4544  00EA  00BB               	movwf	(display@x3^(0+128)+1)
  4545  00EB                     l4055:	
  4546                           
  4547                           ;DigitsDriver.c: 186: RF1=DIGIT[x0][0];
  4548  00EB  3007               	movlw	7
  4549  00EC  00B2               	movwf	??_display^(0+128)
  4550  00ED  0832               	movf	??_display^(0+128),w
  4551  00EE  00A0               	movwf	___bmul@multiplicand^(0+128)
  4552  00EF  0834               	movf	display@x0^(0+128),w
  4553  00F0  3190  2054  3180   	fcall	___bmul
  4554  00F3  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4555  00F4  0086               	movwf	6
  4556  00F5  3001               	movlw	1	; select bank3/4
  4557  00F6  0087               	movwf	7
  4558  00F7  1C01               	btfss	1,0
  4559  00F8  28FC               	goto	u6950
  4560  00F9  0025               	movlb	5	; select bank5
  4561  00FA  148C               	bsf	12,1	;volatile
  4562  00FB  28FE               	goto	l4057
  4563  00FC                     u6950:	
  4564  00FC  0025               	movlb	5	; select bank5
  4565  00FD  108C               	bcf	12,1	;volatile
  4566  00FE                     l4057:	
  4567                           
  4568                           ;DigitsDriver.c: 187: RF2=DIGIT[x0][1];
  4569  00FE  3007               	movlw	7
  4570  00FF  0021               	movlb	1	; select bank1
  4571  0100  00B2               	movwf	??_display^(0+128)
  4572  0101  0832               	movf	??_display^(0+128),w
  4573  0102  00A0               	movwf	___bmul@multiplicand^(0+128)
  4574  0103  0834               	movf	display@x0^(0+128),w
  4575  0104  3190  2054  3180   	fcall	___bmul
  4576  0107  3E01               	addlw	1
  4577  0108  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4578  0109  0086               	movwf	6
  4579  010A  3001               	movlw	1	; select bank3/4
  4580  010B  0087               	movwf	7
  4581  010C  1C01               	btfss	1,0
  4582  010D  2911               	goto	u6970
  4583  010E  0025               	movlb	5	; select bank5
  4584  010F  150C               	bsf	12,2	;volatile
  4585  0110  2913               	goto	l4059
  4586  0111                     u6970:	
  4587  0111  0025               	movlb	5	; select bank5
  4588  0112  110C               	bcf	12,2	;volatile
  4589  0113                     l4059:	
  4590                           
  4591                           ;DigitsDriver.c: 188: RF0=DIGIT[x0][2];
  4592  0113  3007               	movlw	7
  4593  0114  0021               	movlb	1	; select bank1
  4594  0115  00B2               	movwf	??_display^(0+128)
  4595  0116  0832               	movf	??_display^(0+128),w
  4596  0117  00A0               	movwf	___bmul@multiplicand^(0+128)
  4597  0118  0834               	movf	display@x0^(0+128),w
  4598  0119  3190  2054  3180   	fcall	___bmul
  4599  011C  3E02               	addlw	2
  4600  011D  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4601  011E  0086               	movwf	6
  4602  011F  3001               	movlw	1	; select bank3/4
  4603  0120  0087               	movwf	7
  4604  0121  1C01               	btfss	1,0
  4605  0122  2926               	goto	u6990
  4606  0123  0025               	movlb	5	; select bank5
  4607  0124  140C               	bsf	12,0	;volatile
  4608  0125  2928               	goto	l4061
  4609  0126                     u6990:	
  4610  0126  0025               	movlb	5	; select bank5
  4611  0127  100C               	bcf	12,0	;volatile
  4612  0128                     l4061:	
  4613                           
  4614                           ;DigitsDriver.c: 189: RF3=DIGIT[x0][3];
  4615  0128  3007               	movlw	7
  4616  0129  0021               	movlb	1	; select bank1
  4617  012A  00B2               	movwf	??_display^(0+128)
  4618  012B  0832               	movf	??_display^(0+128),w
  4619  012C  00A0               	movwf	___bmul@multiplicand^(0+128)
  4620  012D  0834               	movf	display@x0^(0+128),w
  4621  012E  3190  2054  3180   	fcall	___bmul
  4622  0131  3E03               	addlw	3
  4623  0132  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4624  0133  0086               	movwf	6
  4625  0134  3001               	movlw	1	; select bank3/4
  4626  0135  0087               	movwf	7
  4627  0136  1C01               	btfss	1,0
  4628  0137  293B               	goto	u7010
  4629  0138  0025               	movlb	5	; select bank5
  4630  0139  158C               	bsf	12,3	;volatile
  4631  013A  293D               	goto	l4063
  4632  013B                     u7010:	
  4633  013B  0025               	movlb	5	; select bank5
  4634  013C  118C               	bcf	12,3	;volatile
  4635  013D                     l4063:	
  4636                           
  4637                           ;DigitsDriver.c: 190: RA0=DIGIT[x0][4];
  4638  013D  3007               	movlw	7
  4639  013E  0021               	movlb	1	; select bank1
  4640  013F  00B2               	movwf	??_display^(0+128)
  4641  0140  0832               	movf	??_display^(0+128),w
  4642  0141  00A0               	movwf	___bmul@multiplicand^(0+128)
  4643  0142  0834               	movf	display@x0^(0+128),w
  4644  0143  3190  2054  3180   	fcall	___bmul
  4645  0146  3E04               	addlw	4
  4646  0147  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4647  0148  0086               	movwf	6
  4648  0149  3001               	movlw	1	; select bank3/4
  4649  014A  0087               	movwf	7
  4650  014B  1C01               	btfss	1,0
  4651  014C  2950               	goto	u7030
  4652  014D  0020               	movlb	0	; select bank0
  4653  014E  140C               	bsf	12,0	;volatile
  4654  014F  2952               	goto	l4065
  4655  0150                     u7030:	
  4656  0150  0020               	movlb	0	; select bank0
  4657  0151  100C               	bcf	12,0	;volatile
  4658  0152                     l4065:	
  4659                           
  4660                           ;DigitsDriver.c: 191: RA2=DIGIT[x0][5];
  4661  0152  3007               	movlw	7
  4662  0153  0021               	movlb	1	; select bank1
  4663  0154  00B2               	movwf	??_display^(0+128)
  4664  0155  0832               	movf	??_display^(0+128),w
  4665  0156  00A0               	movwf	___bmul@multiplicand^(0+128)
  4666  0157  0834               	movf	display@x0^(0+128),w
  4667  0158  3190  2054  3180   	fcall	___bmul
  4668  015B  3E05               	addlw	5
  4669  015C  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4670  015D  0086               	movwf	6
  4671  015E  3001               	movlw	1	; select bank3/4
  4672  015F  0087               	movwf	7
  4673  0160  1C01               	btfss	1,0
  4674  0161  2965               	goto	u7050
  4675  0162  0020               	movlb	0	; select bank0
  4676  0163  150C               	bsf	12,2	;volatile
  4677  0164  2967               	goto	l4067
  4678  0165                     u7050:	
  4679  0165  0020               	movlb	0	; select bank0
  4680  0166  110C               	bcf	12,2	;volatile
  4681  0167                     l4067:	
  4682                           
  4683                           ;DigitsDriver.c: 192: RA1=DIGIT[x0][6];
  4684  0167  3007               	movlw	7
  4685  0168  0021               	movlb	1	; select bank1
  4686  0169  00B2               	movwf	??_display^(0+128)
  4687  016A  0832               	movf	??_display^(0+128),w
  4688  016B  00A0               	movwf	___bmul@multiplicand^(0+128)
  4689  016C  0834               	movf	display@x0^(0+128),w
  4690  016D  3190  2054  3180   	fcall	___bmul
  4691  0170  3E06               	addlw	6
  4692  0171  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4693  0172  0086               	movwf	6
  4694  0173  3001               	movlw	1	; select bank3/4
  4695  0174  0087               	movwf	7
  4696  0175  1C01               	btfss	1,0
  4697  0176  297A               	goto	u7070
  4698  0177  0020               	movlb	0	; select bank0
  4699  0178  148C               	bsf	12,1	;volatile
  4700  0179  297C               	goto	l4069
  4701  017A                     u7070:	
  4702  017A  0020               	movlb	0	; select bank0
  4703  017B  108C               	bcf	12,1	;volatile
  4704  017C                     l4069:	
  4705                           
  4706                           ;DigitsDriver.c: 194: RF5=DIGIT[x1][0];
  4707  017C  3007               	movlw	7
  4708  017D  0021               	movlb	1	; select bank1
  4709  017E  00B2               	movwf	??_display^(0+128)
  4710  017F  0832               	movf	??_display^(0+128),w
  4711  0180  00A0               	movwf	___bmul@multiplicand^(0+128)
  4712  0181  0836               	movf	display@x1^(0+128),w
  4713  0182  3190  2054  3180   	fcall	___bmul
  4714  0185  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4715  0186  0086               	movwf	6
  4716  0187  3001               	movlw	1	; select bank3/4
  4717  0188  0087               	movwf	7
  4718  0189  1C01               	btfss	1,0
  4719  018A  298E               	goto	u7090
  4720  018B  0025               	movlb	5	; select bank5
  4721  018C  168C               	bsf	12,5	;volatile
  4722  018D  2990               	goto	l4071
  4723  018E                     u7090:	
  4724  018E  0025               	movlb	5	; select bank5
  4725  018F  128C               	bcf	12,5	;volatile
  4726  0190                     l4071:	
  4727                           
  4728                           ;DigitsDriver.c: 195: RF6=DIGIT[x1][1];
  4729  0190  3007               	movlw	7
  4730  0191  0021               	movlb	1	; select bank1
  4731  0192  00B2               	movwf	??_display^(0+128)
  4732  0193  0832               	movf	??_display^(0+128),w
  4733  0194  00A0               	movwf	___bmul@multiplicand^(0+128)
  4734  0195  0836               	movf	display@x1^(0+128),w
  4735  0196  3190  2054  3180   	fcall	___bmul
  4736  0199  3E01               	addlw	1
  4737  019A  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4738  019B  0086               	movwf	6
  4739  019C  3001               	movlw	1	; select bank3/4
  4740  019D  0087               	movwf	7
  4741  019E  1C01               	btfss	1,0
  4742  019F  29A3               	goto	u7110
  4743  01A0  0025               	movlb	5	; select bank5
  4744  01A1  170C               	bsf	12,6	;volatile
  4745  01A2  29A5               	goto	l4073
  4746  01A3                     u7110:	
  4747  01A3  0025               	movlb	5	; select bank5
  4748  01A4  130C               	bcf	12,6	;volatile
  4749  01A5                     l4073:	
  4750                           
  4751                           ;DigitsDriver.c: 196: RF4=DIGIT[x1][2];
  4752  01A5  3007               	movlw	7
  4753  01A6  0021               	movlb	1	; select bank1
  4754  01A7  00B2               	movwf	??_display^(0+128)
  4755  01A8  0832               	movf	??_display^(0+128),w
  4756  01A9  00A0               	movwf	___bmul@multiplicand^(0+128)
  4757  01AA  0836               	movf	display@x1^(0+128),w
  4758  01AB  3190  2054  3180   	fcall	___bmul
  4759  01AE  3E02               	addlw	2
  4760  01AF  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4761  01B0  0086               	movwf	6
  4762  01B1  3001               	movlw	1	; select bank3/4
  4763  01B2  0087               	movwf	7
  4764  01B3  1C01               	btfss	1,0
  4765  01B4  29B8               	goto	u7130
  4766  01B5  0025               	movlb	5	; select bank5
  4767  01B6  160C               	bsf	12,4	;volatile
  4768  01B7  29BA               	goto	l4075
  4769  01B8                     u7130:	
  4770  01B8  0025               	movlb	5	; select bank5
  4771  01B9  120C               	bcf	12,4	;volatile
  4772  01BA                     l4075:	
  4773                           
  4774                           ;DigitsDriver.c: 197: RF7=DIGIT[x1][3];
  4775  01BA  3007               	movlw	7
  4776  01BB  0021               	movlb	1	; select bank1
  4777  01BC  00B2               	movwf	??_display^(0+128)
  4778  01BD  0832               	movf	??_display^(0+128),w
  4779  01BE  00A0               	movwf	___bmul@multiplicand^(0+128)
  4780  01BF  0836               	movf	display@x1^(0+128),w
  4781  01C0  3190  2054  3180   	fcall	___bmul
  4782  01C3  3E03               	addlw	3
  4783  01C4  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4784  01C5  0086               	movwf	6
  4785  01C6  3001               	movlw	1	; select bank3/4
  4786  01C7  0087               	movwf	7
  4787  01C8  1C01               	btfss	1,0
  4788  01C9  29CD               	goto	u7150
  4789  01CA  0025               	movlb	5	; select bank5
  4790  01CB  178C               	bsf	12,7	;volatile
  4791  01CC  29CF               	goto	l4077
  4792  01CD                     u7150:	
  4793  01CD  0025               	movlb	5	; select bank5
  4794  01CE  138C               	bcf	12,7	;volatile
  4795  01CF                     l4077:	
  4796                           
  4797                           ;DigitsDriver.c: 198: RC0=DIGIT[x1][4];
  4798  01CF  3007               	movlw	7
  4799  01D0  0021               	movlb	1	; select bank1
  4800  01D1  00B2               	movwf	??_display^(0+128)
  4801  01D2  0832               	movf	??_display^(0+128),w
  4802  01D3  00A0               	movwf	___bmul@multiplicand^(0+128)
  4803  01D4  0836               	movf	display@x1^(0+128),w
  4804  01D5  3190  2054  3180   	fcall	___bmul
  4805  01D8  3E04               	addlw	4
  4806  01D9  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4807  01DA  0086               	movwf	6
  4808  01DB  3001               	movlw	1	; select bank3/4
  4809  01DC  0087               	movwf	7
  4810  01DD  1C01               	btfss	1,0
  4811  01DE  29E2               	goto	u7170
  4812  01DF  0020               	movlb	0	; select bank0
  4813  01E0  140E               	bsf	14,0	;volatile
  4814  01E1  29E4               	goto	l4079
  4815  01E2                     u7170:	
  4816  01E2  0020               	movlb	0	; select bank0
  4817  01E3  100E               	bcf	14,0	;volatile
  4818  01E4                     l4079:	
  4819                           
  4820                           ;DigitsDriver.c: 199: RA4=DIGIT[x1][5];
  4821  01E4  3007               	movlw	7
  4822  01E5  0021               	movlb	1	; select bank1
  4823  01E6  00B2               	movwf	??_display^(0+128)
  4824  01E7  0832               	movf	??_display^(0+128),w
  4825  01E8  00A0               	movwf	___bmul@multiplicand^(0+128)
  4826  01E9  0836               	movf	display@x1^(0+128),w
  4827  01EA  3190  2054  3180   	fcall	___bmul
  4828  01ED  3E05               	addlw	5
  4829  01EE  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4830  01EF  0086               	movwf	6
  4831  01F0  3001               	movlw	1	; select bank3/4
  4832  01F1  0087               	movwf	7
  4833  01F2  1C01               	btfss	1,0
  4834  01F3  29F7               	goto	u7190
  4835  01F4  0020               	movlb	0	; select bank0
  4836  01F5  160C               	bsf	12,4	;volatile
  4837  01F6  29F9               	goto	l4081
  4838  01F7                     u7190:	
  4839  01F7  0020               	movlb	0	; select bank0
  4840  01F8  120C               	bcf	12,4	;volatile
  4841  01F9                     l4081:	
  4842                           
  4843                           ;DigitsDriver.c: 200: RC1=DIGIT[x1][6];
  4844  01F9  3007               	movlw	7
  4845  01FA  0021               	movlb	1	; select bank1
  4846  01FB  00B2               	movwf	??_display^(0+128)
  4847  01FC  0832               	movf	??_display^(0+128),w
  4848  01FD  00A0               	movwf	___bmul@multiplicand^(0+128)
  4849  01FE  0836               	movf	display@x1^(0+128),w
  4850  01FF  3190  2054  3180   	fcall	___bmul
  4851  0202  3E06               	addlw	6
  4852  0203  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4853  0204  0086               	movwf	6
  4854  0205  3001               	movlw	1	; select bank3/4
  4855  0206  0087               	movwf	7
  4856  0207  1C01               	btfss	1,0
  4857  0208  2A0C               	goto	u7210
  4858  0209  0020               	movlb	0	; select bank0
  4859  020A  148E               	bsf	14,1	;volatile
  4860  020B  2A0E               	goto	l4083
  4861  020C                     u7210:	
  4862  020C  0020               	movlb	0	; select bank0
  4863  020D  108E               	bcf	14,1	;volatile
  4864  020E                     l4083:	
  4865                           
  4866                           ;DigitsDriver.c: 202: RG2=DIGIT[x2][0];
  4867  020E  3007               	movlw	7
  4868  020F  0021               	movlb	1	; select bank1
  4869  0210  00B2               	movwf	??_display^(0+128)
  4870  0211  0832               	movf	??_display^(0+128),w
  4871  0212  00A0               	movwf	___bmul@multiplicand^(0+128)
  4872  0213  0838               	movf	display@x2^(0+128),w
  4873  0214  3190  2054  3180   	fcall	___bmul
  4874  0217  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4875  0218  0086               	movwf	6
  4876  0219  3001               	movlw	1	; select bank3/4
  4877  021A  0087               	movwf	7
  4878  021B  1C01               	btfss	1,0
  4879  021C  2A20               	goto	u7230
  4880  021D  0025               	movlb	5	; select bank5
  4881  021E  150D               	bsf	13,2	;volatile
  4882  021F  2A22               	goto	l4085
  4883  0220                     u7230:	
  4884  0220  0025               	movlb	5	; select bank5
  4885  0221  110D               	bcf	13,2	;volatile
  4886  0222                     l4085:	
  4887                           
  4888                           ;DigitsDriver.c: 203: RG1=DIGIT[x2][1];
  4889  0222  3007               	movlw	7
  4890  0223  0021               	movlb	1	; select bank1
  4891  0224  00B2               	movwf	??_display^(0+128)
  4892  0225  0832               	movf	??_display^(0+128),w
  4893  0226  00A0               	movwf	___bmul@multiplicand^(0+128)
  4894  0227  0838               	movf	display@x2^(0+128),w
  4895  0228  3190  2054  3180   	fcall	___bmul
  4896  022B  3E01               	addlw	1
  4897  022C  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4898  022D  0086               	movwf	6
  4899  022E  3001               	movlw	1	; select bank3/4
  4900  022F  0087               	movwf	7
  4901  0230  1C01               	btfss	1,0
  4902  0231  2A35               	goto	u7250
  4903  0232  0025               	movlb	5	; select bank5
  4904  0233  148D               	bsf	13,1	;volatile
  4905  0234  2A37               	goto	l4087
  4906  0235                     u7250:	
  4907  0235  0025               	movlb	5	; select bank5
  4908  0236  108D               	bcf	13,1	;volatile
  4909  0237                     l4087:	
  4910                           
  4911                           ;DigitsDriver.c: 204: RG3=DIGIT[x2][2];
  4912  0237  3007               	movlw	7
  4913  0238  0021               	movlb	1	; select bank1
  4914  0239  00B2               	movwf	??_display^(0+128)
  4915  023A  0832               	movf	??_display^(0+128),w
  4916  023B  00A0               	movwf	___bmul@multiplicand^(0+128)
  4917  023C  0838               	movf	display@x2^(0+128),w
  4918  023D  3190  2054  3180   	fcall	___bmul
  4919  0240  3E02               	addlw	2
  4920  0241  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4921  0242  0086               	movwf	6
  4922  0243  3001               	movlw	1	; select bank3/4
  4923  0244  0087               	movwf	7
  4924  0245  1C01               	btfss	1,0
  4925  0246  2A4A               	goto	u7270
  4926  0247  0025               	movlb	5	; select bank5
  4927  0248  158D               	bsf	13,3	;volatile
  4928  0249  2A4C               	goto	l4089
  4929  024A                     u7270:	
  4930  024A  0025               	movlb	5	; select bank5
  4931  024B  118D               	bcf	13,3	;volatile
  4932  024C                     l4089:	
  4933                           
  4934                           ;DigitsDriver.c: 205: RG0=DIGIT[x2][3];
  4935  024C  3007               	movlw	7
  4936  024D  0021               	movlb	1	; select bank1
  4937  024E  00B2               	movwf	??_display^(0+128)
  4938  024F  0832               	movf	??_display^(0+128),w
  4939  0250  00A0               	movwf	___bmul@multiplicand^(0+128)
  4940  0251  0838               	movf	display@x2^(0+128),w
  4941  0252  3190  2054  3180   	fcall	___bmul
  4942  0255  3E03               	addlw	3
  4943  0256  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4944  0257  0086               	movwf	6
  4945  0258  3001               	movlw	1	; select bank3/4
  4946  0259  0087               	movwf	7
  4947  025A  1C01               	btfss	1,0
  4948  025B  2A5F               	goto	u7290
  4949  025C  0025               	movlb	5	; select bank5
  4950  025D  140D               	bsf	13,0	;volatile
  4951  025E  2A61               	goto	l4091
  4952  025F                     u7290:	
  4953  025F  0025               	movlb	5	; select bank5
  4954  0260  100D               	bcf	13,0	;volatile
  4955  0261                     l4091:	
  4956                           
  4957                           ;DigitsDriver.c: 206: RD0=DIGIT[x2][4];
  4958  0261  3007               	movlw	7
  4959  0262  0021               	movlb	1	; select bank1
  4960  0263  00B2               	movwf	??_display^(0+128)
  4961  0264  0832               	movf	??_display^(0+128),w
  4962  0265  00A0               	movwf	___bmul@multiplicand^(0+128)
  4963  0266  0838               	movf	display@x2^(0+128),w
  4964  0267  3190  2054  3180   	fcall	___bmul
  4965  026A  3E04               	addlw	4
  4966  026B  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4967  026C  0086               	movwf	6
  4968  026D  3001               	movlw	1	; select bank3/4
  4969  026E  0087               	movwf	7
  4970  026F  1C01               	btfss	1,0
  4971  0270  2A74               	goto	u7310
  4972  0271  0020               	movlb	0	; select bank0
  4973  0272  140F               	bsf	15,0	;volatile
  4974  0273  2A76               	goto	l4093
  4975  0274                     u7310:	
  4976  0274  0020               	movlb	0	; select bank0
  4977  0275  100F               	bcf	15,0	;volatile
  4978  0276                     l4093:	
  4979                           
  4980                           ;DigitsDriver.c: 207: RD2=DIGIT[x2][5];
  4981  0276  3007               	movlw	7
  4982  0277  0021               	movlb	1	; select bank1
  4983  0278  00B2               	movwf	??_display^(0+128)
  4984  0279  0832               	movf	??_display^(0+128),w
  4985  027A  00A0               	movwf	___bmul@multiplicand^(0+128)
  4986  027B  0838               	movf	display@x2^(0+128),w
  4987  027C  3190  2054  3180   	fcall	___bmul
  4988  027F  3E05               	addlw	5
  4989  0280  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  4990  0281  0086               	movwf	6
  4991  0282  3001               	movlw	1	; select bank3/4
  4992  0283  0087               	movwf	7
  4993  0284  1C01               	btfss	1,0
  4994  0285  2A89               	goto	u7330
  4995  0286  0020               	movlb	0	; select bank0
  4996  0287  150F               	bsf	15,2	;volatile
  4997  0288  2A8B               	goto	l4095
  4998  0289                     u7330:	
  4999  0289  0020               	movlb	0	; select bank0
  5000  028A  110F               	bcf	15,2	;volatile
  5001  028B                     l4095:	
  5002                           
  5003                           ;DigitsDriver.c: 208: RD1=DIGIT[x2][6];
  5004  028B  3007               	movlw	7
  5005  028C  0021               	movlb	1	; select bank1
  5006  028D  00B2               	movwf	??_display^(0+128)
  5007  028E  0832               	movf	??_display^(0+128),w
  5008  028F  00A0               	movwf	___bmul@multiplicand^(0+128)
  5009  0290  0838               	movf	display@x2^(0+128),w
  5010  0291  3190  2054  3180   	fcall	___bmul
  5011  0294  3E06               	addlw	6
  5012  0295  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5013  0296  0086               	movwf	6
  5014  0297  3001               	movlw	1	; select bank3/4
  5015  0298  0087               	movwf	7
  5016  0299  1C01               	btfss	1,0
  5017  029A  2A9E               	goto	u7350
  5018  029B  0020               	movlb	0	; select bank0
  5019  029C  148F               	bsf	15,1	;volatile
  5020  029D  2AA0               	goto	l4097
  5021  029E                     u7350:	
  5022  029E  0020               	movlb	0	; select bank0
  5023  029F  108F               	bcf	15,1	;volatile
  5024  02A0                     l4097:	
  5025                           
  5026                           ;DigitsDriver.c: 210: RE1=DIGIT[x3][0];
  5027  02A0  3007               	movlw	7
  5028  02A1  0021               	movlb	1	; select bank1
  5029  02A2  00B2               	movwf	??_display^(0+128)
  5030  02A3  0832               	movf	??_display^(0+128),w
  5031  02A4  00A0               	movwf	___bmul@multiplicand^(0+128)
  5032  02A5  083A               	movf	display@x3^(0+128),w
  5033  02A6  3190  2054  3180   	fcall	___bmul
  5034  02A9  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5035  02AA  0086               	movwf	6
  5036  02AB  3001               	movlw	1	; select bank3/4
  5037  02AC  0087               	movwf	7
  5038  02AD  1C01               	btfss	1,0
  5039  02AE  2AB2               	goto	u7370
  5040  02AF  0020               	movlb	0	; select bank0
  5041  02B0  1490               	bsf	16,1	;volatile
  5042  02B1  2AB4               	goto	l4099
  5043  02B2                     u7370:	
  5044  02B2  0020               	movlb	0	; select bank0
  5045  02B3  1090               	bcf	16,1	;volatile
  5046  02B4                     l4099:	
  5047                           
  5048                           ;DigitsDriver.c: 211: RE2=DIGIT[x3][1];
  5049  02B4  3007               	movlw	7
  5050  02B5  0021               	movlb	1	; select bank1
  5051  02B6  00B2               	movwf	??_display^(0+128)
  5052  02B7  0832               	movf	??_display^(0+128),w
  5053  02B8  00A0               	movwf	___bmul@multiplicand^(0+128)
  5054  02B9  083A               	movf	display@x3^(0+128),w
  5055  02BA  3190  2054  3180   	fcall	___bmul
  5056  02BD  3E01               	addlw	1
  5057  02BE  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5058  02BF  0086               	movwf	6
  5059  02C0  3001               	movlw	1	; select bank3/4
  5060  02C1  0087               	movwf	7
  5061  02C2  1C01               	btfss	1,0
  5062  02C3  2AC7               	goto	u7390
  5063  02C4  0020               	movlb	0	; select bank0
  5064  02C5  1510               	bsf	16,2	;volatile
  5065  02C6  2AC9               	goto	l4101
  5066  02C7                     u7390:	
  5067  02C7  0020               	movlb	0	; select bank0
  5068  02C8  1110               	bcf	16,2	;volatile
  5069  02C9                     l4101:	
  5070                           
  5071                           ;DigitsDriver.c: 212: RE0=DIGIT[x3][2];
  5072  02C9  3007               	movlw	7
  5073  02CA  0021               	movlb	1	; select bank1
  5074  02CB  00B2               	movwf	??_display^(0+128)
  5075  02CC  0832               	movf	??_display^(0+128),w
  5076  02CD  00A0               	movwf	___bmul@multiplicand^(0+128)
  5077  02CE  083A               	movf	display@x3^(0+128),w
  5078  02CF  3190  2054  3180   	fcall	___bmul
  5079  02D2  3E02               	addlw	2
  5080  02D3  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5081  02D4  0086               	movwf	6
  5082  02D5  3001               	movlw	1	; select bank3/4
  5083  02D6  0087               	movwf	7
  5084  02D7  1C01               	btfss	1,0
  5085  02D8  2ADC               	goto	u7410
  5086  02D9  0020               	movlb	0	; select bank0
  5087  02DA  1410               	bsf	16,0	;volatile
  5088  02DB  2ADE               	goto	l4103
  5089  02DC                     u7410:	
  5090  02DC  0020               	movlb	0	; select bank0
  5091  02DD  1010               	bcf	16,0	;volatile
  5092  02DE                     l4103:	
  5093                           
  5094                           ;DigitsDriver.c: 213: RE3=DIGIT[x3][3];
  5095  02DE  3007               	movlw	7
  5096  02DF  0021               	movlb	1	; select bank1
  5097  02E0  00B2               	movwf	??_display^(0+128)
  5098  02E1  0832               	movf	??_display^(0+128),w
  5099  02E2  00A0               	movwf	___bmul@multiplicand^(0+128)
  5100  02E3  083A               	movf	display@x3^(0+128),w
  5101  02E4  3190  2054  3180   	fcall	___bmul
  5102  02E7  3E03               	addlw	3
  5103  02E8  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5104  02E9  0086               	movwf	6
  5105  02EA  3001               	movlw	1	; select bank3/4
  5106  02EB  0087               	movwf	7
  5107  02EC  1C01               	btfss	1,0
  5108  02ED  2AF1               	goto	u7430
  5109  02EE  0020               	movlb	0	; select bank0
  5110  02EF  1590               	bsf	16,3	;volatile
  5111  02F0  2AF3               	goto	l4105
  5112  02F1                     u7430:	
  5113  02F1  0020               	movlb	0	; select bank0
  5114  02F2  1190               	bcf	16,3	;volatile
  5115  02F3                     l4105:	
  5116                           
  5117                           ;DigitsDriver.c: 214: RE4=DIGIT[x3][4];
  5118  02F3  3007               	movlw	7
  5119  02F4  0021               	movlb	1	; select bank1
  5120  02F5  00B2               	movwf	??_display^(0+128)
  5121  02F6  0832               	movf	??_display^(0+128),w
  5122  02F7  00A0               	movwf	___bmul@multiplicand^(0+128)
  5123  02F8  083A               	movf	display@x3^(0+128),w
  5124  02F9  3190  2054  3180   	fcall	___bmul
  5125  02FC  3E04               	addlw	4
  5126  02FD  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5127  02FE  0086               	movwf	6
  5128  02FF  3001               	movlw	1	; select bank3/4
  5129  0300  0087               	movwf	7
  5130  0301  1C01               	btfss	1,0
  5131  0302  2B06               	goto	u7450
  5132  0303  0020               	movlb	0	; select bank0
  5133  0304  1610               	bsf	16,4	;volatile
  5134  0305  2B08               	goto	l4107
  5135  0306                     u7450:	
  5136  0306  0020               	movlb	0	; select bank0
  5137  0307  1210               	bcf	16,4	;volatile
  5138  0308                     l4107:	
  5139                           
  5140                           ;DigitsDriver.c: 215: RE6=DIGIT[x3][5];
  5141  0308  3007               	movlw	7
  5142  0309  0021               	movlb	1	; select bank1
  5143  030A  00B2               	movwf	??_display^(0+128)
  5144  030B  0832               	movf	??_display^(0+128),w
  5145  030C  00A0               	movwf	___bmul@multiplicand^(0+128)
  5146  030D  083A               	movf	display@x3^(0+128),w
  5147  030E  3190  2054  3180   	fcall	___bmul
  5148  0311  3E05               	addlw	5
  5149  0312  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5150  0313  0086               	movwf	6
  5151  0314  3001               	movlw	1	; select bank3/4
  5152  0315  0087               	movwf	7
  5153  0316  1C01               	btfss	1,0
  5154  0317  2B1B               	goto	u7470
  5155  0318  0020               	movlb	0	; select bank0
  5156  0319  1710               	bsf	16,6	;volatile
  5157  031A  2B1D               	goto	l4109
  5158  031B                     u7470:	
  5159  031B  0020               	movlb	0	; select bank0
  5160  031C  1310               	bcf	16,6	;volatile
  5161  031D                     l4109:	
  5162                           
  5163                           ;DigitsDriver.c: 216: RE5=DIGIT[x3][6];
  5164  031D  3007               	movlw	7
  5165  031E  0021               	movlb	1	; select bank1
  5166  031F  00B2               	movwf	??_display^(0+128)
  5167  0320  0832               	movf	??_display^(0+128),w
  5168  0321  00A0               	movwf	___bmul@multiplicand^(0+128)
  5169  0322  083A               	movf	display@x3^(0+128),w
  5170  0323  3190  2054  3180   	fcall	___bmul
  5171  0326  3E06               	addlw	6
  5172  0327  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
  5173  0328  0086               	movwf	6
  5174  0329  3001               	movlw	1	; select bank3/4
  5175  032A  0087               	movwf	7
  5176  032B  1C01               	btfss	1,0
  5177  032C  2B30               	goto	u7490
  5178  032D  0020               	movlb	0	; select bank0
  5179  032E  1690               	bsf	16,5	;volatile
  5180  032F  2B32               	goto	l4111
  5181  0330                     u7490:	
  5182  0330  0020               	movlb	0	; select bank0
  5183  0331  1290               	bcf	16,5	;volatile
  5184  0332                     l4111:	
  5185                           
  5186                           ;DigitsDriver.c: 218: if(neg)
  5187  0332  0021               	movlb	1	; select bank1
  5188  0333  0833               	movf	display@neg^(0+128),w
  5189  0334  1903               	btfsc	3,2
  5190  0335  0008               	return
  5191                           
  5192                           ;DigitsDriver.c: 219: RE3=1;
  5193  0336  0020               	movlb	0	; select bank0
  5194  0337  1590               	bsf	16,3	;volatile
  5195  0338  0008               	return
  5196  0339                     __end_of_display:	
  5197                           
  5198                           	psect	text6
  5199  1054                     __ptext6:	
  5200 ;; *************** function ___bmul *****************
  5201 ;; Defined at:
  5202 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul8.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  multiplier      1    wreg     unsigned char 
  5205 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  multiplier      1    3[BANK1 ] unsigned char 
  5208 ;;  product         1    2[BANK1 ] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      unsigned char 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5218 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;Total ram usage:        4 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    6
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_display
  5229 ;;		i1_display
  5230 ;;		_dispshift
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function ___bmul
  5236  1054                     ___bmul:	
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5240                           ;___bmul@multiplier stored from wreg
  5241  1054  0021               	movlb	1	; select bank1
  5242  1055  00A3               	movwf	___bmul@multiplier^(0+128)
  5243  1056  01A2               	clrf	___bmul@product^(0+128)
  5244  1057                     l3877:	
  5245  1057  1C23               	btfss	___bmul@multiplier^(0+128),0
  5246  1058  285D               	goto	l3881
  5247  1059  0820               	movf	___bmul@multiplicand^(0+128),w
  5248  105A  00A1               	movwf	??___bmul^(0+128)
  5249  105B  0821               	movf	??___bmul^(0+128),w
  5250  105C  07A2               	addwf	___bmul@product^(0+128),f
  5251  105D                     l3881:	
  5252  105D  1003               	clrc
  5253  105E  0DA0               	rlf	___bmul@multiplicand^(0+128),f
  5254  105F  1003               	clrc
  5255  1060  0CA3               	rrf	___bmul@multiplier^(0+128),f
  5256  1061  0823               	movf	___bmul@multiplier^(0+128),w
  5257  1062  1D03               	btfss	3,2
  5258  1063  2857               	goto	l3877
  5259  1064  0822               	movf	___bmul@product^(0+128),w
  5260  1065  0008               	return
  5261  1066                     __end_of___bmul:	
  5262                           
  5263                           	psect	text7
  5264  134B                     __ptext7:	
  5265 ;; *************** function ___awmod *****************
  5266 ;; Defined at:
  5267 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awmod.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  divisor         2    0[BANK1 ] int 
  5270 ;;  dividend        2    2[BANK1 ] int 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  sign            1    6[BANK1 ] unsigned char 
  5273 ;;  counter         1    5[BANK1 ] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  2    0[BANK1 ] int 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5283 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;Total ram usage:        7 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    6
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_display
  5294 ;;		_dispshift
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function ___awmod
  5300  134B                     ___awmod:	
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5304  134B  0021               	movlb	1	; select bank1
  5305  134C  01A6               	clrf	___awmod@sign^(0+128)
  5306  134D  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  5307  134E  2B56               	goto	l3941
  5308  134F  09A2               	comf	___awmod@dividend^(0+128),f
  5309  1350  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  5310  1351  0AA2               	incf	___awmod@dividend^(0+128),f
  5311  1352  1903               	skipnz
  5312  1353  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  5313  1354  01A6               	clrf	___awmod@sign^(0+128)
  5314  1355  0AA6               	incf	___awmod@sign^(0+128),f
  5315  1356                     l3941:	
  5316  1356  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  5317  1357  2B5D               	goto	l3945
  5318  1358  09A0               	comf	___awmod@divisor^(0+128),f
  5319  1359  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  5320  135A  0AA0               	incf	___awmod@divisor^(0+128),f
  5321  135B  1903               	skipnz
  5322  135C  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  5323  135D                     l3945:	
  5324  135D  0820               	movf	___awmod@divisor^(0+128),w
  5325  135E  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  5326  135F  1903               	btfsc	3,2
  5327  1360  2B84               	goto	l3963
  5328  1361  01A5               	clrf	___awmod@counter^(0+128)
  5329  1362  0AA5               	incf	___awmod@counter^(0+128),f
  5330  1363                     l3953:	
  5331  1363  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
  5332  1364  2B6F               	goto	l3955
  5333  1365  3001               	movlw	1
  5334  1366                     u6795:	
  5335  1366  35A0               	lslf	___awmod@divisor^(0+128),f
  5336  1367  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  5337  1368  0B89               	decfsz	9,f
  5338  1369  2B66               	goto	u6795
  5339  136A  3001               	movlw	1
  5340  136B  00A4               	movwf	??___awmod^(0+128)
  5341  136C  0824               	movf	??___awmod^(0+128),w
  5342  136D  07A5               	addwf	___awmod@counter^(0+128),f
  5343  136E  2B63               	goto	l3953
  5344  136F                     l3955:	
  5345  136F  0821               	movf	(___awmod@divisor+1)^(0+128),w
  5346  1370  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  5347  1371  1D03               	skipz
  5348  1372  2B75               	goto	u6815
  5349  1373  0820               	movf	___awmod@divisor^(0+128),w
  5350  1374  0222               	subwf	___awmod@dividend^(0+128),w
  5351  1375                     u6815:	
  5352  1375  1C03               	skipc
  5353  1376  2B7B               	goto	l3959
  5354  1377  0820               	movf	___awmod@divisor^(0+128),w
  5355  1378  02A2               	subwf	___awmod@dividend^(0+128),f
  5356  1379  0821               	movf	(___awmod@divisor+1)^(0+128),w
  5357  137A  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  5358  137B                     l3959:	
  5359  137B  3001               	movlw	1
  5360  137C                     u6825:	
  5361  137C  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  5362  137D  0CA0               	rrf	___awmod@divisor^(0+128),f
  5363  137E  0B89               	decfsz	9,f
  5364  137F  2B7C               	goto	u6825
  5365  1380  3001               	movlw	1
  5366  1381  02A5               	subwf	___awmod@counter^(0+128),f
  5367  1382  1D03               	btfss	3,2
  5368  1383  2B6F               	goto	l3955
  5369  1384                     l3963:	
  5370  1384  0826               	movf	___awmod@sign^(0+128),w
  5371  1385  1903               	btfsc	3,2
  5372  1386  2B8C               	goto	l3967
  5373  1387  09A2               	comf	___awmod@dividend^(0+128),f
  5374  1388  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  5375  1389  0AA2               	incf	___awmod@dividend^(0+128),f
  5376  138A  1903               	skipnz
  5377  138B  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  5378  138C                     l3967:	
  5379  138C  0823               	movf	(___awmod@dividend+1)^(0+128),w
  5380  138D  00A1               	movwf	(?___awmod+1)^(0+128)
  5381  138E  0822               	movf	___awmod@dividend^(0+128),w
  5382  138F  00A0               	movwf	?___awmod^(0+128)
  5383  1390  0008               	return
  5384  1391                     __end_of___awmod:	
  5385                           
  5386                           	psect	text8
  5387  1479                     __ptext8:	
  5388 ;; *************** function ___awdiv *****************
  5389 ;; Defined at:
  5390 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awdiv.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  divisor         2    7[BANK1 ] int 
  5393 ;;  dividend        2    9[BANK1 ] int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  quotient        2   14[BANK1 ] int 
  5396 ;;  sign            1   13[BANK1 ] unsigned char 
  5397 ;;  counter         1   12[BANK1 ] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  2    7[BANK1 ] int 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5407 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;Total ram usage:        9 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    6
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_main
  5418 ;;		_display
  5419 ;;		_dispshift
  5420 ;;		_LIS3MDL_selfTest
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function ___awdiv
  5426  1479                     ___awdiv:	
  5427                           
  5428                           ;incstack = 0
  5429                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5430  1479  0021               	movlb	1	; select bank1
  5431  147A  01AD               	clrf	___awdiv@sign^(0+128)
  5432  147B  1FA8               	btfss	(___awdiv@divisor+1)^(0+128),7
  5433  147C  2C84               	goto	l3897
  5434  147D  09A7               	comf	___awdiv@divisor^(0+128),f
  5435  147E  09A8               	comf	(___awdiv@divisor+1)^(0+128),f
  5436  147F  0AA7               	incf	___awdiv@divisor^(0+128),f
  5437  1480  1903               	skipnz
  5438  1481  0AA8               	incf	(___awdiv@divisor+1)^(0+128),f
  5439  1482  01AD               	clrf	___awdiv@sign^(0+128)
  5440  1483  0AAD               	incf	___awdiv@sign^(0+128),f
  5441  1484                     l3897:	
  5442  1484  1FAA               	btfss	(___awdiv@dividend+1)^(0+128),7
  5443  1485  2C8F               	goto	l3903
  5444  1486  09A9               	comf	___awdiv@dividend^(0+128),f
  5445  1487  09AA               	comf	(___awdiv@dividend+1)^(0+128),f
  5446  1488  0AA9               	incf	___awdiv@dividend^(0+128),f
  5447  1489  1903               	skipnz
  5448  148A  0AAA               	incf	(___awdiv@dividend+1)^(0+128),f
  5449  148B  3001               	movlw	1
  5450  148C  00AB               	movwf	??___awdiv^(0+128)
  5451  148D  082B               	movf	??___awdiv^(0+128),w
  5452  148E  06AD               	xorwf	___awdiv@sign^(0+128),f
  5453  148F                     l3903:	
  5454  148F  01AE               	clrf	___awdiv@quotient^(0+128)
  5455  1490  01AF               	clrf	(___awdiv@quotient+1)^(0+128)
  5456  1491  0827               	movf	___awdiv@divisor^(0+128),w
  5457  1492  0428               	iorwf	(___awdiv@divisor+1)^(0+128),w
  5458  1493  1903               	btfsc	3,2
  5459  1494  2CBE               	goto	l3925
  5460  1495  01AC               	clrf	___awdiv@counter^(0+128)
  5461  1496  0AAC               	incf	___awdiv@counter^(0+128),f
  5462  1497                     l3913:	
  5463  1497  1BA8               	btfsc	(___awdiv@divisor+1)^(0+128),7
  5464  1498  2CA3               	goto	l3915
  5465  1499  3001               	movlw	1
  5466  149A                     u6695:	
  5467  149A  35A7               	lslf	___awdiv@divisor^(0+128),f
  5468  149B  0DA8               	rlf	(___awdiv@divisor+1)^(0+128),f
  5469  149C  0B89               	decfsz	9,f
  5470  149D  2C9A               	goto	u6695
  5471  149E  3001               	movlw	1
  5472  149F  00AB               	movwf	??___awdiv^(0+128)
  5473  14A0  082B               	movf	??___awdiv^(0+128),w
  5474  14A1  07AC               	addwf	___awdiv@counter^(0+128),f
  5475  14A2  2C97               	goto	l3913
  5476  14A3                     l3915:	
  5477  14A3  3001               	movlw	1
  5478  14A4                     u6715:	
  5479  14A4  35AE               	lslf	___awdiv@quotient^(0+128),f
  5480  14A5  0DAF               	rlf	(___awdiv@quotient+1)^(0+128),f
  5481  14A6  0B89               	decfsz	9,f
  5482  14A7  2CA4               	goto	u6715
  5483  14A8  0828               	movf	(___awdiv@divisor+1)^(0+128),w
  5484  14A9  022A               	subwf	(___awdiv@dividend+1)^(0+128),w
  5485  14AA  1D03               	skipz
  5486  14AB  2CAE               	goto	u6725
  5487  14AC  0827               	movf	___awdiv@divisor^(0+128),w
  5488  14AD  0229               	subwf	___awdiv@dividend^(0+128),w
  5489  14AE                     u6725:	
  5490  14AE  1C03               	skipc
  5491  14AF  2CB5               	goto	l3921
  5492  14B0  0827               	movf	___awdiv@divisor^(0+128),w
  5493  14B1  02A9               	subwf	___awdiv@dividend^(0+128),f
  5494  14B2  0828               	movf	(___awdiv@divisor+1)^(0+128),w
  5495  14B3  3BAA               	subwfb	(___awdiv@dividend+1)^(0+128),f
  5496  14B4  142E               	bsf	___awdiv@quotient^(0+128),0
  5497  14B5                     l3921:	
  5498  14B5  3001               	movlw	1
  5499  14B6                     u6735:	
  5500  14B6  36A8               	lsrf	(___awdiv@divisor+1)^(0+128),f
  5501  14B7  0CA7               	rrf	___awdiv@divisor^(0+128),f
  5502  14B8  0B89               	decfsz	9,f
  5503  14B9  2CB6               	goto	u6735
  5504  14BA  3001               	movlw	1
  5505  14BB  02AC               	subwf	___awdiv@counter^(0+128),f
  5506  14BC  1D03               	btfss	3,2
  5507  14BD  2CA3               	goto	l3915
  5508  14BE                     l3925:	
  5509  14BE  082D               	movf	___awdiv@sign^(0+128),w
  5510  14BF  1903               	btfsc	3,2
  5511  14C0  2CC6               	goto	l3929
  5512  14C1  09AE               	comf	___awdiv@quotient^(0+128),f
  5513  14C2  09AF               	comf	(___awdiv@quotient+1)^(0+128),f
  5514  14C3  0AAE               	incf	___awdiv@quotient^(0+128),f
  5515  14C4  1903               	skipnz
  5516  14C5  0AAF               	incf	(___awdiv@quotient+1)^(0+128),f
  5517  14C6                     l3929:	
  5518  14C6  082F               	movf	(___awdiv@quotient+1)^(0+128),w
  5519  14C7  00A8               	movwf	(?___awdiv+1)^(0+128)
  5520  14C8  082E               	movf	___awdiv@quotient^(0+128),w
  5521  14C9  00A7               	movwf	?___awdiv^(0+128)
  5522  14CA  0008               	return
  5523  14CB                     __end_of___awdiv:	
  5524                           
  5525                           	psect	text9
  5526  1205                     __ptext9:	
  5527 ;; *************** function _argXY *****************
  5528 ;; Defined at:
  5529 ;;		line 201 in file "LIS3MDL.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  3   76[BANK1 ] int 
  5536 ;; Registers used:
  5537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5543 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;Total ram usage:        3 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:   11
  5550 ;; This function calls:
  5551 ;;		___awtoft
  5552 ;;		_atan2
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _argXY
  5560  1205                     _argXY:	
  5561                           
  5562                           ;LIS3MDL.c: 203: return (atan2((double)vX,(double)vY));
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in _argXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5566  1205  0022               	movlb	2	; select bank2
  5567  1206  0866               	movf	(_vX+1)^(0+256),w
  5568  1207  0021               	movlb	1	; select bank1
  5569  1208  00A9               	movwf	(___awtoft@c+1)^(0+128)
  5570  1209  0022               	movlb	2	; select bank2
  5571  120A  0865               	movf	_vX^(0+256),w
  5572  120B  0021               	movlb	1	; select bank1
  5573  120C  00A8               	movwf	___awtoft@c^(0+128)
  5574  120D  3191  210B  3192   	fcall	___awtoft
  5575  1210  0021               	movlb	1	; select bank1
  5576  1211  0828               	movf	?___awtoft^(0+128),w
  5577  1212  00E6               	movwf	atan2@y^(0+128)
  5578  1213  0829               	movf	(?___awtoft+1)^(0+128),w
  5579  1214  00E7               	movwf	(atan2@y+1)^(0+128)
  5580  1215  082A               	movf	(?___awtoft+2)^(0+128),w
  5581  1216  00E8               	movwf	(atan2@y+2)^(0+128)
  5582  1217  0022               	movlb	2	; select bank2
  5583  1218  0868               	movf	(_vY+1)^(0+256),w
  5584  1219  0021               	movlb	1	; select bank1
  5585  121A  00A9               	movwf	(___awtoft@c+1)^(0+128)
  5586  121B  0022               	movlb	2	; select bank2
  5587  121C  0867               	movf	_vY^(0+256),w
  5588  121D  0021               	movlb	1	; select bank1
  5589  121E  00A8               	movwf	___awtoft@c^(0+128)
  5590  121F  3191  210B  3192   	fcall	___awtoft
  5591  1222  0021               	movlb	1	; select bank1
  5592  1223  0828               	movf	?___awtoft^(0+128),w
  5593  1224  00E9               	movwf	atan2@x^(0+128)
  5594  1225  0829               	movf	(?___awtoft+1)^(0+128),w
  5595  1226  00EA               	movwf	(atan2@x+1)^(0+128)
  5596  1227  082A               	movf	(?___awtoft+2)^(0+128),w
  5597  1228  00EB               	movwf	(atan2@x+2)^(0+128)
  5598  1229  3185  25FB         	fcall	_atan2
  5599  122B  0021               	movlb	1	; select bank1
  5600  122C  0866               	movf	?_atan2^(0+128),w
  5601  122D  00EC               	movwf	?_argXY^(0+128)
  5602  122E  0867               	movf	(?_atan2+1)^(0+128),w
  5603  122F  00ED               	movwf	(?_argXY+1)^(0+128)
  5604  1230  0868               	movf	(?_atan2+2)^(0+128),w
  5605  1231  00EE               	movwf	(?_argXY+2)^(0+128)
  5606  1232  0008               	return
  5607  1233                     __end_of_argXY:	
  5608                           
  5609                           	psect	text10
  5610  05FB                     __ptext10:	
  5611 ;; *************** function _atan2 *****************
  5612 ;; Defined at:
  5613 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/atan2.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  y               3   70[BANK1 ] int 
  5616 ;;  x               3   73[BANK1 ] int 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  v               3   25[BANK2 ] int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  3   70[BANK1 ] int 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5628 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Totals:         0       0       6      15       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;Total ram usage:       21 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:   10
  5635 ;; This function calls:
  5636 ;;		___ftadd
  5637 ;;		___ftdiv
  5638 ;;		___ftge
  5639 ;;		___ftneg
  5640 ;;		___ftsub
  5641 ;;		_atan
  5642 ;;		_fabs
  5643 ;; This function is called by:
  5644 ;;		_argXY
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _atan2
  5650  05FB                     _atan2:	
  5651                           
  5652                           ;incstack = 0
  5653                           ; Regs used in _atan2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5654  05FB  0021               	movlb	1	; select bank1
  5655  05FC  086B               	movf	(atan2@x+2)^(0+128),w
  5656  05FD  046A               	iorwf	(atan2@x+1)^(0+128),w
  5657  05FE  0469               	iorwf	atan2@x^(0+128),w
  5658  05FF  1D03               	skipz
  5659  0600  2E34               	goto	l3763
  5660  0601  0868               	movf	(atan2@y+2)^(0+128),w
  5661  0602  0467               	iorwf	(atan2@y+1)^(0+128),w
  5662  0603  0466               	iorwf	atan2@y^(0+128),w
  5663  0604  1D03               	skipz
  5664  0605  2E13               	goto	l3751
  5665  0606  3021               	movlw	33
  5666  0607  0022               	movlb	2	; select bank2
  5667  0608  00E3               	movwf	_errno^(0+256)
  5668  0609  3000               	movlw	0
  5669  060A  00E4               	movwf	(_errno^(0+256)+1)
  5670  060B  3000               	movlw	0
  5671  060C  0021               	movlb	1	; select bank1
  5672  060D  00E6               	movwf	?_atan2^(0+128)
  5673  060E  3000               	movlw	0
  5674  060F  00E7               	movwf	(?_atan2+1)^(0+128)
  5675  0610  3000               	movlw	0
  5676  0611  00E8               	movwf	(?_atan2+2)^(0+128)
  5677  0612  0008               	return
  5678  0613                     l3751:	
  5679  0613  3000               	movlw	0
  5680  0614  00A0               	movwf	___ftge@ff1^(0+128)
  5681  0615  3000               	movlw	0
  5682  0616  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  5683  0617  3000               	movlw	0
  5684  0618  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  5685  0619  0866               	movf	atan2@y^(0+128),w
  5686  061A  00A3               	movwf	___ftge@ff2^(0+128)
  5687  061B  0867               	movf	(atan2@y+1)^(0+128),w
  5688  061C  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  5689  061D  0868               	movf	(atan2@y+2)^(0+128),w
  5690  061E  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  5691  061F  3192  22CA  3185   	fcall	___ftge
  5692  0622  1803               	btfsc	3,0
  5693  0623  2E2C               	goto	l3759
  5694  0624  3010               	movlw	16
  5695  0625  0021               	movlb	1	; select bank1
  5696  0626  00E6               	movwf	?_atan2^(0+128)
  5697  0627  30C9               	movlw	201
  5698  0628  00E7               	movwf	(?_atan2+1)^(0+128)
  5699  0629  303F               	movlw	63
  5700  062A  00E8               	movwf	(?_atan2+2)^(0+128)
  5701  062B  0008               	return
  5702  062C                     l3759:	
  5703  062C  3010               	movlw	16
  5704  062D  0021               	movlb	1	; select bank1
  5705  062E  00E6               	movwf	?_atan2^(0+128)
  5706  062F  30C9               	movlw	201
  5707  0630  00E7               	movwf	(?_atan2+1)^(0+128)
  5708  0631  30BF               	movlw	191
  5709  0632  00E8               	movwf	(?_atan2+2)^(0+128)
  5710  0633  0008               	return
  5711  0634                     l3763:	
  5712  0634  0868               	movf	(atan2@y+2)^(0+128),w
  5713  0635  0467               	iorwf	(atan2@y+1)^(0+128),w
  5714  0636  0466               	iorwf	atan2@y^(0+128),w
  5715  0637  1D03               	skipz
  5716  0638  2E5A               	goto	l3777
  5717  0639  3000               	movlw	0
  5718  063A  00A0               	movwf	___ftge@ff1^(0+128)
  5719  063B  3000               	movlw	0
  5720  063C  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  5721  063D  3000               	movlw	0
  5722  063E  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  5723  063F  0869               	movf	atan2@x^(0+128),w
  5724  0640  00A3               	movwf	___ftge@ff2^(0+128)
  5725  0641  086A               	movf	(atan2@x+1)^(0+128),w
  5726  0642  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  5727  0643  086B               	movf	(atan2@x+2)^(0+128),w
  5728  0644  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  5729  0645  3192  22CA  3185   	fcall	___ftge
  5730  0648  1803               	btfsc	3,0
  5731  0649  2E52               	goto	l3773
  5732  064A  3000               	movlw	0
  5733  064B  0021               	movlb	1	; select bank1
  5734  064C  00E6               	movwf	?_atan2^(0+128)
  5735  064D  3000               	movlw	0
  5736  064E  00E7               	movwf	(?_atan2+1)^(0+128)
  5737  064F  3000               	movlw	0
  5738  0650  00E8               	movwf	(?_atan2+2)^(0+128)
  5739  0651  0008               	return
  5740  0652                     l3773:	
  5741  0652  3010               	movlw	16
  5742  0653  0021               	movlb	1	; select bank1
  5743  0654  00E6               	movwf	?_atan2^(0+128)
  5744  0655  3049               	movlw	73
  5745  0656  00E7               	movwf	(?_atan2+1)^(0+128)
  5746  0657  3040               	movlw	64
  5747  0658  00E8               	movwf	(?_atan2+2)^(0+128)
  5748  0659  0008               	return
  5749  065A                     l3777:	
  5750  065A  0869               	movf	atan2@x^(0+128),w
  5751  065B  00BB               	movwf	fabs@d^(0+128)
  5752  065C  086A               	movf	(atan2@x+1)^(0+128),w
  5753  065D  00BC               	movwf	(fabs@d+1)^(0+128)
  5754  065E  086B               	movf	(atan2@x+2)^(0+128),w
  5755  065F  00BD               	movwf	(fabs@d+2)^(0+128)
  5756  0660  3191  2173  3185   	fcall	_fabs
  5757  0663  0021               	movlb	1	; select bank1
  5758  0664  083B               	movf	?_fabs^(0+128),w
  5759  0665  0022               	movlb	2	; select bank2
  5760  0666  00AD               	movwf	_atan2$1141^(0+256)
  5761  0667  0021               	movlb	1	; select bank1
  5762  0668  083C               	movf	(?_fabs+1)^(0+128),w
  5763  0669  0022               	movlb	2	; select bank2
  5764  066A  00AE               	movwf	(_atan2$1141+1)^(0+256)
  5765  066B  0021               	movlb	1	; select bank1
  5766  066C  083D               	movf	(?_fabs+2)^(0+128),w
  5767  066D  0022               	movlb	2	; select bank2
  5768  066E  00AF               	movwf	(_atan2$1141+2)^(0+256)
  5769  066F  0021               	movlb	1	; select bank1
  5770  0670  0866               	movf	atan2@y^(0+128),w
  5771  0671  00BB               	movwf	fabs@d^(0+128)
  5772  0672  0867               	movf	(atan2@y+1)^(0+128),w
  5773  0673  00BC               	movwf	(fabs@d+1)^(0+128)
  5774  0674  0868               	movf	(atan2@y+2)^(0+128),w
  5775  0675  00BD               	movwf	(fabs@d+2)^(0+128)
  5776  0676  3191  2173  3185   	fcall	_fabs
  5777  0679  0021               	movlb	1	; select bank1
  5778  067A  083B               	movf	?_fabs^(0+128),w
  5779  067B  0022               	movlb	2	; select bank2
  5780  067C  00B0               	movwf	_atan2$1142^(0+256)
  5781  067D  0021               	movlb	1	; select bank1
  5782  067E  083C               	movf	(?_fabs+1)^(0+128),w
  5783  067F  0022               	movlb	2	; select bank2
  5784  0680  00B1               	movwf	(_atan2$1142+1)^(0+256)
  5785  0681  0021               	movlb	1	; select bank1
  5786  0682  083D               	movf	(?_fabs+2)^(0+128),w
  5787  0683  0022               	movlb	2	; select bank2
  5788  0684  00B2               	movwf	(_atan2$1142+2)^(0+256)
  5789  0685  082D               	movf	_atan2$1141^(0+256),w
  5790  0686  0021               	movlb	1	; select bank1
  5791  0687  00A0               	movwf	___ftge@ff1^(0+128)
  5792  0688  0022               	movlb	2	; select bank2
  5793  0689  082E               	movf	(_atan2$1141+1)^(0+256),w
  5794  068A  0021               	movlb	1	; select bank1
  5795  068B  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  5796  068C  0022               	movlb	2	; select bank2
  5797  068D  082F               	movf	(_atan2$1141+2)^(0+256),w
  5798  068E  0021               	movlb	1	; select bank1
  5799  068F  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  5800  0690  0022               	movlb	2	; select bank2
  5801  0691  0830               	movf	_atan2$1142^(0+256),w
  5802  0692  0021               	movlb	1	; select bank1
  5803  0693  00A3               	movwf	___ftge@ff2^(0+128)
  5804  0694  0022               	movlb	2	; select bank2
  5805  0695  0831               	movf	(_atan2$1142+1)^(0+256),w
  5806  0696  0021               	movlb	1	; select bank1
  5807  0697  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  5808  0698  0022               	movlb	2	; select bank2
  5809  0699  0832               	movf	(_atan2$1142+2)^(0+256),w
  5810  069A  0021               	movlb	1	; select bank1
  5811  069B  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  5812  069C  3192  22CA  3185   	fcall	___ftge
  5813  069F  1C03               	btfss	3,0
  5814  06A0  2F4A               	goto	l3795
  5815  06A1  0021               	movlb	1	; select bank1
  5816  06A2  0869               	movf	atan2@x^(0+128),w
  5817  06A3  00A8               	movwf	___ftdiv@f2^(0+128)
  5818  06A4  086A               	movf	(atan2@x+1)^(0+128),w
  5819  06A5  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  5820  06A6  086B               	movf	(atan2@x+2)^(0+128),w
  5821  06A7  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  5822  06A8  0866               	movf	atan2@y^(0+128),w
  5823  06A9  00AB               	movwf	___ftdiv@f1^(0+128)
  5824  06AA  0867               	movf	(atan2@y+1)^(0+128),w
  5825  06AB  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  5826  06AC  0868               	movf	(atan2@y+2)^(0+128),w
  5827  06AD  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  5828  06AE  3197  2757  3185   	fcall	___ftdiv
  5829  06B1  0021               	movlb	1	; select bank1
  5830  06B2  0828               	movf	?___ftdiv^(0+128),w
  5831  06B3  0022               	movlb	2	; select bank2
  5832  06B4  00B6               	movwf	_atan2$1143^(0+256)
  5833  06B5  0021               	movlb	1	; select bank1
  5834  06B6  0829               	movf	(?___ftdiv+1)^(0+128),w
  5835  06B7  0022               	movlb	2	; select bank2
  5836  06B8  00B7               	movwf	(_atan2$1143+1)^(0+256)
  5837  06B9  0021               	movlb	1	; select bank1
  5838  06BA  082A               	movf	(?___ftdiv+2)^(0+128),w
  5839  06BB  0022               	movlb	2	; select bank2
  5840  06BC  00B8               	movwf	(_atan2$1143+2)^(0+256)
  5841  06BD  0836               	movf	_atan2$1143^(0+256),w
  5842  06BE  0021               	movlb	1	; select bank1
  5843  06BF  00E2               	movwf	atan@f^(0+128)
  5844  06C0  0022               	movlb	2	; select bank2
  5845  06C1  0837               	movf	(_atan2$1143+1)^(0+256),w
  5846  06C2  0021               	movlb	1	; select bank1
  5847  06C3  00E3               	movwf	(atan@f+1)^(0+128)
  5848  06C4  0022               	movlb	2	; select bank2
  5849  06C5  0838               	movf	(_atan2$1143+2)^(0+256),w
  5850  06C6  0021               	movlb	1	; select bank1
  5851  06C7  00E4               	movwf	(atan@f+2)^(0+128)
  5852  06C8  318B  23F2  3185   	fcall	_atan
  5853  06CB  0021               	movlb	1	; select bank1
  5854  06CC  0862               	movf	?_atan^(0+128),w
  5855  06CD  0022               	movlb	2	; select bank2
  5856  06CE  00B9               	movwf	atan2@v^(0+256)
  5857  06CF  0021               	movlb	1	; select bank1
  5858  06D0  0863               	movf	(?_atan+1)^(0+128),w
  5859  06D1  0022               	movlb	2	; select bank2
  5860  06D2  00BA               	movwf	(atan2@v+1)^(0+256)
  5861  06D3  0021               	movlb	1	; select bank1
  5862  06D4  0864               	movf	(?_atan+2)^(0+128),w
  5863  06D5  0022               	movlb	2	; select bank2
  5864  06D6  00BB               	movwf	(atan2@v+2)^(0+256)
  5865  06D7  0021               	movlb	1	; select bank1
  5866  06D8  0869               	movf	atan2@x^(0+128),w
  5867  06D9  00A0               	movwf	___ftge@ff1^(0+128)
  5868  06DA  086A               	movf	(atan2@x+1)^(0+128),w
  5869  06DB  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  5870  06DC  086B               	movf	(atan2@x+2)^(0+128),w
  5871  06DD  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  5872  06DE  3000               	movlw	0
  5873  06DF  00A3               	movwf	___ftge@ff2^(0+128)
  5874  06E0  3000               	movlw	0
  5875  06E1  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  5876  06E2  3000               	movlw	0
  5877  06E3  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  5878  06E4  3192  22CA  3185   	fcall	___ftge
  5879  06E7  1803               	btfsc	3,0
  5880  06E8  2F3D               	goto	l3791
  5881  06E9  0021               	movlb	1	; select bank1
  5882  06EA  0866               	movf	atan2@y^(0+128),w
  5883  06EB  00A0               	movwf	___ftge@ff1^(0+128)
  5884  06EC  0867               	movf	(atan2@y+1)^(0+128),w
  5885  06ED  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  5886  06EE  0868               	movf	(atan2@y+2)^(0+128),w
  5887  06EF  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  5888  06F0  3000               	movlw	0
  5889  06F1  00A3               	movwf	___ftge@ff2^(0+128)
  5890  06F2  3000               	movlw	0
  5891  06F3  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  5892  06F4  3000               	movlw	0
  5893  06F5  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  5894  06F6  3192  22CA  3185   	fcall	___ftge
  5895  06F9  1C03               	btfss	3,0
  5896  06FA  2F1C               	goto	l3789
  5897  06FB  3010               	movlw	16
  5898  06FC  0021               	movlb	1	; select bank1
  5899  06FD  00BB               	movwf	___ftadd@f1^(0+128)
  5900  06FE  3049               	movlw	73
  5901  06FF  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  5902  0700  3040               	movlw	64
  5903  0701  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  5904  0702  0022               	movlb	2	; select bank2
  5905  0703  0839               	movf	atan2@v^(0+256),w
  5906  0704  0021               	movlb	1	; select bank1
  5907  0705  00BE               	movwf	___ftadd@f2^(0+128)
  5908  0706  0022               	movlb	2	; select bank2
  5909  0707  083A               	movf	(atan2@v+1)^(0+256),w
  5910  0708  0021               	movlb	1	; select bank1
  5911  0709  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  5912  070A  0022               	movlb	2	; select bank2
  5913  070B  083B               	movf	(atan2@v+2)^(0+256),w
  5914  070C  0021               	movlb	1	; select bank1
  5915  070D  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  5916  070E  3188  20D2  3185   	fcall	___ftadd
  5917  0711  0021               	movlb	1	; select bank1
  5918  0712  083B               	movf	?___ftadd^(0+128),w
  5919  0713  0022               	movlb	2	; select bank2
  5920  0714  00B9               	movwf	atan2@v^(0+256)
  5921  0715  0021               	movlb	1	; select bank1
  5922  0716  083C               	movf	(?___ftadd+1)^(0+128),w
  5923  0717  0022               	movlb	2	; select bank2
  5924  0718  00BA               	movwf	(atan2@v+1)^(0+256)
  5925  0719  0021               	movlb	1	; select bank1
  5926  071A  083D               	movf	(?___ftadd+2)^(0+128),w
  5927  071B  2F3B               	goto	L1
  5928  071C                     l3789:	
  5929  071C  3010               	movlw	16
  5930  071D  0021               	movlb	1	; select bank1
  5931  071E  00C8               	movwf	___ftsub@f2^(0+128)
  5932  071F  3049               	movlw	73
  5933  0720  00C9               	movwf	(___ftsub@f2+1)^(0+128)
  5934  0721  3040               	movlw	64
  5935  0722  00CA               	movwf	(___ftsub@f2+2)^(0+128)
  5936  0723  0022               	movlb	2	; select bank2
  5937  0724  0839               	movf	atan2@v^(0+256),w
  5938  0725  0021               	movlb	1	; select bank1
  5939  0726  00CB               	movwf	___ftsub@f1^(0+128)
  5940  0727  0022               	movlb	2	; select bank2
  5941  0728  083A               	movf	(atan2@v+1)^(0+256),w
  5942  0729  0021               	movlb	1	; select bank1
  5943  072A  00CC               	movwf	(___ftsub@f1+1)^(0+128)
  5944  072B  0022               	movlb	2	; select bank2
  5945  072C  083B               	movf	(atan2@v+2)^(0+256),w
  5946  072D  0021               	movlb	1	; select bank1
  5947  072E  00CD               	movwf	(___ftsub@f1+2)^(0+128)
  5948  072F  3188  2000         	fcall	___ftsub
  5949  0731  0021               	movlb	1	; select bank1
  5950  0732  0848               	movf	?___ftsub^(0+128),w
  5951  0733  0022               	movlb	2	; select bank2
  5952  0734  00B9               	movwf	atan2@v^(0+256)
  5953  0735  0021               	movlb	1	; select bank1
  5954  0736  0849               	movf	(?___ftsub+1)^(0+128),w
  5955  0737  0022               	movlb	2	; select bank2
  5956  0738  00BA               	movwf	(atan2@v+1)^(0+256)
  5957  0739  0021               	movlb	1	; select bank1
  5958  073A  084A               	movf	(?___ftsub+2)^(0+128),w
  5959  073B                     L1:	
  5960  073B  0022               	movlb	2	; select bank2
  5961  073C  00BB               	movwf	(atan2@v+2)^(0+256)
  5962  073D                     l3791:	
  5963  073D  0022               	movlb	2	; select bank2
  5964  073E  0839               	movf	atan2@v^(0+256),w
  5965  073F  0021               	movlb	1	; select bank1
  5966  0740  00E6               	movwf	?_atan2^(0+128)
  5967  0741  0022               	movlb	2	; select bank2
  5968  0742  083A               	movf	(atan2@v+1)^(0+256),w
  5969  0743  0021               	movlb	1	; select bank1
  5970  0744  00E7               	movwf	(?_atan2+1)^(0+128)
  5971  0745  0022               	movlb	2	; select bank2
  5972  0746  083B               	movf	(atan2@v+2)^(0+256),w
  5973  0747  0021               	movlb	1	; select bank1
  5974  0748  00E8               	movwf	(?_atan2+2)^(0+128)
  5975  0749  0008               	return
  5976  074A                     l3795:	
  5977  074A  0021               	movlb	1	; select bank1
  5978  074B  0869               	movf	atan2@x^(0+128),w
  5979  074C  00AB               	movwf	___ftdiv@f1^(0+128)
  5980  074D  086A               	movf	(atan2@x+1)^(0+128),w
  5981  074E  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  5982  074F  086B               	movf	(atan2@x+2)^(0+128),w
  5983  0750  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  5984  0751  0866               	movf	atan2@y^(0+128),w
  5985  0752  00A8               	movwf	___ftdiv@f2^(0+128)
  5986  0753  0867               	movf	(atan2@y+1)^(0+128),w
  5987  0754  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  5988  0755  0868               	movf	(atan2@y+2)^(0+128),w
  5989  0756  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  5990  0757  3197  2757  3185   	fcall	___ftdiv
  5991  075A  0021               	movlb	1	; select bank1
  5992  075B  0828               	movf	?___ftdiv^(0+128),w
  5993  075C  0022               	movlb	2	; select bank2
  5994  075D  00B6               	movwf	_atan2$1143^(0+256)
  5995  075E  0021               	movlb	1	; select bank1
  5996  075F  0829               	movf	(?___ftdiv+1)^(0+128),w
  5997  0760  0022               	movlb	2	; select bank2
  5998  0761  00B7               	movwf	(_atan2$1143+1)^(0+256)
  5999  0762  0021               	movlb	1	; select bank1
  6000  0763  082A               	movf	(?___ftdiv+2)^(0+128),w
  6001  0764  0022               	movlb	2	; select bank2
  6002  0765  00B8               	movwf	(_atan2$1143+2)^(0+256)
  6003  0766  0836               	movf	_atan2$1143^(0+256),w
  6004  0767  0021               	movlb	1	; select bank1
  6005  0768  00E2               	movwf	atan@f^(0+128)
  6006  0769  0022               	movlb	2	; select bank2
  6007  076A  0837               	movf	(_atan2$1143+1)^(0+256),w
  6008  076B  0021               	movlb	1	; select bank1
  6009  076C  00E3               	movwf	(atan@f+1)^(0+128)
  6010  076D  0022               	movlb	2	; select bank2
  6011  076E  0838               	movf	(_atan2$1143+2)^(0+256),w
  6012  076F  0021               	movlb	1	; select bank1
  6013  0770  00E4               	movwf	(atan@f+2)^(0+128)
  6014  0771  318B  23F2  3185   	fcall	_atan
  6015  0774  0021               	movlb	1	; select bank1
  6016  0775  0862               	movf	?_atan^(0+128),w
  6017  0776  0022               	movlb	2	; select bank2
  6018  0777  00B3               	movwf	_atan2$1144^(0+256)
  6019  0778  0021               	movlb	1	; select bank1
  6020  0779  0863               	movf	(?_atan+1)^(0+128),w
  6021  077A  0022               	movlb	2	; select bank2
  6022  077B  00B4               	movwf	(_atan2$1144+1)^(0+256)
  6023  077C  0021               	movlb	1	; select bank1
  6024  077D  0864               	movf	(?_atan+2)^(0+128),w
  6025  077E  0022               	movlb	2	; select bank2
  6026  077F  00B5               	movwf	(_atan2$1144+2)^(0+256)
  6027  0780  0833               	movf	_atan2$1144^(0+256),w
  6028  0781  0021               	movlb	1	; select bank1
  6029  0782  00B8               	movwf	___ftneg@f1^(0+128)
  6030  0783  0022               	movlb	2	; select bank2
  6031  0784  0834               	movf	(_atan2$1144+1)^(0+256),w
  6032  0785  0021               	movlb	1	; select bank1
  6033  0786  00B9               	movwf	(___ftneg@f1+1)^(0+128)
  6034  0787  0022               	movlb	2	; select bank2
  6035  0788  0835               	movf	(_atan2$1144+2)^(0+256),w
  6036  0789  0021               	movlb	1	; select bank1
  6037  078A  00BA               	movwf	(___ftneg@f1+2)^(0+128)
  6038  078B  319F  27A1  3185   	fcall	___ftneg
  6039  078E  0021               	movlb	1	; select bank1
  6040  078F  0838               	movf	?___ftneg^(0+128),w
  6041  0790  0022               	movlb	2	; select bank2
  6042  0791  00B9               	movwf	atan2@v^(0+256)
  6043  0792  0021               	movlb	1	; select bank1
  6044  0793  0839               	movf	(?___ftneg+1)^(0+128),w
  6045  0794  0022               	movlb	2	; select bank2
  6046  0795  00BA               	movwf	(atan2@v+1)^(0+256)
  6047  0796  0021               	movlb	1	; select bank1
  6048  0797  083A               	movf	(?___ftneg+2)^(0+128),w
  6049  0798  0022               	movlb	2	; select bank2
  6050  0799  00BB               	movwf	(atan2@v+2)^(0+256)
  6051  079A  0021               	movlb	1	; select bank1
  6052  079B  0866               	movf	atan2@y^(0+128),w
  6053  079C  00A0               	movwf	___ftge@ff1^(0+128)
  6054  079D  0867               	movf	(atan2@y+1)^(0+128),w
  6055  079E  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  6056  079F  0868               	movf	(atan2@y+2)^(0+128),w
  6057  07A0  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  6058  07A1  3000               	movlw	0
  6059  07A2  00A3               	movwf	___ftge@ff2^(0+128)
  6060  07A3  3000               	movlw	0
  6061  07A4  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  6062  07A5  3000               	movlw	0
  6063  07A6  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  6064  07A7  3192  22CA  3185   	fcall	___ftge
  6065  07AA  1803               	btfsc	3,0
  6066  07AB  2FCD               	goto	l3805
  6067  07AC  3010               	movlw	16
  6068  07AD  0021               	movlb	1	; select bank1
  6069  07AE  00C8               	movwf	___ftsub@f2^(0+128)
  6070  07AF  30C9               	movlw	201
  6071  07B0  00C9               	movwf	(___ftsub@f2+1)^(0+128)
  6072  07B1  303F               	movlw	63
  6073  07B2  00CA               	movwf	(___ftsub@f2+2)^(0+128)
  6074  07B3  0022               	movlb	2	; select bank2
  6075  07B4  0839               	movf	atan2@v^(0+256),w
  6076  07B5  0021               	movlb	1	; select bank1
  6077  07B6  00CB               	movwf	___ftsub@f1^(0+128)
  6078  07B7  0022               	movlb	2	; select bank2
  6079  07B8  083A               	movf	(atan2@v+1)^(0+256),w
  6080  07B9  0021               	movlb	1	; select bank1
  6081  07BA  00CC               	movwf	(___ftsub@f1+1)^(0+128)
  6082  07BB  0022               	movlb	2	; select bank2
  6083  07BC  083B               	movf	(atan2@v+2)^(0+256),w
  6084  07BD  0021               	movlb	1	; select bank1
  6085  07BE  00CD               	movwf	(___ftsub@f1+2)^(0+128)
  6086  07BF  3188  2000  3185   	fcall	___ftsub
  6087  07C2  0021               	movlb	1	; select bank1
  6088  07C3  0848               	movf	?___ftsub^(0+128),w
  6089  07C4  0022               	movlb	2	; select bank2
  6090  07C5  00B9               	movwf	atan2@v^(0+256)
  6091  07C6  0021               	movlb	1	; select bank1
  6092  07C7  0849               	movf	(?___ftsub+1)^(0+128),w
  6093  07C8  0022               	movlb	2	; select bank2
  6094  07C9  00BA               	movwf	(atan2@v+1)^(0+256)
  6095  07CA  0021               	movlb	1	; select bank1
  6096  07CB  084A               	movf	(?___ftsub+2)^(0+128),w
  6097  07CC  2FEC               	goto	L2
  6098  07CD                     l3805:	
  6099  07CD  3010               	movlw	16
  6100  07CE  0021               	movlb	1	; select bank1
  6101  07CF  00BB               	movwf	___ftadd@f1^(0+128)
  6102  07D0  30C9               	movlw	201
  6103  07D1  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  6104  07D2  303F               	movlw	63
  6105  07D3  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  6106  07D4  0022               	movlb	2	; select bank2
  6107  07D5  0839               	movf	atan2@v^(0+256),w
  6108  07D6  0021               	movlb	1	; select bank1
  6109  07D7  00BE               	movwf	___ftadd@f2^(0+128)
  6110  07D8  0022               	movlb	2	; select bank2
  6111  07D9  083A               	movf	(atan2@v+1)^(0+256),w
  6112  07DA  0021               	movlb	1	; select bank1
  6113  07DB  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  6114  07DC  0022               	movlb	2	; select bank2
  6115  07DD  083B               	movf	(atan2@v+2)^(0+256),w
  6116  07DE  0021               	movlb	1	; select bank1
  6117  07DF  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  6118  07E0  3188  20D2         	fcall	___ftadd
  6119  07E2  0021               	movlb	1	; select bank1
  6120  07E3  083B               	movf	?___ftadd^(0+128),w
  6121  07E4  0022               	movlb	2	; select bank2
  6122  07E5  00B9               	movwf	atan2@v^(0+256)
  6123  07E6  0021               	movlb	1	; select bank1
  6124  07E7  083C               	movf	(?___ftadd+1)^(0+128),w
  6125  07E8  0022               	movlb	2	; select bank2
  6126  07E9  00BA               	movwf	(atan2@v+1)^(0+256)
  6127  07EA  0021               	movlb	1	; select bank1
  6128  07EB  083D               	movf	(?___ftadd+2)^(0+128),w
  6129  07EC                     L2:	
  6130  07EC  0022               	movlb	2	; select bank2
  6131  07ED  00BB               	movwf	(atan2@v+2)^(0+256)
  6132  07EE  0839               	movf	atan2@v^(0+256),w
  6133  07EF  0021               	movlb	1	; select bank1
  6134  07F0  00E6               	movwf	?_atan2^(0+128)
  6135  07F1  0022               	movlb	2	; select bank2
  6136  07F2  083A               	movf	(atan2@v+1)^(0+256),w
  6137  07F3  0021               	movlb	1	; select bank1
  6138  07F4  00E7               	movwf	(?_atan2+1)^(0+128)
  6139  07F5  0022               	movlb	2	; select bank2
  6140  07F6  083B               	movf	(atan2@v+2)^(0+256),w
  6141  07F7  0021               	movlb	1	; select bank1
  6142  07F8  00E8               	movwf	(?_atan2+2)^(0+128)
  6143  07F9  0008               	return
  6144  07FA                     __end_of_atan2:	
  6145                           
  6146                           	psect	text11
  6147  0BF2                     __ptext11:	
  6148 ;; *************** function _atan *****************
  6149 ;; Defined at:
  6150 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/atan.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  f               3   66[BANK1 ] int 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  val             3   10[BANK2 ] int 
  6155 ;;  val_squared     3    7[BANK2 ] int 
  6156 ;;  x               3    3[BANK2 ] int 
  6157 ;;  y               3    0[BANK2 ] int 
  6158 ;;  recip           1    6[BANK2 ] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  3   66[BANK1 ] unsigned char 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6168 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6169 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;      Totals:         0       0       4      13       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;Total ram usage:       17 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    9
  6175 ;; This function calls:
  6176 ;;		___ftadd
  6177 ;;		___ftdiv
  6178 ;;		___ftge
  6179 ;;		___ftmul
  6180 ;;		___ftneg
  6181 ;;		_eval_poly
  6182 ;;		_fabs
  6183 ;; This function is called by:
  6184 ;;		_atan2
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           
  6189                           ;psect for function _atan
  6190  0BF2                     _atan:	
  6191                           
  6192                           ;incstack = 0
  6193                           ; Regs used in _atan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6194  0BF2  0021               	movlb	1	; select bank1
  6195  0BF3  0862               	movf	atan@f^(0+128),w
  6196  0BF4  00BB               	movwf	fabs@d^(0+128)
  6197  0BF5  0863               	movf	(atan@f+1)^(0+128),w
  6198  0BF6  00BC               	movwf	(fabs@d+1)^(0+128)
  6199  0BF7  0864               	movf	(atan@f+2)^(0+128),w
  6200  0BF8  00BD               	movwf	(fabs@d+2)^(0+128)
  6201  0BF9  3191  2173  318B   	fcall	_fabs
  6202  0BFC  0021               	movlb	1	; select bank1
  6203  0BFD  083B               	movf	?_fabs^(0+128),w
  6204  0BFE  0022               	movlb	2	; select bank2
  6205  0BFF  00AA               	movwf	atan@val^(0+256)
  6206  0C00  0021               	movlb	1	; select bank1
  6207  0C01  083C               	movf	(?_fabs+1)^(0+128),w
  6208  0C02  0022               	movlb	2	; select bank2
  6209  0C03  00AB               	movwf	(atan@val+1)^(0+256)
  6210  0C04  0021               	movlb	1	; select bank1
  6211  0C05  083D               	movf	(?_fabs+2)^(0+128),w
  6212  0C06  0022               	movlb	2	; select bank2
  6213  0C07  00AC               	movwf	(atan@val+2)^(0+256)
  6214  0C08  082C               	movf	(atan@val+2)^(0+256),w
  6215  0C09  042B               	iorwf	(atan@val+1)^(0+256),w
  6216  0C0A  042A               	iorwf	atan@val^(0+256),w
  6217  0C0B  1D03               	skipz
  6218  0C0C  2C15               	goto	l3483
  6219  0C0D  3000               	movlw	0
  6220  0C0E  0021               	movlb	1	; select bank1
  6221  0C0F  00E2               	movwf	?_atan^(0+128)
  6222  0C10  3000               	movlw	0
  6223  0C11  00E3               	movwf	(?_atan+1)^(0+128)
  6224  0C12  3000               	movlw	0
  6225  0C13  00E4               	movwf	(?_atan+2)^(0+128)
  6226  0C14  0008               	return
  6227  0C15                     l3483:	
  6228  0C15  3000               	movlw	0
  6229  0C16  0021               	movlb	1	; select bank1
  6230  0C17  00A0               	movwf	___ftge@ff1^(0+128)
  6231  0C18  3080               	movlw	128
  6232  0C19  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  6233  0C1A  303F               	movlw	63
  6234  0C1B  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  6235  0C1C  0022               	movlb	2	; select bank2
  6236  0C1D  082A               	movf	atan@val^(0+256),w
  6237  0C1E  0021               	movlb	1	; select bank1
  6238  0C1F  00A3               	movwf	___ftge@ff2^(0+128)
  6239  0C20  0022               	movlb	2	; select bank2
  6240  0C21  082B               	movf	(atan@val+1)^(0+256),w
  6241  0C22  0021               	movlb	1	; select bank1
  6242  0C23  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  6243  0C24  0022               	movlb	2	; select bank2
  6244  0C25  082C               	movf	(atan@val+2)^(0+256),w
  6245  0C26  0021               	movlb	1	; select bank1
  6246  0C27  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  6247  0C28  3192  22CA  318B   	fcall	___ftge
  6248  0C2B  1803               	btfsc	3,0
  6249  0C2C  2C2F               	goto	u5660
  6250  0C2D  3001               	movlw	1
  6251  0C2E  2C30               	goto	u5670
  6252  0C2F                     u5660:	
  6253  0C2F  3000               	movlw	0
  6254  0C30                     u5670:	
  6255  0C30  0021               	movlb	1	; select bank1
  6256  0C31  00E5               	movwf	??_atan^(0+128)
  6257  0C32  0865               	movf	??_atan^(0+128),w
  6258  0C33  0022               	movlb	2	; select bank2
  6259  0C34  00A6               	movwf	atan@recip^(0+256)
  6260  0C35  0826               	movf	atan@recip^(0+256),w
  6261  0C36  1903               	btfsc	3,2
  6262  0C37  2C58               	goto	l1048
  6263  0C38  082A               	movf	atan@val^(0+256),w
  6264  0C39  0021               	movlb	1	; select bank1
  6265  0C3A  00A8               	movwf	___ftdiv@f2^(0+128)
  6266  0C3B  0022               	movlb	2	; select bank2
  6267  0C3C  082B               	movf	(atan@val+1)^(0+256),w
  6268  0C3D  0021               	movlb	1	; select bank1
  6269  0C3E  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  6270  0C3F  0022               	movlb	2	; select bank2
  6271  0C40  082C               	movf	(atan@val+2)^(0+256),w
  6272  0C41  0021               	movlb	1	; select bank1
  6273  0C42  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  6274  0C43  3000               	movlw	0
  6275  0C44  00AB               	movwf	___ftdiv@f1^(0+128)
  6276  0C45  3080               	movlw	128
  6277  0C46  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  6278  0C47  303F               	movlw	63
  6279  0C48  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  6280  0C49  3197  2757  318B   	fcall	___ftdiv
  6281  0C4C  0021               	movlb	1	; select bank1
  6282  0C4D  0828               	movf	?___ftdiv^(0+128),w
  6283  0C4E  0022               	movlb	2	; select bank2
  6284  0C4F  00AA               	movwf	atan@val^(0+256)
  6285  0C50  0021               	movlb	1	; select bank1
  6286  0C51  0829               	movf	(?___ftdiv+1)^(0+128),w
  6287  0C52  0022               	movlb	2	; select bank2
  6288  0C53  00AB               	movwf	(atan@val+1)^(0+256)
  6289  0C54  0021               	movlb	1	; select bank1
  6290  0C55  082A               	movf	(?___ftdiv+2)^(0+128),w
  6291  0C56  0022               	movlb	2	; select bank2
  6292  0C57  00AC               	movwf	(atan@val+2)^(0+256)
  6293  0C58                     l1048:	
  6294  0C58  082A               	movf	atan@val^(0+256),w
  6295  0C59  0021               	movlb	1	; select bank1
  6296  0C5A  00C8               	movwf	___ftmul@f1^(0+128)
  6297  0C5B  0022               	movlb	2	; select bank2
  6298  0C5C  082B               	movf	(atan@val+1)^(0+256),w
  6299  0C5D  0021               	movlb	1	; select bank1
  6300  0C5E  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  6301  0C5F  0022               	movlb	2	; select bank2
  6302  0C60  082C               	movf	(atan@val+2)^(0+256),w
  6303  0C61  0021               	movlb	1	; select bank1
  6304  0C62  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  6305  0C63  0022               	movlb	2	; select bank2
  6306  0C64  082A               	movf	atan@val^(0+256),w
  6307  0C65  0021               	movlb	1	; select bank1
  6308  0C66  00CB               	movwf	___ftmul@f2^(0+128)
  6309  0C67  0022               	movlb	2	; select bank2
  6310  0C68  082B               	movf	(atan@val+1)^(0+256),w
  6311  0C69  0021               	movlb	1	; select bank1
  6312  0C6A  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  6313  0C6B  0022               	movlb	2	; select bank2
  6314  0C6C  082C               	movf	(atan@val+2)^(0+256),w
  6315  0C6D  0021               	movlb	1	; select bank1
  6316  0C6E  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  6317  0C6F  3188  201E  318B   	fcall	___ftmul
  6318  0C72  0021               	movlb	1	; select bank1
  6319  0C73  0848               	movf	?___ftmul^(0+128),w
  6320  0C74  0022               	movlb	2	; select bank2
  6321  0C75  00A7               	movwf	atan@val_squared^(0+256)
  6322  0C76  0021               	movlb	1	; select bank1
  6323  0C77  0849               	movf	(?___ftmul+1)^(0+128),w
  6324  0C78  0022               	movlb	2	; select bank2
  6325  0C79  00A8               	movwf	(atan@val_squared+1)^(0+256)
  6326  0C7A  0021               	movlb	1	; select bank1
  6327  0C7B  084A               	movf	(?___ftmul+2)^(0+128),w
  6328  0C7C  0022               	movlb	2	; select bank2
  6329  0C7D  00A9               	movwf	(atan@val_squared+2)^(0+256)
  6330  0C7E  0827               	movf	atan@val_squared^(0+256),w
  6331  0C7F  0021               	movlb	1	; select bank1
  6332  0C80  00D8               	movwf	eval_poly@x^(0+128)
  6333  0C81  0022               	movlb	2	; select bank2
  6334  0C82  0828               	movf	(atan@val_squared+1)^(0+256),w
  6335  0C83  0021               	movlb	1	; select bank1
  6336  0C84  00D9               	movwf	(eval_poly@x+1)^(0+128)
  6337  0C85  0022               	movlb	2	; select bank2
  6338  0C86  0829               	movf	(atan@val_squared+2)^(0+256),w
  6339  0C87  0021               	movlb	1	; select bank1
  6340  0C88  00DA               	movwf	(eval_poly@x+2)^(0+128)
  6341  0C89  3012               	movlw	low (atan@coeff_b| (0+32768))
  6342  0C8A  00DB               	movwf	eval_poly@d^(0+128)
  6343  0C8B  3098               	movlw	high (atan@coeff_b| (0+32768))
  6344  0C8C  00DC               	movwf	(eval_poly@d^(0+128)+1)
  6345  0C8D  3004               	movlw	4
  6346  0C8E  00DD               	movwf	eval_poly@n^(0+128)
  6347  0C8F  3000               	movlw	0
  6348  0C90  00DE               	movwf	(eval_poly@n^(0+128)+1)
  6349  0C91  3195  252B  318B   	fcall	_eval_poly
  6350  0C94  0021               	movlb	1	; select bank1
  6351  0C95  0858               	movf	?_eval_poly^(0+128),w
  6352  0C96  0022               	movlb	2	; select bank2
  6353  0C97  00A0               	movwf	atan@y^(0+256)
  6354  0C98  0021               	movlb	1	; select bank1
  6355  0C99  0859               	movf	(?_eval_poly+1)^(0+128),w
  6356  0C9A  0022               	movlb	2	; select bank2
  6357  0C9B  00A1               	movwf	(atan@y+1)^(0+256)
  6358  0C9C  0021               	movlb	1	; select bank1
  6359  0C9D  085A               	movf	(?_eval_poly+2)^(0+128),w
  6360  0C9E  0022               	movlb	2	; select bank2
  6361  0C9F  00A2               	movwf	(atan@y+2)^(0+256)
  6362  0CA0  0827               	movf	atan@val_squared^(0+256),w
  6363  0CA1  0021               	movlb	1	; select bank1
  6364  0CA2  00D8               	movwf	eval_poly@x^(0+128)
  6365  0CA3  0022               	movlb	2	; select bank2
  6366  0CA4  0828               	movf	(atan@val_squared+1)^(0+256),w
  6367  0CA5  0021               	movlb	1	; select bank1
  6368  0CA6  00D9               	movwf	(eval_poly@x+1)^(0+128)
  6369  0CA7  0022               	movlb	2	; select bank2
  6370  0CA8  0829               	movf	(atan@val_squared+2)^(0+256),w
  6371  0CA9  0021               	movlb	1	; select bank1
  6372  0CAA  00DA               	movwf	(eval_poly@x+2)^(0+128)
  6373  0CAB  3000               	movlw	low (atan@coeff_a| (0+32768))
  6374  0CAC  00DB               	movwf	eval_poly@d^(0+128)
  6375  0CAD  3098               	movlw	high (atan@coeff_a| (0+32768))
  6376  0CAE  00DC               	movwf	(eval_poly@d^(0+128)+1)
  6377  0CAF  3005               	movlw	5
  6378  0CB0  00DD               	movwf	eval_poly@n^(0+128)
  6379  0CB1  3000               	movlw	0
  6380  0CB2  00DE               	movwf	(eval_poly@n^(0+128)+1)
  6381  0CB3  3195  252B  318B   	fcall	_eval_poly
  6382  0CB6  0021               	movlb	1	; select bank1
  6383  0CB7  0858               	movf	?_eval_poly^(0+128),w
  6384  0CB8  0022               	movlb	2	; select bank2
  6385  0CB9  00A3               	movwf	atan@x^(0+256)
  6386  0CBA  0021               	movlb	1	; select bank1
  6387  0CBB  0859               	movf	(?_eval_poly+1)^(0+128),w
  6388  0CBC  0022               	movlb	2	; select bank2
  6389  0CBD  00A4               	movwf	(atan@x+1)^(0+256)
  6390  0CBE  0021               	movlb	1	; select bank1
  6391  0CBF  085A               	movf	(?_eval_poly+2)^(0+128),w
  6392  0CC0  0022               	movlb	2	; select bank2
  6393  0CC1  00A5               	movwf	(atan@x+2)^(0+256)
  6394  0CC2  0823               	movf	atan@x^(0+256),w
  6395  0CC3  0021               	movlb	1	; select bank1
  6396  0CC4  00AB               	movwf	___ftdiv@f1^(0+128)
  6397  0CC5  0022               	movlb	2	; select bank2
  6398  0CC6  0824               	movf	(atan@x+1)^(0+256),w
  6399  0CC7  0021               	movlb	1	; select bank1
  6400  0CC8  00AC               	movwf	(___ftdiv@f1+1)^(0+128)
  6401  0CC9  0022               	movlb	2	; select bank2
  6402  0CCA  0825               	movf	(atan@x+2)^(0+256),w
  6403  0CCB  0021               	movlb	1	; select bank1
  6404  0CCC  00AD               	movwf	(___ftdiv@f1+2)^(0+128)
  6405  0CCD  0022               	movlb	2	; select bank2
  6406  0CCE  0820               	movf	atan@y^(0+256),w
  6407  0CCF  0021               	movlb	1	; select bank1
  6408  0CD0  00A8               	movwf	___ftdiv@f2^(0+128)
  6409  0CD1  0022               	movlb	2	; select bank2
  6410  0CD2  0821               	movf	(atan@y+1)^(0+256),w
  6411  0CD3  0021               	movlb	1	; select bank1
  6412  0CD4  00A9               	movwf	(___ftdiv@f2+1)^(0+128)
  6413  0CD5  0022               	movlb	2	; select bank2
  6414  0CD6  0822               	movf	(atan@y+2)^(0+256),w
  6415  0CD7  0021               	movlb	1	; select bank1
  6416  0CD8  00AA               	movwf	(___ftdiv@f2+2)^(0+128)
  6417  0CD9  3197  2757  318B   	fcall	___ftdiv
  6418  0CDC  0021               	movlb	1	; select bank1
  6419  0CDD  0828               	movf	?___ftdiv^(0+128),w
  6420  0CDE  00C8               	movwf	___ftmul@f1^(0+128)
  6421  0CDF  0829               	movf	(?___ftdiv+1)^(0+128),w
  6422  0CE0  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  6423  0CE1  082A               	movf	(?___ftdiv+2)^(0+128),w
  6424  0CE2  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  6425  0CE3  0022               	movlb	2	; select bank2
  6426  0CE4  082A               	movf	atan@val^(0+256),w
  6427  0CE5  0021               	movlb	1	; select bank1
  6428  0CE6  00CB               	movwf	___ftmul@f2^(0+128)
  6429  0CE7  0022               	movlb	2	; select bank2
  6430  0CE8  082B               	movf	(atan@val+1)^(0+256),w
  6431  0CE9  0021               	movlb	1	; select bank1
  6432  0CEA  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  6433  0CEB  0022               	movlb	2	; select bank2
  6434  0CEC  082C               	movf	(atan@val+2)^(0+256),w
  6435  0CED  0021               	movlb	1	; select bank1
  6436  0CEE  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  6437  0CEF  3188  201E  318B   	fcall	___ftmul
  6438  0CF2  0021               	movlb	1	; select bank1
  6439  0CF3  0848               	movf	?___ftmul^(0+128),w
  6440  0CF4  0022               	movlb	2	; select bank2
  6441  0CF5  00AA               	movwf	atan@val^(0+256)
  6442  0CF6  0021               	movlb	1	; select bank1
  6443  0CF7  0849               	movf	(?___ftmul+1)^(0+128),w
  6444  0CF8  0022               	movlb	2	; select bank2
  6445  0CF9  00AB               	movwf	(atan@val+1)^(0+256)
  6446  0CFA  0021               	movlb	1	; select bank1
  6447  0CFB  084A               	movf	(?___ftmul+2)^(0+128),w
  6448  0CFC  0022               	movlb	2	; select bank2
  6449  0CFD  00AC               	movwf	(atan@val+2)^(0+256)
  6450  0CFE  0826               	movf	atan@recip^(0+256),w
  6451  0CFF  1903               	btfsc	3,2
  6452  0D00  2D2D               	goto	l1049
  6453  0D01  3010               	movlw	16
  6454  0D02  0021               	movlb	1	; select bank1
  6455  0D03  00BB               	movwf	___ftadd@f1^(0+128)
  6456  0D04  30C9               	movlw	201
  6457  0D05  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  6458  0D06  303F               	movlw	63
  6459  0D07  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  6460  0D08  0022               	movlb	2	; select bank2
  6461  0D09  082A               	movf	atan@val^(0+256),w
  6462  0D0A  0021               	movlb	1	; select bank1
  6463  0D0B  00B8               	movwf	___ftneg@f1^(0+128)
  6464  0D0C  0022               	movlb	2	; select bank2
  6465  0D0D  082B               	movf	(atan@val+1)^(0+256),w
  6466  0D0E  0021               	movlb	1	; select bank1
  6467  0D0F  00B9               	movwf	(___ftneg@f1+1)^(0+128)
  6468  0D10  0022               	movlb	2	; select bank2
  6469  0D11  082C               	movf	(atan@val+2)^(0+256),w
  6470  0D12  0021               	movlb	1	; select bank1
  6471  0D13  00BA               	movwf	(___ftneg@f1+2)^(0+128)
  6472  0D14  319F  27A1  318B   	fcall	___ftneg
  6473  0D17  0021               	movlb	1	; select bank1
  6474  0D18  0838               	movf	?___ftneg^(0+128),w
  6475  0D19  00BE               	movwf	___ftadd@f2^(0+128)
  6476  0D1A  0839               	movf	(?___ftneg+1)^(0+128),w
  6477  0D1B  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  6478  0D1C  083A               	movf	(?___ftneg+2)^(0+128),w
  6479  0D1D  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  6480  0D1E  3188  20D2  318B   	fcall	___ftadd
  6481  0D21  0021               	movlb	1	; select bank1
  6482  0D22  083B               	movf	?___ftadd^(0+128),w
  6483  0D23  0022               	movlb	2	; select bank2
  6484  0D24  00AA               	movwf	atan@val^(0+256)
  6485  0D25  0021               	movlb	1	; select bank1
  6486  0D26  083C               	movf	(?___ftadd+1)^(0+128),w
  6487  0D27  0022               	movlb	2	; select bank2
  6488  0D28  00AB               	movwf	(atan@val+1)^(0+256)
  6489  0D29  0021               	movlb	1	; select bank1
  6490  0D2A  083D               	movf	(?___ftadd+2)^(0+128),w
  6491  0D2B  0022               	movlb	2	; select bank2
  6492  0D2C  00AC               	movwf	(atan@val+2)^(0+256)
  6493  0D2D                     l1049:	
  6494  0D2D  0021               	movlb	1	; select bank1
  6495  0D2E  0862               	movf	atan@f^(0+128),w
  6496  0D2F  00A0               	movwf	___ftge@ff1^(0+128)
  6497  0D30  0863               	movf	(atan@f+1)^(0+128),w
  6498  0D31  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  6499  0D32  0864               	movf	(atan@f+2)^(0+128),w
  6500  0D33  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  6501  0D34  3000               	movlw	0
  6502  0D35  00A3               	movwf	___ftge@ff2^(0+128)
  6503  0D36  3000               	movlw	0
  6504  0D37  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  6505  0D38  3000               	movlw	0
  6506  0D39  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  6507  0D3A  3192  22CA  318B   	fcall	___ftge
  6508  0D3D  1C03               	btfss	3,0
  6509  0D3E  2D4C               	goto	l3497
  6510  0D3F  0022               	movlb	2	; select bank2
  6511  0D40  082A               	movf	atan@val^(0+256),w
  6512  0D41  0021               	movlb	1	; select bank1
  6513  0D42  00E2               	movwf	?_atan^(0+128)
  6514  0D43  0022               	movlb	2	; select bank2
  6515  0D44  082B               	movf	(atan@val+1)^(0+256),w
  6516  0D45  0021               	movlb	1	; select bank1
  6517  0D46  00E3               	movwf	(?_atan+1)^(0+128)
  6518  0D47  0022               	movlb	2	; select bank2
  6519  0D48  082C               	movf	(atan@val+2)^(0+256),w
  6520  0D49  0021               	movlb	1	; select bank1
  6521  0D4A  00E4               	movwf	(?_atan+2)^(0+128)
  6522  0D4B  0008               	return
  6523  0D4C                     l3497:	
  6524  0D4C  0022               	movlb	2	; select bank2
  6525  0D4D  082A               	movf	atan@val^(0+256),w
  6526  0D4E  0021               	movlb	1	; select bank1
  6527  0D4F  00B8               	movwf	___ftneg@f1^(0+128)
  6528  0D50  0022               	movlb	2	; select bank2
  6529  0D51  082B               	movf	(atan@val+1)^(0+256),w
  6530  0D52  0021               	movlb	1	; select bank1
  6531  0D53  00B9               	movwf	(___ftneg@f1+1)^(0+128)
  6532  0D54  0022               	movlb	2	; select bank2
  6533  0D55  082C               	movf	(atan@val+2)^(0+256),w
  6534  0D56  0021               	movlb	1	; select bank1
  6535  0D57  00BA               	movwf	(___ftneg@f1+2)^(0+128)
  6536  0D58  319F  27A1         	fcall	___ftneg
  6537  0D5A  0021               	movlb	1	; select bank1
  6538  0D5B  0838               	movf	?___ftneg^(0+128),w
  6539  0D5C  00E2               	movwf	?_atan^(0+128)
  6540  0D5D  0839               	movf	(?___ftneg+1)^(0+128),w
  6541  0D5E  00E3               	movwf	(?_atan+1)^(0+128)
  6542  0D5F  083A               	movf	(?___ftneg+2)^(0+128),w
  6543  0D60  00E4               	movwf	(?_atan+2)^(0+128)
  6544  0D61  0008               	return
  6545  0D62                     __end_of_atan:	
  6546                           
  6547                           	psect	text12
  6548  1173                     __ptext12:	
  6549 ;; *************** function _fabs *****************
  6550 ;; Defined at:
  6551 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/fabs.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  d               3   27[BANK1 ] unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  3   27[BANK1 ] unsigned char 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6565 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;Total ram usage:        3 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    7
  6572 ;; This function calls:
  6573 ;;		___ftge
  6574 ;;		___ftneg
  6575 ;; This function is called by:
  6576 ;;		_atan2
  6577 ;;		_atan
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           
  6582                           ;psect for function _fabs
  6583  1173                     _fabs:	
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
  6587  1173  0021               	movlb	1	; select bank1
  6588  1174  083B               	movf	fabs@d^(0+128),w
  6589  1175  00A0               	movwf	___ftge@ff1^(0+128)
  6590  1176  083C               	movf	(fabs@d+1)^(0+128),w
  6591  1177  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  6592  1178  083D               	movf	(fabs@d+2)^(0+128),w
  6593  1179  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  6594  117A  3000               	movlw	0
  6595  117B  00A3               	movwf	___ftge@ff2^(0+128)
  6596  117C  3000               	movlw	0
  6597  117D  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  6598  117E  3000               	movlw	0
  6599  117F  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  6600  1180  3192  22CA  3191   	fcall	___ftge
  6601  1183  1803               	btfsc	3,0
  6602  1184  0008               	return
  6603  1185  0021               	movlb	1	; select bank1
  6604  1186  083B               	movf	fabs@d^(0+128),w
  6605  1187  00B8               	movwf	___ftneg@f1^(0+128)
  6606  1188  083C               	movf	(fabs@d+1)^(0+128),w
  6607  1189  00B9               	movwf	(___ftneg@f1+1)^(0+128)
  6608  118A  083D               	movf	(fabs@d+2)^(0+128),w
  6609  118B  00BA               	movwf	(___ftneg@f1+2)^(0+128)
  6610  118C  319F  27A1         	fcall	___ftneg
  6611  118E  0021               	movlb	1	; select bank1
  6612  118F  0838               	movf	?___ftneg^(0+128),w
  6613  1190  00BB               	movwf	?_fabs^(0+128)
  6614  1191  0839               	movf	(?___ftneg+1)^(0+128),w
  6615  1192  00BC               	movwf	(?_fabs+1)^(0+128)
  6616  1193  083A               	movf	(?___ftneg+2)^(0+128),w
  6617  1194  00BD               	movwf	(?_fabs+2)^(0+128)
  6618  1195  0008               	return
  6619  1196                     __end_of_fabs:	
  6620                           
  6621                           	psect	text13
  6622  1FA1                     __ptext13:	
  6623 ;; *************** function ___ftneg *****************
  6624 ;; Defined at:
  6625 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/ftneg.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  f1              3   24[BANK1 ] float 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  3   24[BANK1 ] float 
  6632 ;; Registers used:
  6633 ;;		wreg
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6639 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;Total ram usage:        3 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    6
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_main
  6650 ;;		_atan2
  6651 ;;		_fabs
  6652 ;;		_atan
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           
  6657                           ;psect for function ___ftneg
  6658  1FA1                     ___ftneg:	
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in ___ftneg: [wreg]
  6662  1FA1  0021               	movlb	1	; select bank1
  6663  1FA2  083A               	movf	(___ftneg@f1+2)^(0+128),w
  6664  1FA3  0439               	iorwf	(___ftneg@f1+1)^(0+128),w
  6665  1FA4  0438               	iorwf	___ftneg@f1^(0+128),w
  6666  1FA5  1903               	skipnz
  6667  1FA6  0008               	return
  6668  1FA7  3080               	movlw	128
  6669  1FA8  06BA               	xorwf	(___ftneg@f1+2)^(0+128),f
  6670  1FA9  0008               	return
  6671  1FAA                     __end_of___ftneg:	
  6672                           
  6673                           	psect	text14
  6674  12CA                     __ptext14:	
  6675 ;; *************** function ___ftge *****************
  6676 ;; Defined at:
  6677 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/ftge.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  ff1             3    0[BANK1 ] float 
  6680 ;;  ff2             3    3[BANK1 ] float 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;		None
  6683 ;; Return value:  Size  Location     Type
  6684 ;;		None               void
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6692 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;Total ram usage:        9 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    6
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_main
  6703 ;;		_atan2
  6704 ;;		_fabs
  6705 ;;		_atan
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           
  6710                           ;psect for function ___ftge
  6711  12CA                     ___ftge:	
  6712                           
  6713                           ;incstack = 0
  6714                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6715  12CA  0021               	movlb	1	; select bank1
  6716  12CB  1FA2               	btfss	(___ftge@ff1+2)^(0+128),7
  6717  12CC  2AE1               	goto	l2993
  6718  12CD  0920               	comf	___ftge@ff1^(0+128),w
  6719  12CE  00A6               	movwf	??___ftge^(0+128)
  6720  12CF  0921               	comf	(___ftge@ff1+1)^(0+128),w
  6721  12D0  00A7               	movwf	(??___ftge^(0+128)+1)
  6722  12D1  0922               	comf	(___ftge@ff1+2)^(0+128),w
  6723  12D2  00A8               	movwf	(??___ftge^(0+128)+2)
  6724  12D3  0AA6               	incf	??___ftge^(0+128),f
  6725  12D4  1903               	skipnz
  6726  12D5  0AA7               	incf	(??___ftge^(0+128)+1),f
  6727  12D6  1903               	skipnz
  6728  12D7  0AA8               	incf	(??___ftge^(0+128)+2),f
  6729  12D8  3000               	movlw	0
  6730  12D9  0726               	addwf	??___ftge^(0+128),w
  6731  12DA  00A0               	movwf	___ftge@ff1^(0+128)
  6732  12DB  3000               	movlw	0
  6733  12DC  3D27               	addwfc	(??___ftge+1)^(0+128),w
  6734  12DD  00A1               	movwf	(___ftge@ff1+1)^(0+128)
  6735  12DE  3080               	movlw	128
  6736  12DF  3D28               	addwfc	(??___ftge+2)^(0+128),w
  6737  12E0  00A2               	movwf	(___ftge@ff1+2)^(0+128)
  6738  12E1                     l2993:	
  6739  12E1  1FA5               	btfss	(___ftge@ff2+2)^(0+128),7
  6740  12E2  2AF7               	goto	l2997
  6741  12E3  0923               	comf	___ftge@ff2^(0+128),w
  6742  12E4  00A6               	movwf	??___ftge^(0+128)
  6743  12E5  0924               	comf	(___ftge@ff2+1)^(0+128),w
  6744  12E6  00A7               	movwf	(??___ftge^(0+128)+1)
  6745  12E7  0925               	comf	(___ftge@ff2+2)^(0+128),w
  6746  12E8  00A8               	movwf	(??___ftge^(0+128)+2)
  6747  12E9  0AA6               	incf	??___ftge^(0+128),f
  6748  12EA  1903               	skipnz
  6749  12EB  0AA7               	incf	(??___ftge^(0+128)+1),f
  6750  12EC  1903               	skipnz
  6751  12ED  0AA8               	incf	(??___ftge^(0+128)+2),f
  6752  12EE  3000               	movlw	0
  6753  12EF  0726               	addwf	??___ftge^(0+128),w
  6754  12F0  00A3               	movwf	___ftge@ff2^(0+128)
  6755  12F1  3000               	movlw	0
  6756  12F2  3D27               	addwfc	(??___ftge+1)^(0+128),w
  6757  12F3  00A4               	movwf	(___ftge@ff2+1)^(0+128)
  6758  12F4  3080               	movlw	128
  6759  12F5  3D28               	addwfc	(??___ftge+2)^(0+128),w
  6760  12F6  00A5               	movwf	(___ftge@ff2+2)^(0+128)
  6761  12F7                     l2997:	
  6762  12F7  3080               	movlw	128
  6763  12F8  06A2               	xorwf	(___ftge@ff1+2)^(0+128),f
  6764  12F9  3080               	movlw	128
  6765  12FA  06A5               	xorwf	(___ftge@ff2+2)^(0+128),f
  6766  12FB  0825               	movf	(___ftge@ff2+2)^(0+128),w
  6767  12FC  0222               	subwf	(___ftge@ff1+2)^(0+128),w
  6768  12FD  1D03               	skipz
  6769  12FE  0008               	return
  6770  12FF  0824               	movf	(___ftge@ff2+1)^(0+128),w
  6771  1300  0221               	subwf	(___ftge@ff1+1)^(0+128),w
  6772  1301  1D03               	skipz
  6773  1302  0008               	return
  6774  1303  0823               	movf	___ftge@ff2^(0+128),w
  6775  1304  0220               	subwf	___ftge@ff1^(0+128),w
  6776  1305  0008               	return
  6777  1306                     __end_of___ftge:	
  6778                           
  6779                           	psect	text15
  6780  152B                     __ptext15:	
  6781 ;; *************** function _eval_poly *****************
  6782 ;; Defined at:
  6783 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/evalpoly.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  x               3   56[BANK1 ] float 
  6786 ;;  d               2   59[BANK1 ] PTR const 
  6787 ;;		 -> atan@coeff_a(18), atan@coeff_b(15), 
  6788 ;;  n               2   61[BANK1 ] int 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  res             3   63[BANK1 ] int 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  3   56[BANK1 ] int 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6800 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;Total ram usage:       10 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    8
  6807 ;; This function calls:
  6808 ;;		___ftadd
  6809 ;;		___ftmul
  6810 ;;		___wmul
  6811 ;; This function is called by:
  6812 ;;		_atan
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _eval_poly
  6818  152B                     _eval_poly:	
  6819                           
  6820                           ;incstack = 0
  6821                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6822  152B  0021               	movlb	1	; select bank1
  6823  152C  085E               	movf	(eval_poly@n+1)^(0+128),w
  6824  152D  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  6825  152E  085D               	movf	eval_poly@n^(0+128),w
  6826  152F  00A0               	movwf	___wmul@multiplier^(0+128)
  6827  1530  3003               	movlw	3
  6828  1531  00A2               	movwf	___wmul@multiplicand^(0+128)
  6829  1532  3000               	movlw	0
  6830  1533  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  6831  1534  3190  2095  3195   	fcall	___wmul
  6832  1537  0021               	movlb	1	; select bank1
  6833  1538  085B               	movf	eval_poly@d^(0+128),w
  6834  1539  0720               	addwf	?___wmul^(0+128),w
  6835  153A  0084               	movwf	4
  6836  153B  085C               	movf	(eval_poly@d+1)^(0+128),w
  6837  153C  3D21               	addwfc	(?___wmul+1)^(0+128),w
  6838  153D  0085               	movwf	5
  6839  153E  3F00               	moviw [0]fsr0
  6840  153F  00DF               	movwf	eval_poly@res^(0+128)
  6841  1540  3F01               	moviw [1]fsr0
  6842  1541  00E0               	movwf	(eval_poly@res+1)^(0+128)
  6843  1542  3F02               	moviw [2]fsr0
  6844  1543                     L4:	
  6845  1543  00E1               	movwf	(eval_poly@res+2)^(0+128)
  6846  1544  085D               	movf	eval_poly@n^(0+128),w
  6847  1545  045E               	iorwf	(eval_poly@n+1)^(0+128),w
  6848  1546  1903               	btfsc	3,2
  6849  1547  2D84               	goto	l3217
  6850  1548  30FF               	movlw	255
  6851  1549  07DD               	addwf	eval_poly@n^(0+128),f
  6852  154A  30FF               	movlw	255
  6853  154B  3DDE               	addwfc	(eval_poly@n+1)^(0+128),f
  6854  154C  085E               	movf	(eval_poly@n+1)^(0+128),w
  6855  154D  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  6856  154E  085D               	movf	eval_poly@n^(0+128),w
  6857  154F  00A0               	movwf	___wmul@multiplier^(0+128)
  6858  1550  3003               	movlw	3
  6859  1551  00A2               	movwf	___wmul@multiplicand^(0+128)
  6860  1552  3000               	movlw	0
  6861  1553  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  6862  1554  3190  2095  3195   	fcall	___wmul
  6863  1557  0021               	movlb	1	; select bank1
  6864  1558  085B               	movf	eval_poly@d^(0+128),w
  6865  1559  0720               	addwf	?___wmul^(0+128),w
  6866  155A  0084               	movwf	4
  6867  155B  085C               	movf	(eval_poly@d+1)^(0+128),w
  6868  155C  3D21               	addwfc	(?___wmul+1)^(0+128),w
  6869  155D  0085               	movwf	5
  6870  155E  3F00               	moviw [0]fsr0
  6871  155F  00BB               	movwf	___ftadd@f1^(0+128)
  6872  1560  3F01               	moviw [1]fsr0
  6873  1561  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  6874  1562  3F02               	moviw [2]fsr0
  6875  1563  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  6876  1564  085F               	movf	eval_poly@res^(0+128),w
  6877  1565  00C8               	movwf	___ftmul@f1^(0+128)
  6878  1566  0860               	movf	(eval_poly@res+1)^(0+128),w
  6879  1567  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  6880  1568  0861               	movf	(eval_poly@res+2)^(0+128),w
  6881  1569  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  6882  156A  0858               	movf	eval_poly@x^(0+128),w
  6883  156B  00CB               	movwf	___ftmul@f2^(0+128)
  6884  156C  0859               	movf	(eval_poly@x+1)^(0+128),w
  6885  156D  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  6886  156E  085A               	movf	(eval_poly@x+2)^(0+128),w
  6887  156F  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  6888  1570  3188  201E  3195   	fcall	___ftmul
  6889  1573  0021               	movlb	1	; select bank1
  6890  1574  0848               	movf	?___ftmul^(0+128),w
  6891  1575  00BE               	movwf	___ftadd@f2^(0+128)
  6892  1576  0849               	movf	(?___ftmul+1)^(0+128),w
  6893  1577  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  6894  1578  084A               	movf	(?___ftmul+2)^(0+128),w
  6895  1579  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  6896  157A  3188  20D2  3195   	fcall	___ftadd
  6897  157D  0021               	movlb	1	; select bank1
  6898  157E  083B               	movf	?___ftadd^(0+128),w
  6899  157F  00DF               	movwf	eval_poly@res^(0+128)
  6900  1580  083C               	movf	(?___ftadd+1)^(0+128),w
  6901  1581  00E0               	movwf	(eval_poly@res+1)^(0+128)
  6902  1582  083D               	movf	(?___ftadd+2)^(0+128),w
  6903  1583  2D43               	goto	L4
  6904  1584                     l3217:	
  6905  1584  085F               	movf	eval_poly@res^(0+128),w
  6906  1585  00D8               	movwf	?_eval_poly^(0+128)
  6907  1586  0860               	movf	(eval_poly@res+1)^(0+128),w
  6908  1587  00D9               	movwf	(?_eval_poly+1)^(0+128)
  6909  1588  0861               	movf	(eval_poly@res+2)^(0+128),w
  6910  1589  00DA               	movwf	(?_eval_poly+2)^(0+128)
  6911  158A  0008               	return
  6912  158B                     __end_of_eval_poly:	
  6913                           
  6914                           	psect	text16
  6915  1095                     __ptext16:	
  6916 ;; *************** function ___wmul *****************
  6917 ;; Defined at:
  6918 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  multiplier      2    0[BANK1 ] unsigned int 
  6921 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  product         2    4[BANK1 ] unsigned int 
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  2    0[BANK1 ] unsigned int 
  6926 ;; Registers used:
  6927 ;;		wreg, status,2, status,0
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6933 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;Total ram usage:        6 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    6
  6940 ;; This function calls:
  6941 ;;		Nothing
  6942 ;; This function is called by:
  6943 ;;		_eval_poly
  6944 ;;		_string2int
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           
  6949                           ;psect for function ___wmul
  6950  1095                     ___wmul:	
  6951                           
  6952                           ;incstack = 0
  6953                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6954  1095  0021               	movlb	1	; select bank1
  6955  1096  01A4               	clrf	___wmul@product^(0+128)
  6956  1097  01A5               	clrf	(___wmul@product+1)^(0+128)
  6957  1098                     l2907:	
  6958  1098  1C20               	btfss	___wmul@multiplier^(0+128),0
  6959  1099  289E               	goto	l599
  6960  109A  0822               	movf	___wmul@multiplicand^(0+128),w
  6961  109B  07A4               	addwf	___wmul@product^(0+128),f
  6962  109C  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  6963  109D  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  6964  109E                     l599:	
  6965  109E  3001               	movlw	1
  6966  109F                     u4515:	
  6967  109F  35A2               	lslf	___wmul@multiplicand^(0+128),f
  6968  10A0  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  6969  10A1  0B89               	decfsz	9,f
  6970  10A2  289F               	goto	u4515
  6971  10A3  3001               	movlw	1
  6972  10A4                     u4525:	
  6973  10A4  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  6974  10A5  0CA0               	rrf	___wmul@multiplier^(0+128),f
  6975  10A6  0B89               	decfsz	9,f
  6976  10A7  28A4               	goto	u4525
  6977  10A8  0820               	movf	___wmul@multiplier^(0+128),w
  6978  10A9  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  6979  10AA  1D03               	btfss	3,2
  6980  10AB  2898               	goto	l2907
  6981  10AC  0825               	movf	(___wmul@product+1)^(0+128),w
  6982  10AD  00A1               	movwf	(?___wmul+1)^(0+128)
  6983  10AE  0824               	movf	___wmul@product^(0+128),w
  6984  10AF  00A0               	movwf	?___wmul^(0+128)
  6985  10B0  0008               	return
  6986  10B1                     __end_of___wmul:	
  6987                           
  6988                           	psect	text17
  6989  1757                     __ptext17:	
  6990 ;; *************** function ___ftdiv *****************
  6991 ;; Defined at:
  6992 ;;		line 56 in file "/Applications/microchip/xc8/v1.35/sources/common/ftdiv.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  f2              3    8[BANK1 ] float 
  6995 ;;  f1              3   11[BANK1 ] float 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  f3              3   19[BANK1 ] float 
  6998 ;;  sign            1   23[BANK1 ] unsigned char 
  6999 ;;  exp             1   22[BANK1 ] unsigned char 
  7000 ;;  cntr            1   18[BANK1 ] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  3    8[BANK1 ] float 
  7003 ;; Registers used:
  7004 ;;		wreg, status,2, status,0, pclath, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7010 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;Total ram usage:       16 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    7
  7017 ;; This function calls:
  7018 ;;		___ftpack
  7019 ;; This function is called by:
  7020 ;;		_main
  7021 ;;		_atan2
  7022 ;;		_atan
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           
  7027                           ;psect for function ___ftdiv
  7028  1757                     ___ftdiv:	
  7029                           
  7030                           ;incstack = 0
  7031                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7032  1757  0021               	movlb	1	; select bank1
  7033  1758  082B               	movf	___ftdiv@f1^(0+128),w
  7034  1759  00AE               	movwf	??___ftdiv^(0+128)
  7035  175A  082C               	movf	(___ftdiv@f1+1)^(0+128),w
  7036  175B  00AF               	movwf	(??___ftdiv^(0+128)+1)
  7037  175C  082D               	movf	(___ftdiv@f1+2)^(0+128),w
  7038  175D  00B0               	movwf	(??___ftdiv^(0+128)+2)
  7039  175E  1003               	clrc
  7040  175F  0D2F               	rlf	(??___ftdiv^(0+128)+1),w
  7041  1760  0D30               	rlf	(??___ftdiv^(0+128)+2),w
  7042  1761  00B1               	movwf	(??___ftdiv+3)^(0+128)
  7043  1762  0831               	movf	(??___ftdiv+3)^(0+128),w
  7044  1763  00B6               	movwf	___ftdiv@exp^(0+128)
  7045  1764  0836               	movf	___ftdiv@exp^(0+128),w
  7046  1765  1D03               	btfss	3,2
  7047  1766  2F6E               	goto	l3125
  7048  1767  3000               	movlw	0
  7049  1768  00A8               	movwf	?___ftdiv^(0+128)
  7050  1769  3000               	movlw	0
  7051  176A  00A9               	movwf	(?___ftdiv+1)^(0+128)
  7052  176B  3000               	movlw	0
  7053  176C  00AA               	movwf	(?___ftdiv+2)^(0+128)
  7054  176D  0008               	return
  7055  176E                     l3125:	
  7056  176E  0828               	movf	___ftdiv@f2^(0+128),w
  7057  176F  00AE               	movwf	??___ftdiv^(0+128)
  7058  1770  0829               	movf	(___ftdiv@f2+1)^(0+128),w
  7059  1771  00AF               	movwf	(??___ftdiv^(0+128)+1)
  7060  1772  082A               	movf	(___ftdiv@f2+2)^(0+128),w
  7061  1773  00B0               	movwf	(??___ftdiv^(0+128)+2)
  7062  1774  1003               	clrc
  7063  1775  0D2F               	rlf	(??___ftdiv^(0+128)+1),w
  7064  1776  0D30               	rlf	(??___ftdiv^(0+128)+2),w
  7065  1777  00B1               	movwf	(??___ftdiv+3)^(0+128)
  7066  1778  0831               	movf	(??___ftdiv+3)^(0+128),w
  7067  1779  00B7               	movwf	___ftdiv@sign^(0+128)
  7068  177A  0837               	movf	___ftdiv@sign^(0+128),w
  7069  177B  1D03               	btfss	3,2
  7070  177C  2F84               	goto	l3131
  7071  177D  3000               	movlw	0
  7072  177E  00A8               	movwf	?___ftdiv^(0+128)
  7073  177F  3000               	movlw	0
  7074  1780  00A9               	movwf	(?___ftdiv+1)^(0+128)
  7075  1781  3000               	movlw	0
  7076  1782  00AA               	movwf	(?___ftdiv+2)^(0+128)
  7077  1783  0008               	return
  7078  1784                     l3131:	
  7079  1784  3000               	movlw	0
  7080  1785  00B3               	movwf	___ftdiv@f3^(0+128)
  7081  1786  3000               	movlw	0
  7082  1787  00B4               	movwf	(___ftdiv@f3+1)^(0+128)
  7083  1788  3000               	movlw	0
  7084  1789  00B5               	movwf	(___ftdiv@f3+2)^(0+128)
  7085  178A  3089               	movlw	137
  7086  178B  0737               	addwf	___ftdiv@sign^(0+128),w
  7087  178C  00AE               	movwf	??___ftdiv^(0+128)
  7088  178D  082E               	movf	??___ftdiv^(0+128),w
  7089  178E  02B6               	subwf	___ftdiv@exp^(0+128),f
  7090  178F  082B               	movf	___ftdiv@f1^(0+128),w
  7091  1790  00AE               	movwf	??___ftdiv^(0+128)
  7092  1791  082C               	movf	(___ftdiv@f1+1)^(0+128),w
  7093  1792  00AF               	movwf	(??___ftdiv^(0+128)+1)
  7094  1793  082D               	movf	(___ftdiv@f1+2)^(0+128),w
  7095  1794  00B0               	movwf	(??___ftdiv^(0+128)+2)
  7096  1795  3010               	movlw	16
  7097  1796                     u5055:	
  7098  1796  36B0               	lsrf	(??___ftdiv^(0+128)+2),f
  7099  1797  0CAF               	rrf	(??___ftdiv^(0+128)+1),f
  7100  1798  0CAE               	rrf	??___ftdiv^(0+128),f
  7101  1799  0B89               	decfsz	9,f
  7102  179A  2F96               	goto	u5055
  7103  179B  082E               	movf	??___ftdiv^(0+128),w
  7104  179C  00B1               	movwf	(??___ftdiv+3)^(0+128)
  7105  179D  0831               	movf	(??___ftdiv+3)^(0+128),w
  7106  179E  00B7               	movwf	___ftdiv@sign^(0+128)
  7107  179F  0828               	movf	___ftdiv@f2^(0+128),w
  7108  17A0  00AE               	movwf	??___ftdiv^(0+128)
  7109  17A1  0829               	movf	(___ftdiv@f2+1)^(0+128),w
  7110  17A2  00AF               	movwf	(??___ftdiv^(0+128)+1)
  7111  17A3  082A               	movf	(___ftdiv@f2+2)^(0+128),w
  7112  17A4  00B0               	movwf	(??___ftdiv^(0+128)+2)
  7113  17A5  3010               	movlw	16
  7114  17A6                     u5065:	
  7115  17A6  36B0               	lsrf	(??___ftdiv^(0+128)+2),f
  7116  17A7  0CAF               	rrf	(??___ftdiv^(0+128)+1),f
  7117  17A8  0CAE               	rrf	??___ftdiv^(0+128),f
  7118  17A9  0B89               	decfsz	9,f
  7119  17AA  2FA6               	goto	u5065
  7120  17AB  082E               	movf	??___ftdiv^(0+128),w
  7121  17AC  00B1               	movwf	(??___ftdiv+3)^(0+128)
  7122  17AD  0831               	movf	(??___ftdiv+3)^(0+128),w
  7123  17AE  06B7               	xorwf	___ftdiv@sign^(0+128),f
  7124  17AF  3080               	movlw	128
  7125  17B0  00AE               	movwf	??___ftdiv^(0+128)
  7126  17B1  082E               	movf	??___ftdiv^(0+128),w
  7127  17B2  05B7               	andwf	___ftdiv@sign^(0+128),f
  7128  17B3  17AC               	bsf	(___ftdiv@f1^(0+128)+1),7
  7129  17B4  30FF               	movlw	255
  7130  17B5  05AB               	andwf	___ftdiv@f1^(0+128),f
  7131  17B6  30FF               	movlw	255
  7132  17B7  05AC               	andwf	(___ftdiv@f1+1)^(0+128),f
  7133  17B8  3000               	movlw	0
  7134  17B9  05AD               	andwf	(___ftdiv@f1+2)^(0+128),f
  7135  17BA  17A9               	bsf	(___ftdiv@f2^(0+128)+1),7
  7136  17BB  30FF               	movlw	255
  7137  17BC  05A8               	andwf	___ftdiv@f2^(0+128),f
  7138  17BD  30FF               	movlw	255
  7139  17BE  05A9               	andwf	(___ftdiv@f2+1)^(0+128),f
  7140  17BF  3000               	movlw	0
  7141  17C0  05AA               	andwf	(___ftdiv@f2+2)^(0+128),f
  7142  17C1  3018               	movlw	24
  7143  17C2  00AE               	movwf	??___ftdiv^(0+128)
  7144  17C3  082E               	movf	??___ftdiv^(0+128),w
  7145  17C4  00B2               	movwf	___ftdiv@cntr^(0+128)
  7146  17C5                     l3145:	
  7147  17C5  3001               	movlw	1
  7148  17C6                     u5075:	
  7149  17C6  35B3               	lslf	___ftdiv@f3^(0+128),f
  7150  17C7  0DB4               	rlf	(___ftdiv@f3+1)^(0+128),f
  7151  17C8  0DB5               	rlf	(___ftdiv@f3+2)^(0+128),f
  7152  17C9  0B89               	decfsz	9,f
  7153  17CA  2FC6               	goto	u5075
  7154  17CB  082A               	movf	(___ftdiv@f2+2)^(0+128),w
  7155  17CC  022D               	subwf	(___ftdiv@f1+2)^(0+128),w
  7156  17CD  1D03               	skipz
  7157  17CE  2FD5               	goto	u5085
  7158  17CF  0829               	movf	(___ftdiv@f2+1)^(0+128),w
  7159  17D0  022C               	subwf	(___ftdiv@f1+1)^(0+128),w
  7160  17D1  1D03               	skipz
  7161  17D2  2FD5               	goto	u5085
  7162  17D3  0828               	movf	___ftdiv@f2^(0+128),w
  7163  17D4  022B               	subwf	___ftdiv@f1^(0+128),w
  7164  17D5                     u5085:	
  7165  17D5  1C03               	skipc
  7166  17D6  2FDE               	goto	l3153
  7167  17D7  0828               	movf	___ftdiv@f2^(0+128),w
  7168  17D8  02AB               	subwf	___ftdiv@f1^(0+128),f
  7169  17D9  0829               	movf	(___ftdiv@f2+1)^(0+128),w
  7170  17DA  3BAC               	subwfb	(___ftdiv@f1+1)^(0+128),f
  7171  17DB  082A               	movf	(___ftdiv@f2+2)^(0+128),w
  7172  17DC  3BAD               	subwfb	(___ftdiv@f1+2)^(0+128),f
  7173  17DD  1433               	bsf	___ftdiv@f3^(0+128),0
  7174  17DE                     l3153:	
  7175  17DE  3001               	movlw	1
  7176  17DF                     u5095:	
  7177  17DF  35AB               	lslf	___ftdiv@f1^(0+128),f
  7178  17E0  0DAC               	rlf	(___ftdiv@f1+1)^(0+128),f
  7179  17E1  0DAD               	rlf	(___ftdiv@f1+2)^(0+128),f
  7180  17E2  0B89               	decfsz	9,f
  7181  17E3  2FDF               	goto	u5095
  7182  17E4  3001               	movlw	1
  7183  17E5  02B2               	subwf	___ftdiv@cntr^(0+128),f
  7184  17E6  1D03               	btfss	3,2
  7185  17E7  2FC5               	goto	l3145
  7186  17E8  0833               	movf	___ftdiv@f3^(0+128),w
  7187  17E9  00A0               	movwf	___ftpack@arg^(0+128)
  7188  17EA  0834               	movf	(___ftdiv@f3+1)^(0+128),w
  7189  17EB  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  7190  17EC  0835               	movf	(___ftdiv@f3+2)^(0+128),w
  7191  17ED  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  7192  17EE  0836               	movf	___ftdiv@exp^(0+128),w
  7193  17EF  00AE               	movwf	??___ftdiv^(0+128)
  7194  17F0  082E               	movf	??___ftdiv^(0+128),w
  7195  17F1  00A3               	movwf	___ftpack@exp^(0+128)
  7196  17F2  0837               	movf	___ftdiv@sign^(0+128),w
  7197  17F3  00AF               	movwf	(??___ftdiv+1)^(0+128)
  7198  17F4  082F               	movf	(??___ftdiv+1)^(0+128),w
  7199  17F5  00A4               	movwf	___ftpack@sign^(0+128)
  7200  17F6  3195  258B         	fcall	___ftpack
  7201  17F8  0021               	movlb	1	; select bank1
  7202  17F9  0820               	movf	?___ftpack^(0+128),w
  7203  17FA  00A8               	movwf	?___ftdiv^(0+128)
  7204  17FB  0821               	movf	(?___ftpack+1)^(0+128),w
  7205  17FC  00A9               	movwf	(?___ftdiv+1)^(0+128)
  7206  17FD  0822               	movf	(?___ftpack+2)^(0+128),w
  7207  17FE  00AA               	movwf	(?___ftdiv+2)^(0+128)
  7208  17FF  0008               	return
  7209  1800                     __end_of___ftdiv:	
  7210                           
  7211                           	psect	text18
  7212  0800                     __ptext18:	
  7213 ;; *************** function ___ftsub *****************
  7214 ;; Defined at:
  7215 ;;		line 18 in file "/Applications/microchip/xc8/v1.35/sources/common/ftsub.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  f2              3   40[BANK1 ] float 
  7218 ;;  f1              3   43[BANK1 ] float 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  3   40[BANK1 ] float 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7230 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;Total ram usage:        6 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    8
  7237 ;; This function calls:
  7238 ;;		___ftadd
  7239 ;; This function is called by:
  7240 ;;		_atan2
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           
  7245                           ;psect for function ___ftsub
  7246  0800                     ___ftsub:	
  7247                           
  7248                           ;incstack = 0
  7249                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7250  0800  0021               	movlb	1	; select bank1
  7251  0801  084A               	movf	(___ftsub@f2+2)^(0+128),w
  7252  0802  0449               	iorwf	(___ftsub@f2+1)^(0+128),w
  7253  0803  0448               	iorwf	___ftsub@f2^(0+128),w
  7254  0804  1903               	skipnz
  7255  0805  2808               	goto	l3517
  7256  0806  3080               	movlw	128
  7257  0807  06CA               	xorwf	(___ftsub@f2+2)^(0+128),f
  7258  0808                     l3517:	
  7259  0808  084B               	movf	___ftsub@f1^(0+128),w
  7260  0809  00BB               	movwf	___ftadd@f1^(0+128)
  7261  080A  084C               	movf	(___ftsub@f1+1)^(0+128),w
  7262  080B  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  7263  080C  084D               	movf	(___ftsub@f1+2)^(0+128),w
  7264  080D  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  7265  080E  0848               	movf	___ftsub@f2^(0+128),w
  7266  080F  00BE               	movwf	___ftadd@f2^(0+128)
  7267  0810  0849               	movf	(___ftsub@f2+1)^(0+128),w
  7268  0811  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  7269  0812  084A               	movf	(___ftsub@f2+2)^(0+128),w
  7270  0813  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  7271  0814  3188  20D2         	fcall	___ftadd
  7272  0816  0021               	movlb	1	; select bank1
  7273  0817  083B               	movf	?___ftadd^(0+128),w
  7274  0818  00C8               	movwf	?___ftsub^(0+128)
  7275  0819  083C               	movf	(?___ftadd+1)^(0+128),w
  7276  081A  00C9               	movwf	(?___ftsub+1)^(0+128)
  7277  081B  083D               	movf	(?___ftadd+2)^(0+128),w
  7278  081C  00CA               	movwf	(?___ftsub+2)^(0+128)
  7279  081D  0008               	return
  7280  081E                     __end_of___ftsub:	
  7281                           
  7282                           	psect	text19
  7283  1FC0                     __ptext19:	
  7284 ;; *************** function _SYSTEM_Initialize *****************
  7285 ;; Defined at:
  7286 ;;		line 25 in file "Init.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;		None               void
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0, pclath, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    7
  7307 ;; This function calls:
  7308 ;;		_EUSART_Initialize
  7309 ;;		_OSCILLATOR_Initialize
  7310 ;;		_PIN_MANAGER_Initialize
  7311 ;;		_i2c_Init
  7312 ;; This function is called by:
  7313 ;;		_main
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           
  7318                           ;psect for function _SYSTEM_Initialize
  7319  1FC0                     _SYSTEM_Initialize:	
  7320                           
  7321                           ;Init.c: 26: OSCILLATOR_Initialize();
  7322                           
  7323                           ;incstack = 0
  7324                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7325  1FC0  319F  2784  319F   	fcall	_OSCILLATOR_Initialize
  7326                           
  7327                           ;Init.c: 27: PIN_MANAGER_Initialize();
  7328  1FC3  3192  2262  319F   	fcall	_PIN_MANAGER_Initialize
  7329                           
  7330                           ;Init.c: 28: EUSART_Initialize();
  7331  1FC6  3190  200F  319F   	fcall	_EUSART_Initialize
  7332                           
  7333                           ;Init.c: 29: i2c_Init();
  7334  1FC9  319F  27B4         	fcall	_i2c_Init
  7335  1FCB  0008               	return
  7336  1FCC                     __end_of_SYSTEM_Initialize:	
  7337                           
  7338                           	psect	text20
  7339  1FB4                     __ptext20:	
  7340 ;; *************** function _i2c_Init *****************
  7341 ;; Defined at:
  7342 ;;		line 11 in file "i2c.h"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  2  211[None  ] int 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;Total ram usage:        0 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    6
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		_SYSTEM_Initialize
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function _i2c_Init
  7372  1FB4                     _i2c_Init:	
  7373                           
  7374                           ;i2c.h: 15: TRISC3=1;
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _i2c_Init: [wreg+status,2]
  7378  1FB4  0021               	movlb	1	; select bank1
  7379  1FB5  158E               	bsf	14,3	;volatile
  7380                           
  7381                           ;i2c.h: 16: TRISC4=1;
  7382  1FB6  160E               	bsf	14,4	;volatile
  7383                           
  7384                           ;i2c.h: 18: SSP1CON1 = 0b00101000;
  7385  1FB7  3028               	movlw	40
  7386  1FB8  0024               	movlb	4	; select bank4
  7387  1FB9  0095               	movwf	21	;volatile
  7388                           
  7389                           ;i2c.h: 19: SSP1CON2 = 0x00;
  7390  1FBA  0196               	clrf	22	;volatile
  7391                           
  7392                           ;i2c.h: 21: SSP1ADD = 39;
  7393  1FBB  3027               	movlw	39
  7394  1FBC  0092               	movwf	18	;volatile
  7395                           
  7396                           ;i2c.h: 23: SSP1STAT = 0b11000000;
  7397  1FBD  30C0               	movlw	192
  7398  1FBE  0094               	movwf	20	;volatile
  7399  1FBF  0008               	return
  7400  1FC0                     __end_of_i2c_Init:	
  7401                           
  7402                           	psect	text21
  7403  1262                     __ptext21:	
  7404 ;; *************** function _PIN_MANAGER_Initialize *****************
  7405 ;; Defined at:
  7406 ;;		line 50 in file "pin_manager.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;		None
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;		None               void
  7413 ;; Registers used:
  7414 ;;		wreg, status,2
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;Total ram usage:        0 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    6
  7427 ;; This function calls:
  7428 ;;		Nothing
  7429 ;; This function is called by:
  7430 ;;		_SYSTEM_Initialize
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           
  7435                           ;psect for function _PIN_MANAGER_Initialize
  7436  1262                     _PIN_MANAGER_Initialize:	
  7437                           
  7438                           ;pin_manager.c: 51: LATA = 0x00;
  7439                           
  7440                           ;incstack = 0
  7441                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7442  1262  0022               	movlb	2	; select bank2
  7443  1263  018C               	clrf	12	;volatile
  7444                           
  7445                           ;pin_manager.c: 52: TRISA = 0xC0;
  7446  1264  30C0               	movlw	192
  7447  1265  0021               	movlb	1	; select bank1
  7448  1266  008C               	movwf	12	;volatile
  7449                           
  7450                           ;pin_manager.c: 53: ANSELA = 0x00;
  7451  1267  0023               	movlb	3	; select bank3
  7452  1268  018C               	clrf	12	;volatile
  7453                           
  7454                           ;pin_manager.c: 55: LATB = 0x00;
  7455  1269  0022               	movlb	2	; select bank2
  7456  126A  018D               	clrf	13	;volatile
  7457                           
  7458                           ;pin_manager.c: 56: TRISB = 0xFF;
  7459  126B  30FF               	movlw	255
  7460  126C  0021               	movlb	1	; select bank1
  7461  126D  008D               	movwf	13	;volatile
  7462                           
  7463                           ;pin_manager.c: 57: WPUB = 0x00;
  7464  126E  0024               	movlb	4	; select bank4
  7465  126F  018D               	clrf	13	;volatile
  7466                           
  7467                           ;pin_manager.c: 59: LATC = 0x18;
  7468  1270  3018               	movlw	24
  7469  1271  0022               	movlb	2	; select bank2
  7470  1272  008E               	movwf	14	;volatile
  7471                           
  7472                           ;pin_manager.c: 60: TRISC = 0xF8;
  7473  1273  30F8               	movlw	248
  7474  1274  0021               	movlb	1	; select bank1
  7475  1275  008E               	movwf	14	;volatile
  7476                           
  7477                           ;pin_manager.c: 62: LATD = 0x00;
  7478  1276  0022               	movlb	2	; select bank2
  7479  1277  018F               	clrf	15	;volatile
  7480                           
  7481                           ;pin_manager.c: 63: TRISD = 0x00;
  7482  1278  0021               	movlb	1	; select bank1
  7483  1279  018F               	clrf	15	;volatile
  7484                           
  7485                           ;pin_manager.c: 65: LATE = 0x00;
  7486  127A  0022               	movlb	2	; select bank2
  7487  127B  0190               	clrf	16	;volatile
  7488                           
  7489                           ;pin_manager.c: 66: TRISE = 0x00;
  7490  127C  0021               	movlb	1	; select bank1
  7491  127D  0190               	clrf	16	;volatile
  7492                           
  7493                           ;pin_manager.c: 67: ANSELE = 0x00;
  7494  127E  0023               	movlb	3	; select bank3
  7495  127F  0190               	clrf	16	;volatile
  7496                           
  7497                           ;pin_manager.c: 69: LATF = 0x00;
  7498  1280  0027               	movlb	7	; select bank7
  7499  1281  018C               	clrf	12	;volatile
  7500                           
  7501                           ;pin_manager.c: 70: TRISF = 0x00;
  7502  1282  0026               	movlb	6	; select bank6
  7503  1283  018C               	clrf	12	;volatile
  7504                           
  7505                           ;pin_manager.c: 71: ANSELF = 0x00;
  7506  1284  0028               	movlb	8	; select bank8
  7507  1285  018C               	clrf	12	;volatile
  7508                           
  7509                           ;pin_manager.c: 73: LATG = 0x00;
  7510  1286  0027               	movlb	7	; select bank7
  7511  1287  018D               	clrf	13	;volatile
  7512                           
  7513                           ;pin_manager.c: 74: TRISG = 0x30;
  7514  1288  3030               	movlw	48
  7515  1289  0026               	movlb	6	; select bank6
  7516  128A  008D               	movwf	13	;volatile
  7517                           
  7518                           ;pin_manager.c: 75: ANSELG = 0x10;
  7519  128B  3010               	movlw	16
  7520  128C  0028               	movlb	8	; select bank8
  7521  128D  008D               	movwf	13	;volatile
  7522                           
  7523                           ;pin_manager.c: 76: WPUG = 0x00;
  7524  128E  0029               	movlb	9	; select bank9
  7525  128F  018D               	clrf	13	;volatile
  7526                           
  7527                           ;pin_manager.c: 78: OPTION_REGbits.nWPUEN = 0x01;
  7528  1290  0021               	movlb	1	; select bank1
  7529  1291  1795               	bsf	21,7	;volatile
  7530                           
  7531                           ;pin_manager.c: 80: APFCON = 0x00;
  7532  1292  0022               	movlb	2	; select bank2
  7533  1293  019D               	clrf	29	;volatile
  7534  1294  0008               	return
  7535  1295                     __end_of_PIN_MANAGER_Initialize:	
  7536                           
  7537                           	psect	text22
  7538  1F84                     __ptext22:	
  7539 ;; *************** function _OSCILLATOR_Initialize *****************
  7540 ;; Defined at:
  7541 ;;		line 32 in file "Init.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;		None
  7546 ;; Return value:  Size  Location     Type
  7547 ;;		None               void
  7548 ;; Registers used:
  7549 ;;		wreg, status,2
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;Total ram usage:        0 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    6
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_SYSTEM_Initialize
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function _OSCILLATOR_Initialize
  7571  1F84                     _OSCILLATOR_Initialize:	
  7572                           
  7573                           ;Init.c: 34: OSCCON = 0x7A;
  7574                           
  7575                           ;incstack = 0
  7576                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7577  1F84  307A               	movlw	122
  7578  1F85  0021               	movlb	1	; select bank1
  7579  1F86  0099               	movwf	25	;volatile
  7580                           
  7581                           ;Init.c: 36: OSCSTAT = 0x00;
  7582  1F87  019A               	clrf	26	;volatile
  7583                           
  7584                           ;Init.c: 38: OSCTUNE = 0x00;
  7585  1F88  0198               	clrf	24	;volatile
  7586  1F89  0008               	return
  7587  1F8A                     __end_of_OSCILLATOR_Initialize:	
  7588                           
  7589                           	psect	text23
  7590  100F                     __ptext23:	
  7591 ;; *************** function _EUSART_Initialize *****************
  7592 ;; Defined at:
  7593 ;;		line 13 in file "eusart.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;		None
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;		None               void
  7600 ;; Registers used:
  7601 ;;		wreg, status,2
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;Total ram usage:        0 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    6
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_SYSTEM_Initialize
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function _EUSART_Initialize
  7623  100F                     _EUSART_Initialize:	
  7624                           
  7625                           ;eusart.c: 15: PIE1bits.RCIE = 0;
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  7629  100F  0021               	movlb	1	; select bank1
  7630  1010  1291               	bcf	17,5	;volatile
  7631                           
  7632                           ;eusart.c: 16: PIE1bits.TXIE = 0;
  7633  1011  1211               	bcf	17,4	;volatile
  7634                           
  7635                           ;eusart.c: 21: BAUD1CON = 0x4A;
  7636  1012  304A               	movlw	74
  7637  1013  0023               	movlb	3	; select bank3
  7638  1014  009F               	movwf	31	;volatile
  7639                           
  7640                           ;eusart.c: 24: RC1STA = 0x90;
  7641  1015  3090               	movlw	144
  7642  1016  009D               	movwf	29	;volatile
  7643                           
  7644                           ;eusart.c: 27: TX1STA = 0x26;
  7645  1017  3026               	movlw	38
  7646  1018  009E               	movwf	30	;volatile
  7647                           
  7648                           ;eusart.c: 30: SP1BRGL = 0x22;
  7649  1019  3022               	movlw	34
  7650  101A  009B               	movwf	27	;volatile
  7651                           
  7652                           ;eusart.c: 33: SP1BRGH = 0x00;
  7653  101B  019C               	clrf	28	;volatile
  7654                           
  7655                           ;eusart.c: 36: PIE1bits.RCIE = 1;
  7656  101C  0021               	movlb	1	; select bank1
  7657  101D  1691               	bsf	17,5	;volatile
  7658  101E  0008               	return
  7659  101F                     __end_of_EUSART_Initialize:	
  7660                           
  7661                           	psect	text24
  7662  1196                     __ptext24:	
  7663 ;; *************** function _LIS3MDL_init *****************
  7664 ;; Defined at:
  7665 ;;		line 15 in file "LIS3MDL.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;		None               void
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;Total ram usage:        1 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    9
  7686 ;; This function calls:
  7687 ;;		_LIS3MDL_Read_XY
  7688 ;;		_LIS3MDL_Wait
  7689 ;;		_LIS3MDL_Write
  7690 ;; This function is called by:
  7691 ;;		_main
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _LIS3MDL_init
  7697  1196                     _LIS3MDL_init:	
  7698                           
  7699                           ;LIS3MDL.c: 17: LIS3MDL_Write(0x20,0xFC);
  7700                           
  7701                           ;incstack = 0
  7702                           ; Regs used in _LIS3MDL_init: [wreg+status,2+status,0+pclath+cstack]
  7703  1196  30FC               	movlw	252
  7704  1197  0021               	movlb	1	; select bank1
  7705  1198  00EB               	movwf	??_LIS3MDL_init^(0+128)
  7706  1199  086B               	movf	??_LIS3MDL_init^(0+128),w
  7707  119A  00A1               	movwf	LIS3MDL_Write@data^(0+128)
  7708  119B  3020               	movlw	32
  7709  119C  3190  2066  3191   	fcall	_LIS3MDL_Write
  7710                           
  7711                           ;LIS3MDL.c: 18: LIS3MDL_Write(0x21,0x00);
  7712  119F  0021               	movlb	1	; select bank1
  7713  11A0  01A1               	clrf	LIS3MDL_Write@data^(0+128)
  7714  11A1  3021               	movlw	33
  7715  11A2  3190  2066  3191   	fcall	_LIS3MDL_Write
  7716                           
  7717                           ;LIS3MDL.c: 19: LIS3MDL_Write(0x22,0x00);
  7718  11A5  0021               	movlb	1	; select bank1
  7719  11A6  01A1               	clrf	LIS3MDL_Write@data^(0+128)
  7720  11A7  3022               	movlw	34
  7721  11A8  3190  2066  3191   	fcall	_LIS3MDL_Write
  7722                           
  7723                           ;LIS3MDL.c: 20: LIS3MDL_Write(0x24,0x40);
  7724  11AB  3040               	movlw	64
  7725  11AC  0021               	movlb	1	; select bank1
  7726  11AD  00EB               	movwf	??_LIS3MDL_init^(0+128)
  7727  11AE  086B               	movf	??_LIS3MDL_init^(0+128),w
  7728  11AF  00A1               	movwf	LIS3MDL_Write@data^(0+128)
  7729  11B0  3024               	movlw	36
  7730  11B1  3190  2066  3191   	fcall	_LIS3MDL_Write
  7731                           
  7732                           ;LIS3MDL.c: 23: LIS3MDL_Wait();
  7733  11B4  3191  21BA  3191   	fcall	_LIS3MDL_Wait
  7734                           
  7735                           ;LIS3MDL.c: 24: LIS3MDL_Read_XY();
  7736  11B7  318A  22C1         	fcall	_LIS3MDL_Read_XY
  7737  11B9  0008               	return
  7738  11BA                     __end_of_LIS3MDL_init:	
  7739                           
  7740                           	psect	text25
  7741  1066                     __ptext25:	
  7742 ;; *************** function _LIS3MDL_Write *****************
  7743 ;; Defined at:
  7744 ;;		line 28 in file "LIS3MDL.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  reg             1    wreg     unsigned char 
  7747 ;;  data            1    1[BANK1 ] unsigned char 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  reg             1    2[BANK1 ] unsigned char 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;		None               void
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0, pclath, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7759 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;Total ram usage:        2 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    8
  7766 ;; This function calls:
  7767 ;;		_i2c_Start
  7768 ;;		_i2c_Stop
  7769 ;;		_i2c_Write
  7770 ;; This function is called by:
  7771 ;;		_LIS3MDL_init
  7772 ;;		_LIS3MDL_selfTest
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _LIS3MDL_Write
  7778  1066                     _LIS3MDL_Write:	
  7779                           
  7780                           ;incstack = 0
  7781                           ; Regs used in _LIS3MDL_Write: [wreg+status,2+status,0+pclath+cstack]
  7782                           ;LIS3MDL_Write@reg stored from wreg
  7783  1066  0021               	movlb	1	; select bank1
  7784  1067  00A2               	movwf	LIS3MDL_Write@reg^(0+128)
  7785                           
  7786                           ;LIS3MDL.c: 30: i2c_Start();
  7787  1068  319F  277A  3190   	fcall	_i2c_Start
  7788                           
  7789                           ;LIS3MDL.c: 31: i2c_Write(0x3C);
  7790  106B  303C               	movlw	60
  7791  106C  319F  2798  3190   	fcall	_i2c_Write
  7792                           
  7793                           ;LIS3MDL.c: 32: i2c_Write(reg);
  7794  106F  0021               	movlb	1	; select bank1
  7795  1070  0822               	movf	LIS3MDL_Write@reg^(0+128),w
  7796  1071  319F  2798  3190   	fcall	_i2c_Write
  7797                           
  7798                           ;LIS3MDL.c: 33: i2c_Write(data);
  7799  1074  0021               	movlb	1	; select bank1
  7800  1075  0821               	movf	LIS3MDL_Write@data^(0+128),w
  7801  1076  319F  2798  3190   	fcall	_i2c_Write
  7802                           
  7803                           ;LIS3MDL.c: 34: i2c_Stop();
  7804  1079  319F  277F         	fcall	_i2c_Stop
  7805  107B  0008               	return
  7806  107C                     __end_of_LIS3MDL_Write:	
  7807                           
  7808                           	psect	text26
  7809  11BA                     __ptext26:	
  7810 ;; *************** function _LIS3MDL_Wait *****************
  7811 ;; Defined at:
  7812 ;;		line 127 in file "LIS3MDL.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;		None
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  ZYXDA           1    4[BANK1 ] unsigned char 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;		None               void
  7819 ;; Registers used:
  7820 ;;		wreg, status,2, status,0, pclath, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;Total ram usage:        2 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    8
  7833 ;; This function calls:
  7834 ;;		_i2c_Read
  7835 ;;		_i2c_Restart
  7836 ;;		_i2c_Start
  7837 ;;		_i2c_Stop
  7838 ;;		_i2c_Write
  7839 ;; This function is called by:
  7840 ;;		_main
  7841 ;;		_LIS3MDL_init
  7842 ;;		_LIS3MDL_Average10_XY
  7843 ;;		_LIS3MDL_selfTest
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           
  7848                           ;psect for function _LIS3MDL_Wait
  7849  11BA                     _LIS3MDL_Wait:	
  7850                           
  7851                           ;LIS3MDL.c: 129: bool ZYXDA=0;
  7852                           
  7853                           ;incstack = 0
  7854                           ; Regs used in _LIS3MDL_Wait: [wreg+status,2+status,0+pclath+cstack]
  7855  11BA  0021               	movlb	1	; select bank1
  7856  11BB  01A4               	clrf	LIS3MDL_Wait@ZYXDA^(0+128)
  7857  11BC                     l3661:	
  7858                           ;LIS3MDL.c: 130: while(!ZYXDA)
  7859                           
  7860  11BC  0021               	movlb	1	; select bank1
  7861  11BD  0824               	movf	LIS3MDL_Wait@ZYXDA^(0+128),w
  7862  11BE  1D03               	btfss	3,2
  7863  11BF  0008               	return
  7864                           
  7865                           ;LIS3MDL.c: 131: {
  7866                           ;LIS3MDL.c: 132: i2c_Start();
  7867  11C0  319F  277A  3191   	fcall	_i2c_Start
  7868                           
  7869                           ;LIS3MDL.c: 133: i2c_Write(0x3C);
  7870  11C3  303C               	movlw	60
  7871  11C4  319F  2798  3191   	fcall	_i2c_Write
  7872                           
  7873                           ;LIS3MDL.c: 134: i2c_Write(0x27);
  7874  11C7  3027               	movlw	39
  7875  11C8  319F  2798  3191   	fcall	_i2c_Write
  7876                           
  7877                           ;LIS3MDL.c: 135: i2c_Restart();
  7878  11CB  319F  2775  3191   	fcall	_i2c_Restart
  7879                           
  7880                           ;LIS3MDL.c: 136: i2c_Write(0x3D);
  7881  11CE  303D               	movlw	61
  7882  11CF  319F  2798  3191   	fcall	_i2c_Write
  7883                           
  7884                           ;LIS3MDL.c: 137: ZYXDA =(i2c_Read(0))& 0x08;
  7885  11D2  3000               	movlw	0
  7886  11D3  3190  20EB  3191   	fcall	_i2c_Read
  7887  11D6  3908               	andlw	8
  7888  11D7  0021               	movlb	1	; select bank1
  7889  11D8  00A3               	movwf	??_LIS3MDL_Wait^(0+128)
  7890  11D9  0823               	movf	??_LIS3MDL_Wait^(0+128),w
  7891  11DA  00A4               	movwf	LIS3MDL_Wait@ZYXDA^(0+128)
  7892                           
  7893                           ;LIS3MDL.c: 138: i2c_Stop();
  7894  11DB  319F  277F  3191   	fcall	_i2c_Stop
  7895  11DE  29BC               	goto	l3661
  7896  11DF                     __end_of_LIS3MDL_Wait:	
  7897                           
  7898                           	psect	text27
  7899  0AC1                     __ptext27:	
  7900 ;; *************** function _LIS3MDL_Read_XY *****************
  7901 ;; Defined at:
  7902 ;;		line 38 in file "LIS3MDL.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;		None
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  Y_H             1    3[BANK2 ] unsigned char 
  7907 ;;  Y_L             1    2[BANK2 ] unsigned char 
  7908 ;;  X_H             1    1[BANK2 ] unsigned char 
  7909 ;;  X_L             1    0[BANK2 ] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;		None               void
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, pclath, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Totals:         0       0       5       6       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;Total ram usage:       11 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    8
  7926 ;; This function calls:
  7927 ;;		___awtoft
  7928 ;;		___ftadd
  7929 ;;		___ftmul
  7930 ;;		___fttol
  7931 ;;		_i2c_Read
  7932 ;;		_i2c_Restart
  7933 ;;		_i2c_Start
  7934 ;;		_i2c_Stop
  7935 ;;		_i2c_Write
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;;		_LIS3MDL_init
  7939 ;;		_LIS3MDL_Average10_XY
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _LIS3MDL_Read_XY
  7945  0AC1                     _LIS3MDL_Read_XY:	
  7946                           
  7947                           ;LIS3MDL.c: 40: unsigned char X_L, X_H, Y_L, Y_H;
  7948                           ;LIS3MDL.c: 41: vX=0;
  7949                           
  7950                           ;incstack = 0
  7951                           ; Regs used in _LIS3MDL_Read_XY: [wreg+status,2+status,0+pclath+cstack]
  7952  0AC1  0022               	movlb	2	; select bank2
  7953  0AC2  01E5               	clrf	_vX^(0+256)
  7954  0AC3  01E6               	clrf	(_vX+1)^(0+256)
  7955                           
  7956                           ;LIS3MDL.c: 42: vY=0;
  7957  0AC4  01E7               	clrf	_vY^(0+256)
  7958  0AC5  01E8               	clrf	(_vY+1)^(0+256)
  7959                           
  7960                           ;LIS3MDL.c: 44: i2c_Start();
  7961  0AC6  319F  277A  318A   	fcall	_i2c_Start
  7962                           
  7963                           ;LIS3MDL.c: 45: i2c_Write(0x3C);
  7964  0AC9  303C               	movlw	60
  7965  0ACA  319F  2798  318A   	fcall	_i2c_Write
  7966                           
  7967                           ;LIS3MDL.c: 46: i2c_Write(0x28);
  7968  0ACD  3028               	movlw	40
  7969  0ACE  319F  2798  318A   	fcall	_i2c_Write
  7970                           
  7971                           ;LIS3MDL.c: 47: i2c_Restart();
  7972  0AD1  319F  2775  318A   	fcall	_i2c_Restart
  7973                           
  7974                           ;LIS3MDL.c: 48: i2c_Write(0x3D);
  7975  0AD4  303D               	movlw	61
  7976  0AD5  319F  2798  318A   	fcall	_i2c_Write
  7977                           
  7978                           ;LIS3MDL.c: 49: X_L=i2c_Read(1);
  7979  0AD8  3001               	movlw	1
  7980  0AD9  3190  20EB  318A   	fcall	_i2c_Read
  7981  0ADC  0021               	movlb	1	; select bank1
  7982  0ADD  00E6               	movwf	??_LIS3MDL_Read_XY^(0+128)
  7983  0ADE  0866               	movf	??_LIS3MDL_Read_XY^(0+128),w
  7984  0ADF  0022               	movlb	2	; select bank2
  7985  0AE0  00A0               	movwf	LIS3MDL_Read_XY@X_L^(0+256)
  7986                           
  7987                           ;LIS3MDL.c: 50: X_H=i2c_Read(1);
  7988  0AE1  3001               	movlw	1
  7989  0AE2  3190  20EB  318A   	fcall	_i2c_Read
  7990  0AE5  0021               	movlb	1	; select bank1
  7991  0AE6  00E6               	movwf	??_LIS3MDL_Read_XY^(0+128)
  7992  0AE7  0866               	movf	??_LIS3MDL_Read_XY^(0+128),w
  7993  0AE8  0022               	movlb	2	; select bank2
  7994  0AE9  00A1               	movwf	LIS3MDL_Read_XY@X_H^(0+256)
  7995                           
  7996                           ;LIS3MDL.c: 51: Y_L=i2c_Read(1);
  7997  0AEA  3001               	movlw	1
  7998  0AEB  3190  20EB  318A   	fcall	_i2c_Read
  7999  0AEE  0021               	movlb	1	; select bank1
  8000  0AEF  00E6               	movwf	??_LIS3MDL_Read_XY^(0+128)
  8001  0AF0  0866               	movf	??_LIS3MDL_Read_XY^(0+128),w
  8002  0AF1  0022               	movlb	2	; select bank2
  8003  0AF2  00A2               	movwf	LIS3MDL_Read_XY@Y_L^(0+256)
  8004                           
  8005                           ;LIS3MDL.c: 52: Y_H=i2c_Read(0);
  8006  0AF3  3000               	movlw	0
  8007  0AF4  3190  20EB  318A   	fcall	_i2c_Read
  8008  0AF7  0021               	movlb	1	; select bank1
  8009  0AF8  00E6               	movwf	??_LIS3MDL_Read_XY^(0+128)
  8010  0AF9  0866               	movf	??_LIS3MDL_Read_XY^(0+128),w
  8011  0AFA  0022               	movlb	2	; select bank2
  8012  0AFB  00A3               	movwf	LIS3MDL_Read_XY@Y_H^(0+256)
  8013                           
  8014                           ;LIS3MDL.c: 53: i2c_Stop();
  8015  0AFC  319F  277F  318A   	fcall	_i2c_Stop
  8016                           
  8017                           ;LIS3MDL.c: 55: vX=(X_H<<8)+X_L;
  8018  0AFF  0022               	movlb	2	; select bank2
  8019  0B00  0820               	movf	LIS3MDL_Read_XY@X_L^(0+256),w
  8020  0B01  0021               	movlb	1	; select bank1
  8021  0B02  00E6               	movwf	??_LIS3MDL_Read_XY^(0+128)
  8022  0B03  01E7               	clrf	(??_LIS3MDL_Read_XY^(0+128)+1)
  8023  0B04  0022               	movlb	2	; select bank2
  8024  0B05  0821               	movf	LIS3MDL_Read_XY@X_H^(0+256),w
  8025  0B06  0021               	movlb	1	; select bank1
  8026  0B07  00E8               	movwf	(??_LIS3MDL_Read_XY+2)^(0+128)
  8027  0B08  01E9               	clrf	((??_LIS3MDL_Read_XY+2)^(0+128)+1)
  8028  0B09  0868               	movf	(??_LIS3MDL_Read_XY+2)^(0+128),w
  8029  0B0A  00E9               	movwf	((??_LIS3MDL_Read_XY+2)^(0+128)+1)
  8030  0B0B  01E8               	clrf	(??_LIS3MDL_Read_XY+2)^(0+128)
  8031  0B0C  0866               	movf	??_LIS3MDL_Read_XY^(0+128),w
  8032  0B0D  0768               	addwf	(??_LIS3MDL_Read_XY+2)^(0+128),w
  8033  0B0E  0022               	movlb	2	; select bank2
  8034  0B0F  00E5               	movwf	_vX^(0+256)
  8035  0B10  0021               	movlb	1	; select bank1
  8036  0B11  0867               	movf	(??_LIS3MDL_Read_XY+1)^(0+128),w
  8037  0B12  3D69               	addwfc	(??_LIS3MDL_Read_XY+3)^(0+128),w
  8038  0B13  0022               	movlb	2	; select bank2
  8039  0B14  00E6               	movwf	(_vX+1)^(0+256)
  8040                           
  8041                           ;LIS3MDL.c: 56: vY=(Y_H<<8)+Y_L;
  8042  0B15  0822               	movf	LIS3MDL_Read_XY@Y_L^(0+256),w
  8043  0B16  0021               	movlb	1	; select bank1
  8044  0B17  00E6               	movwf	??_LIS3MDL_Read_XY^(0+128)
  8045  0B18  01E7               	clrf	(??_LIS3MDL_Read_XY^(0+128)+1)
  8046  0B19  0022               	movlb	2	; select bank2
  8047  0B1A  0823               	movf	LIS3MDL_Read_XY@Y_H^(0+256),w
  8048  0B1B  0021               	movlb	1	; select bank1
  8049  0B1C  00E8               	movwf	(??_LIS3MDL_Read_XY+2)^(0+128)
  8050  0B1D  01E9               	clrf	((??_LIS3MDL_Read_XY+2)^(0+128)+1)
  8051  0B1E  0868               	movf	(??_LIS3MDL_Read_XY+2)^(0+128),w
  8052  0B1F  00E9               	movwf	((??_LIS3MDL_Read_XY+2)^(0+128)+1)
  8053  0B20  01E8               	clrf	(??_LIS3MDL_Read_XY+2)^(0+128)
  8054  0B21  0866               	movf	??_LIS3MDL_Read_XY^(0+128),w
  8055  0B22  0768               	addwf	(??_LIS3MDL_Read_XY+2)^(0+128),w
  8056  0B23  0022               	movlb	2	; select bank2
  8057  0B24  00E7               	movwf	_vY^(0+256)
  8058  0B25  0021               	movlb	1	; select bank1
  8059  0B26  0867               	movf	(??_LIS3MDL_Read_XY+1)^(0+128),w
  8060  0B27  3D69               	addwfc	(??_LIS3MDL_Read_XY+3)^(0+128),w
  8061  0B28  0022               	movlb	2	; select bank2
  8062  0B29  00E8               	movwf	(_vY+1)^(0+256)
  8063                           
  8064                           ;LIS3MDL.c: 58: vX=(int)(Xsf*vX)+Xoff;
  8065  0B2A  0866               	movf	(_vX+1)^(0+256),w
  8066  0B2B  0021               	movlb	1	; select bank1
  8067  0B2C  00A9               	movwf	(___awtoft@c+1)^(0+128)
  8068  0B2D  0022               	movlb	2	; select bank2
  8069  0B2E  0865               	movf	_vX^(0+256),w
  8070  0B2F  0021               	movlb	1	; select bank1
  8071  0B30  00A8               	movwf	___awtoft@c^(0+128)
  8072  0B31  3191  210B  318A   	fcall	___awtoft
  8073  0B34  0021               	movlb	1	; select bank1
  8074  0B35  0828               	movf	?___awtoft^(0+128),w
  8075  0B36  00CB               	movwf	___ftmul@f2^(0+128)
  8076  0B37  0829               	movf	(?___awtoft+1)^(0+128),w
  8077  0B38  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  8078  0B39  082A               	movf	(?___awtoft+2)^(0+128),w
  8079  0B3A  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  8080  0B3B  0022               	movlb	2	; select bank2
  8081  0B3C  085A               	movf	_Xsf^(0+256),w
  8082  0B3D  0021               	movlb	1	; select bank1
  8083  0B3E  00C8               	movwf	___ftmul@f1^(0+128)
  8084  0B3F  0022               	movlb	2	; select bank2
  8085  0B40  085B               	movf	(_Xsf+1)^(0+256),w
  8086  0B41  0021               	movlb	1	; select bank1
  8087  0B42  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  8088  0B43  0022               	movlb	2	; select bank2
  8089  0B44  085C               	movf	(_Xsf+2)^(0+256),w
  8090  0B45  0021               	movlb	1	; select bank1
  8091  0B46  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  8092  0B47  3188  201E  318A   	fcall	___ftmul
  8093  0B4A  0021               	movlb	1	; select bank1
  8094  0B4B  0848               	movf	?___ftmul^(0+128),w
  8095  0B4C  00D8               	movwf	___fttol@f1^(0+128)
  8096  0B4D  0849               	movf	(?___ftmul+1)^(0+128),w
  8097  0B4E  00D9               	movwf	(___fttol@f1+1)^(0+128)
  8098  0B4F  084A               	movf	(?___ftmul+2)^(0+128),w
  8099  0B50  00DA               	movwf	(___fttol@f1+2)^(0+128)
  8100  0B51  3196  26D0  318A   	fcall	___fttol
  8101  0B54  0021               	movlb	1	; select bank1
  8102  0B55  0859               	movf	(?___fttol^(0+128)+1),w
  8103  0B56  0022               	movlb	2	; select bank2
  8104  0B57  00A5               	movwf	(_LIS3MDL_Read_XY$1139+1)^(0+256)
  8105  0B58  0021               	movlb	1	; select bank1
  8106  0B59  0858               	movf	?___fttol^(0+128),w
  8107  0B5A  0022               	movlb	2	; select bank2
  8108  0B5B  00A4               	movwf	_LIS3MDL_Read_XY$1139^(0+256)
  8109                           
  8110                           ;LIS3MDL.c: 58: vX=(int)(Xsf*vX)+Xoff;
  8111  0B5C  0825               	movf	(_LIS3MDL_Read_XY$1139+1)^(0+256),w
  8112  0B5D  0021               	movlb	1	; select bank1
  8113  0B5E  00A9               	movwf	(___awtoft@c+1)^(0+128)
  8114  0B5F  0022               	movlb	2	; select bank2
  8115  0B60  0824               	movf	_LIS3MDL_Read_XY$1139^(0+256),w
  8116  0B61  0021               	movlb	1	; select bank1
  8117  0B62  00A8               	movwf	___awtoft@c^(0+128)
  8118  0B63  3191  210B  318A   	fcall	___awtoft
  8119  0B66  0021               	movlb	1	; select bank1
  8120  0B67  0828               	movf	?___awtoft^(0+128),w
  8121  0B68  00BE               	movwf	___ftadd@f2^(0+128)
  8122  0B69  0829               	movf	(?___awtoft+1)^(0+128),w
  8123  0B6A  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  8124  0B6B  082A               	movf	(?___awtoft+2)^(0+128),w
  8125  0B6C  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  8126  0B6D  0022               	movlb	2	; select bank2
  8127  0B6E  0857               	movf	_Xoff^(0+256),w
  8128  0B6F  0021               	movlb	1	; select bank1
  8129  0B70  00BB               	movwf	___ftadd@f1^(0+128)
  8130  0B71  0022               	movlb	2	; select bank2
  8131  0B72  0858               	movf	(_Xoff+1)^(0+256),w
  8132  0B73  0021               	movlb	1	; select bank1
  8133  0B74  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  8134  0B75  0022               	movlb	2	; select bank2
  8135  0B76  0859               	movf	(_Xoff+2)^(0+256),w
  8136  0B77  0021               	movlb	1	; select bank1
  8137  0B78  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  8138  0B79  3188  20D2  318A   	fcall	___ftadd
  8139  0B7C  0021               	movlb	1	; select bank1
  8140  0B7D  083B               	movf	?___ftadd^(0+128),w
  8141  0B7E  00D8               	movwf	___fttol@f1^(0+128)
  8142  0B7F  083C               	movf	(?___ftadd+1)^(0+128),w
  8143  0B80  00D9               	movwf	(___fttol@f1+1)^(0+128)
  8144  0B81  083D               	movf	(?___ftadd+2)^(0+128),w
  8145  0B82  00DA               	movwf	(___fttol@f1+2)^(0+128)
  8146  0B83  3196  26D0  318A   	fcall	___fttol
  8147  0B86  0021               	movlb	1	; select bank1
  8148  0B87  0859               	movf	(?___fttol^(0+128)+1),w
  8149  0B88  0022               	movlb	2	; select bank2
  8150  0B89  00E6               	movwf	(_vX+1)^(0+256)
  8151  0B8A  0021               	movlb	1	; select bank1
  8152  0B8B  0858               	movf	?___fttol^(0+128),w
  8153  0B8C  0022               	movlb	2	; select bank2
  8154  0B8D  00E5               	movwf	_vX^(0+256)
  8155                           
  8156                           ;LIS3MDL.c: 59: vY=(int)(Ysf*vY)+Yoff;
  8157  0B8E  0868               	movf	(_vY+1)^(0+256),w
  8158  0B8F  0021               	movlb	1	; select bank1
  8159  0B90  00A9               	movwf	(___awtoft@c+1)^(0+128)
  8160  0B91  0022               	movlb	2	; select bank2
  8161  0B92  0867               	movf	_vY^(0+256),w
  8162  0B93  0021               	movlb	1	; select bank1
  8163  0B94  00A8               	movwf	___awtoft@c^(0+128)
  8164  0B95  3191  210B  318A   	fcall	___awtoft
  8165  0B98  0021               	movlb	1	; select bank1
  8166  0B99  0828               	movf	?___awtoft^(0+128),w
  8167  0B9A  00CB               	movwf	___ftmul@f2^(0+128)
  8168  0B9B  0829               	movf	(?___awtoft+1)^(0+128),w
  8169  0B9C  00CC               	movwf	(___ftmul@f2+1)^(0+128)
  8170  0B9D  082A               	movf	(?___awtoft+2)^(0+128),w
  8171  0B9E  00CD               	movwf	(___ftmul@f2+2)^(0+128)
  8172  0B9F  0022               	movlb	2	; select bank2
  8173  0BA0  0860               	movf	_Ysf^(0+256),w
  8174  0BA1  0021               	movlb	1	; select bank1
  8175  0BA2  00C8               	movwf	___ftmul@f1^(0+128)
  8176  0BA3  0022               	movlb	2	; select bank2
  8177  0BA4  0861               	movf	(_Ysf+1)^(0+256),w
  8178  0BA5  0021               	movlb	1	; select bank1
  8179  0BA6  00C9               	movwf	(___ftmul@f1+1)^(0+128)
  8180  0BA7  0022               	movlb	2	; select bank2
  8181  0BA8  0862               	movf	(_Ysf+2)^(0+256),w
  8182  0BA9  0021               	movlb	1	; select bank1
  8183  0BAA  00CA               	movwf	(___ftmul@f1+2)^(0+128)
  8184  0BAB  3188  201E  318A   	fcall	___ftmul
  8185  0BAE  0021               	movlb	1	; select bank1
  8186  0BAF  0848               	movf	?___ftmul^(0+128),w
  8187  0BB0  00D8               	movwf	___fttol@f1^(0+128)
  8188  0BB1  0849               	movf	(?___ftmul+1)^(0+128),w
  8189  0BB2  00D9               	movwf	(___fttol@f1+1)^(0+128)
  8190  0BB3  084A               	movf	(?___ftmul+2)^(0+128),w
  8191  0BB4  00DA               	movwf	(___fttol@f1+2)^(0+128)
  8192  0BB5  3196  26D0  318A   	fcall	___fttol
  8193  0BB8  0021               	movlb	1	; select bank1
  8194  0BB9  0859               	movf	(?___fttol^(0+128)+1),w
  8195  0BBA  0022               	movlb	2	; select bank2
  8196  0BBB  00A5               	movwf	(_LIS3MDL_Read_XY$1139+1)^(0+256)
  8197  0BBC  0021               	movlb	1	; select bank1
  8198  0BBD  0858               	movf	?___fttol^(0+128),w
  8199  0BBE  0022               	movlb	2	; select bank2
  8200  0BBF  00A4               	movwf	_LIS3MDL_Read_XY$1139^(0+256)
  8201                           
  8202                           ;LIS3MDL.c: 59: vY=(int)(Ysf*vY)+Yoff;
  8203  0BC0  0825               	movf	(_LIS3MDL_Read_XY$1139+1)^(0+256),w
  8204  0BC1  0021               	movlb	1	; select bank1
  8205  0BC2  00A9               	movwf	(___awtoft@c+1)^(0+128)
  8206  0BC3  0022               	movlb	2	; select bank2
  8207  0BC4  0824               	movf	_LIS3MDL_Read_XY$1139^(0+256),w
  8208  0BC5  0021               	movlb	1	; select bank1
  8209  0BC6  00A8               	movwf	___awtoft@c^(0+128)
  8210  0BC7  3191  210B  318A   	fcall	___awtoft
  8211  0BCA  0021               	movlb	1	; select bank1
  8212  0BCB  0828               	movf	?___awtoft^(0+128),w
  8213  0BCC  00BE               	movwf	___ftadd@f2^(0+128)
  8214  0BCD  0829               	movf	(?___awtoft+1)^(0+128),w
  8215  0BCE  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  8216  0BCF  082A               	movf	(?___awtoft+2)^(0+128),w
  8217  0BD0  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  8218  0BD1  0022               	movlb	2	; select bank2
  8219  0BD2  085D               	movf	_Yoff^(0+256),w
  8220  0BD3  0021               	movlb	1	; select bank1
  8221  0BD4  00BB               	movwf	___ftadd@f1^(0+128)
  8222  0BD5  0022               	movlb	2	; select bank2
  8223  0BD6  085E               	movf	(_Yoff+1)^(0+256),w
  8224  0BD7  0021               	movlb	1	; select bank1
  8225  0BD8  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  8226  0BD9  0022               	movlb	2	; select bank2
  8227  0BDA  085F               	movf	(_Yoff+2)^(0+256),w
  8228  0BDB  0021               	movlb	1	; select bank1
  8229  0BDC  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  8230  0BDD  3188  20D2  318A   	fcall	___ftadd
  8231  0BE0  0021               	movlb	1	; select bank1
  8232  0BE1  083B               	movf	?___ftadd^(0+128),w
  8233  0BE2  00D8               	movwf	___fttol@f1^(0+128)
  8234  0BE3  083C               	movf	(?___ftadd+1)^(0+128),w
  8235  0BE4  00D9               	movwf	(___fttol@f1+1)^(0+128)
  8236  0BE5  083D               	movf	(?___ftadd+2)^(0+128),w
  8237  0BE6  00DA               	movwf	(___fttol@f1+2)^(0+128)
  8238  0BE7  3196  26D0         	fcall	___fttol
  8239  0BE9  0021               	movlb	1	; select bank1
  8240  0BEA  0859               	movf	(?___fttol^(0+128)+1),w
  8241  0BEB  0022               	movlb	2	; select bank2
  8242  0BEC  00E8               	movwf	(_vY+1)^(0+256)
  8243  0BED  0021               	movlb	1	; select bank1
  8244  0BEE  0858               	movf	?___fttol^(0+128),w
  8245  0BEF  0022               	movlb	2	; select bank2
  8246  0BF0  00E7               	movwf	_vY^(0+256)
  8247  0BF1  0008               	return
  8248  0BF2                     __end_of_LIS3MDL_Read_XY:	
  8249                           
  8250                           	psect	text28
  8251  16D0                     __ptext28:	
  8252 ;; *************** function ___fttol *****************
  8253 ;; Defined at:
  8254 ;;		line 44 in file "/Applications/microchip/xc8/v1.35/sources/common/fttol.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  f1              3   56[BANK1 ] float 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  lval            4   65[BANK1 ] unsigned long 
  8259 ;;  exp1            1   69[BANK1 ] unsigned char 
  8260 ;;  sign1           1   64[BANK1 ] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  4   56[BANK1 ] long 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:       14 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    6
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_LIS3MDL_Read_XY
  8281 ;;		_LIS3MDL_Average10_XY
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function ___fttol
  8287  16D0                     ___fttol:	
  8288                           
  8289                           ;incstack = 0
  8290                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8291  16D0  0021               	movlb	1	; select bank1
  8292  16D1  0858               	movf	___fttol@f1^(0+128),w
  8293  16D2  00DC               	movwf	??___fttol^(0+128)
  8294  16D3  0859               	movf	(___fttol@f1+1)^(0+128),w
  8295  16D4  00DD               	movwf	(??___fttol^(0+128)+1)
  8296  16D5  085A               	movf	(___fttol@f1+2)^(0+128),w
  8297  16D6  00DE               	movwf	(??___fttol^(0+128)+2)
  8298  16D7  1003               	clrc
  8299  16D8  0D5D               	rlf	(??___fttol^(0+128)+1),w
  8300  16D9  0D5E               	rlf	(??___fttol^(0+128)+2),w
  8301  16DA  00DF               	movwf	(??___fttol+3)^(0+128)
  8302  16DB  085F               	movf	(??___fttol+3)^(0+128),w
  8303  16DC  00E5               	movwf	___fttol@exp1^(0+128)
  8304  16DD  0865               	movf	___fttol@exp1^(0+128),w
  8305  16DE  1D03               	btfss	3,2
  8306  16DF  2EE9               	goto	l3527
  8307  16E0  3000               	movlw	0
  8308  16E1  00DB               	movwf	(?___fttol+3)^(0+128)
  8309  16E2  3000               	movlw	0
  8310  16E3  00DA               	movwf	(?___fttol+2)^(0+128)
  8311  16E4  3000               	movlw	0
  8312  16E5  00D9               	movwf	(?___fttol+1)^(0+128)
  8313  16E6  3000               	movlw	0
  8314  16E7  00D8               	movwf	?___fttol^(0+128)
  8315  16E8  0008               	return
  8316  16E9                     l3527:	
  8317  16E9  0858               	movf	___fttol@f1^(0+128),w
  8318  16EA  00DC               	movwf	??___fttol^(0+128)
  8319  16EB  0859               	movf	(___fttol@f1+1)^(0+128),w
  8320  16EC  00DD               	movwf	(??___fttol^(0+128)+1)
  8321  16ED  085A               	movf	(___fttol@f1+2)^(0+128),w
  8322  16EE  00DE               	movwf	(??___fttol^(0+128)+2)
  8323  16EF  3017               	movlw	23
  8324  16F0                     u5745:	
  8325  16F0  36DE               	lsrf	(??___fttol^(0+128)+2),f
  8326  16F1  0CDD               	rrf	(??___fttol^(0+128)+1),f
  8327  16F2  0CDC               	rrf	??___fttol^(0+128),f
  8328  16F3  0B89               	decfsz	9,f
  8329  16F4  2EF0               	goto	u5745
  8330  16F5  085C               	movf	??___fttol^(0+128),w
  8331  16F6  00DF               	movwf	(??___fttol+3)^(0+128)
  8332  16F7  085F               	movf	(??___fttol+3)^(0+128),w
  8333  16F8  00E0               	movwf	___fttol@sign1^(0+128)
  8334  16F9  17D9               	bsf	(___fttol@f1^(0+128)+1),7
  8335  16FA  30FF               	movlw	255
  8336  16FB  05D8               	andwf	___fttol@f1^(0+128),f
  8337  16FC  30FF               	movlw	255
  8338  16FD  05D9               	andwf	(___fttol@f1+1)^(0+128),f
  8339  16FE  3000               	movlw	0
  8340  16FF  05DA               	andwf	(___fttol@f1+2)^(0+128),f
  8341  1700  0858               	movf	___fttol@f1^(0+128),w
  8342  1701  00E1               	movwf	___fttol@lval^(0+128)
  8343  1702  0859               	movf	(___fttol@f1+1)^(0+128),w
  8344  1703  00E2               	movwf	(___fttol@lval^(0+128)+1)
  8345  1704  085A               	movf	(___fttol@f1+2)^(0+128),w
  8346  1705  00E3               	movwf	(___fttol@lval^(0+128)+2)
  8347  1706  01E4               	clrf	(___fttol@lval^(0+128)+3)
  8348  1707  308E               	movlw	142
  8349  1708  02E5               	subwf	___fttol@exp1^(0+128),f
  8350  1709  1FE5               	btfss	___fttol@exp1^(0+128),7
  8351  170A  2F27               	goto	l3547
  8352  170B  0865               	movf	___fttol@exp1^(0+128),w
  8353  170C  3A80               	xorlw	128
  8354  170D  3E8F               	addlw	143
  8355  170E  1803               	skipnc
  8356  170F  2F19               	goto	l3545
  8357  1710  3000               	movlw	0
  8358  1711  00DB               	movwf	(?___fttol+3)^(0+128)
  8359  1712  3000               	movlw	0
  8360  1713  00DA               	movwf	(?___fttol+2)^(0+128)
  8361  1714  3000               	movlw	0
  8362  1715  00D9               	movwf	(?___fttol+1)^(0+128)
  8363  1716  3000               	movlw	0
  8364  1717  00D8               	movwf	?___fttol^(0+128)
  8365  1718  0008               	return
  8366  1719                     l3545:	
  8367  1719  3001               	movlw	1
  8368  171A                     u5775:	
  8369  171A  36E4               	lsrf	(___fttol@lval+3)^(0+128),f
  8370  171B  0CE3               	rrf	(___fttol@lval+2)^(0+128),f
  8371  171C  0CE2               	rrf	(___fttol@lval+1)^(0+128),f
  8372  171D  0CE1               	rrf	___fttol@lval^(0+128),f
  8373  171E  0B89               	decfsz	9,f
  8374  171F  2F1A               	goto	u5775
  8375  1720  3001               	movlw	1
  8376  1721  00DC               	movwf	??___fttol^(0+128)
  8377  1722  085C               	movf	??___fttol^(0+128),w
  8378  1723  07E5               	addwf	___fttol@exp1^(0+128),f
  8379  1724  1903               	btfsc	3,2
  8380  1725  2F40               	goto	l3555
  8381  1726  2F19               	goto	l3545
  8382  1727                     l3547:	
  8383  1727  3018               	movlw	24
  8384  1728  0265               	subwf	___fttol@exp1^(0+128),w
  8385  1729  1C03               	skipc
  8386  172A  2F3D               	goto	l879
  8387  172B  3000               	movlw	0
  8388  172C  00DB               	movwf	(?___fttol+3)^(0+128)
  8389  172D  3000               	movlw	0
  8390  172E  00DA               	movwf	(?___fttol+2)^(0+128)
  8391  172F  3000               	movlw	0
  8392  1730  00D9               	movwf	(?___fttol+1)^(0+128)
  8393  1731  3000               	movlw	0
  8394  1732  00D8               	movwf	?___fttol^(0+128)
  8395  1733  0008               	return
  8396  1734                     l3553:	
  8397  1734  3001               	movlw	1
  8398  1735                     u5805:	
  8399  1735  35E1               	lslf	___fttol@lval^(0+128),f
  8400  1736  0DE2               	rlf	(___fttol@lval+1)^(0+128),f
  8401  1737  0DE3               	rlf	(___fttol@lval+2)^(0+128),f
  8402  1738  0DE4               	rlf	(___fttol@lval+3)^(0+128),f
  8403  1739  0B89               	decfsz	9,f
  8404  173A  2F35               	goto	u5805
  8405  173B  3001               	movlw	1
  8406  173C  02E5               	subwf	___fttol@exp1^(0+128),f
  8407  173D                     l879:	
  8408  173D  0865               	movf	___fttol@exp1^(0+128),w
  8409  173E  1D03               	btfss	3,2
  8410  173F  2F34               	goto	l3553
  8411  1740                     l3555:	
  8412  1740  0860               	movf	___fttol@sign1^(0+128),w
  8413  1741  1903               	btfsc	3,2
  8414  1742  2F4E               	goto	l3559
  8415  1743  09E1               	comf	___fttol@lval^(0+128),f
  8416  1744  09E2               	comf	(___fttol@lval+1)^(0+128),f
  8417  1745  09E3               	comf	(___fttol@lval+2)^(0+128),f
  8418  1746  09E4               	comf	(___fttol@lval+3)^(0+128),f
  8419  1747  0AE1               	incf	___fttol@lval^(0+128),f
  8420  1748  1903               	skipnz
  8421  1749  0AE2               	incf	(___fttol@lval+1)^(0+128),f
  8422  174A  1903               	skipnz
  8423  174B  0AE3               	incf	(___fttol@lval+2)^(0+128),f
  8424  174C  1903               	skipnz
  8425  174D  0AE4               	incf	(___fttol@lval+3)^(0+128),f
  8426  174E                     l3559:	
  8427  174E  0864               	movf	(___fttol@lval+3)^(0+128),w
  8428  174F  00DB               	movwf	(?___fttol+3)^(0+128)
  8429  1750  0863               	movf	(___fttol@lval+2)^(0+128),w
  8430  1751  00DA               	movwf	(?___fttol+2)^(0+128)
  8431  1752  0862               	movf	(___fttol@lval+1)^(0+128),w
  8432  1753  00D9               	movwf	(?___fttol+1)^(0+128)
  8433  1754  0861               	movf	___fttol@lval^(0+128),w
  8434  1755  00D8               	movwf	?___fttol^(0+128)
  8435  1756  0008               	return
  8436  1757                     __end_of___fttol:	
  8437                           
  8438                           	psect	text29
  8439  081E                     __ptext29:	
  8440 ;; *************** function ___ftmul *****************
  8441 ;; Defined at:
  8442 ;;		line 62 in file "/Applications/microchip/xc8/v1.35/sources/common/ftmul.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  f1              3   40[BANK1 ] float 
  8445 ;;  f2              3   43[BANK1 ] float 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
  8448 ;;  sign            1   55[BANK1 ] unsigned char 
  8449 ;;  cntr            1   54[BANK1 ] unsigned char 
  8450 ;;  exp             1   50[BANK1 ] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  3   40[BANK1 ] float 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0, pclath, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8460 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;Total ram usage:       16 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    7
  8467 ;; This function calls:
  8468 ;;		___ftpack
  8469 ;; This function is called by:
  8470 ;;		_main
  8471 ;;		_LIS3MDL_Read_XY
  8472 ;;		_atan
  8473 ;;		_eval_poly
  8474 ;;		_LIS3MDL_Average10_XY
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           
  8479                           ;psect for function ___ftmul
  8480  081E                     ___ftmul:	
  8481                           
  8482                           ;incstack = 0
  8483                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8484  081E  0021               	movlb	1	; select bank1
  8485  081F  0848               	movf	___ftmul@f1^(0+128),w
  8486  0820  00CE               	movwf	??___ftmul^(0+128)
  8487  0821  0849               	movf	(___ftmul@f1+1)^(0+128),w
  8488  0822  00CF               	movwf	(??___ftmul^(0+128)+1)
  8489  0823  084A               	movf	(___ftmul@f1+2)^(0+128),w
  8490  0824  00D0               	movwf	(??___ftmul^(0+128)+2)
  8491  0825  1003               	clrc
  8492  0826  0D4F               	rlf	(??___ftmul^(0+128)+1),w
  8493  0827  0D50               	rlf	(??___ftmul^(0+128)+2),w
  8494  0828  00D1               	movwf	(??___ftmul+3)^(0+128)
  8495  0829  0851               	movf	(??___ftmul+3)^(0+128),w
  8496  082A  00D2               	movwf	___ftmul@exp^(0+128)
  8497  082B  0852               	movf	___ftmul@exp^(0+128),w
  8498  082C  1D03               	btfss	3,2
  8499  082D  2835               	goto	l3015
  8500  082E  3000               	movlw	0
  8501  082F  00C8               	movwf	?___ftmul^(0+128)
  8502  0830  3000               	movlw	0
  8503  0831  00C9               	movwf	(?___ftmul+1)^(0+128)
  8504  0832  3000               	movlw	0
  8505  0833  00CA               	movwf	(?___ftmul+2)^(0+128)
  8506  0834  0008               	return
  8507  0835                     l3015:	
  8508  0835  084B               	movf	___ftmul@f2^(0+128),w
  8509  0836  00CE               	movwf	??___ftmul^(0+128)
  8510  0837  084C               	movf	(___ftmul@f2+1)^(0+128),w
  8511  0838  00CF               	movwf	(??___ftmul^(0+128)+1)
  8512  0839  084D               	movf	(___ftmul@f2+2)^(0+128),w
  8513  083A  00D0               	movwf	(??___ftmul^(0+128)+2)
  8514  083B  1003               	clrc
  8515  083C  0D4F               	rlf	(??___ftmul^(0+128)+1),w
  8516  083D  0D50               	rlf	(??___ftmul^(0+128)+2),w
  8517  083E  00D1               	movwf	(??___ftmul+3)^(0+128)
  8518  083F  0851               	movf	(??___ftmul+3)^(0+128),w
  8519  0840  00D7               	movwf	___ftmul@sign^(0+128)
  8520  0841  0857               	movf	___ftmul@sign^(0+128),w
  8521  0842  1D03               	btfss	3,2
  8522  0843  284B               	goto	l3021
  8523  0844  3000               	movlw	0
  8524  0845  00C8               	movwf	?___ftmul^(0+128)
  8525  0846  3000               	movlw	0
  8526  0847  00C9               	movwf	(?___ftmul+1)^(0+128)
  8527  0848  3000               	movlw	0
  8528  0849  00CA               	movwf	(?___ftmul+2)^(0+128)
  8529  084A  0008               	return
  8530  084B                     l3021:	
  8531  084B  0857               	movf	___ftmul@sign^(0+128),w
  8532  084C  3E7B               	addlw	123
  8533  084D  00CE               	movwf	??___ftmul^(0+128)
  8534  084E  084E               	movf	??___ftmul^(0+128),w
  8535  084F  07D2               	addwf	___ftmul@exp^(0+128),f
  8536  0850  0848               	movf	___ftmul@f1^(0+128),w
  8537  0851  00CE               	movwf	??___ftmul^(0+128)
  8538  0852  0849               	movf	(___ftmul@f1+1)^(0+128),w
  8539  0853  00CF               	movwf	(??___ftmul^(0+128)+1)
  8540  0854  084A               	movf	(___ftmul@f1+2)^(0+128),w
  8541  0855  00D0               	movwf	(??___ftmul^(0+128)+2)
  8542  0856  3010               	movlw	16
  8543  0857                     u4825:	
  8544  0857  36D0               	lsrf	(??___ftmul^(0+128)+2),f
  8545  0858  0CCF               	rrf	(??___ftmul^(0+128)+1),f
  8546  0859  0CCE               	rrf	??___ftmul^(0+128),f
  8547  085A  0B89               	decfsz	9,f
  8548  085B  2857               	goto	u4825
  8549  085C  084E               	movf	??___ftmul^(0+128),w
  8550  085D  00D1               	movwf	(??___ftmul+3)^(0+128)
  8551  085E  0851               	movf	(??___ftmul+3)^(0+128),w
  8552  085F  00D7               	movwf	___ftmul@sign^(0+128)
  8553  0860  084B               	movf	___ftmul@f2^(0+128),w
  8554  0861  00CE               	movwf	??___ftmul^(0+128)
  8555  0862  084C               	movf	(___ftmul@f2+1)^(0+128),w
  8556  0863  00CF               	movwf	(??___ftmul^(0+128)+1)
  8557  0864  084D               	movf	(___ftmul@f2+2)^(0+128),w
  8558  0865  00D0               	movwf	(??___ftmul^(0+128)+2)
  8559  0866  3010               	movlw	16
  8560  0867                     u4835:	
  8561  0867  36D0               	lsrf	(??___ftmul^(0+128)+2),f
  8562  0868  0CCF               	rrf	(??___ftmul^(0+128)+1),f
  8563  0869  0CCE               	rrf	??___ftmul^(0+128),f
  8564  086A  0B89               	decfsz	9,f
  8565  086B  2867               	goto	u4835
  8566  086C  084E               	movf	??___ftmul^(0+128),w
  8567  086D  00D1               	movwf	(??___ftmul+3)^(0+128)
  8568  086E  0851               	movf	(??___ftmul+3)^(0+128),w
  8569  086F  06D7               	xorwf	___ftmul@sign^(0+128),f
  8570  0870  3080               	movlw	128
  8571  0871  00CE               	movwf	??___ftmul^(0+128)
  8572  0872  084E               	movf	??___ftmul^(0+128),w
  8573  0873  05D7               	andwf	___ftmul@sign^(0+128),f
  8574  0874  17C9               	bsf	(___ftmul@f1^(0+128)+1),7
  8575  0875  17CC               	bsf	(___ftmul@f2^(0+128)+1),7
  8576  0876  30FF               	movlw	255
  8577  0877  05CB               	andwf	___ftmul@f2^(0+128),f
  8578  0878  30FF               	movlw	255
  8579  0879  05CC               	andwf	(___ftmul@f2+1)^(0+128),f
  8580  087A  3000               	movlw	0
  8581  087B  05CD               	andwf	(___ftmul@f2+2)^(0+128),f
  8582  087C  3000               	movlw	0
  8583  087D  00D3               	movwf	___ftmul@f3_as_product^(0+128)
  8584  087E  3000               	movlw	0
  8585  087F  00D4               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8586  0880  3000               	movlw	0
  8587  0881  00D5               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8588  0882  3007               	movlw	7
  8589  0883  00CE               	movwf	??___ftmul^(0+128)
  8590  0884  084E               	movf	??___ftmul^(0+128),w
  8591  0885  00D6               	movwf	___ftmul@cntr^(0+128)
  8592  0886                     l3033:	
  8593  0886  1C48               	btfss	___ftmul@f1^(0+128),0
  8594  0887  288E               	goto	l3037
  8595  0888  084B               	movf	___ftmul@f2^(0+128),w
  8596  0889  07D3               	addwf	___ftmul@f3_as_product^(0+128),f
  8597  088A  084C               	movf	(___ftmul@f2+1)^(0+128),w
  8598  088B  3DD4               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8599  088C  084D               	movf	(___ftmul@f2+2)^(0+128),w
  8600  088D  3DD5               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8601  088E                     l3037:	
  8602  088E  3001               	movlw	1
  8603  088F                     u4855:	
  8604  088F  36CA               	lsrf	(___ftmul@f1+2)^(0+128),f
  8605  0890  0CC9               	rrf	(___ftmul@f1+1)^(0+128),f
  8606  0891  0CC8               	rrf	___ftmul@f1^(0+128),f
  8607  0892  0B89               	decfsz	9,f
  8608  0893  288F               	goto	u4855
  8609  0894  3001               	movlw	1
  8610  0895                     u4865:	
  8611  0895  35CB               	lslf	___ftmul@f2^(0+128),f
  8612  0896  0DCC               	rlf	(___ftmul@f2+1)^(0+128),f
  8613  0897  0DCD               	rlf	(___ftmul@f2+2)^(0+128),f
  8614  0898  0B89               	decfsz	9,f
  8615  0899  2895               	goto	u4865
  8616  089A  3001               	movlw	1
  8617  089B  02D6               	subwf	___ftmul@cntr^(0+128),f
  8618  089C  1D03               	btfss	3,2
  8619  089D  2886               	goto	l3033
  8620  089E  3009               	movlw	9
  8621  089F  00CE               	movwf	??___ftmul^(0+128)
  8622  08A0  084E               	movf	??___ftmul^(0+128),w
  8623  08A1  00D6               	movwf	___ftmul@cntr^(0+128)
  8624  08A2                     l3045:	
  8625  08A2  1C48               	btfss	___ftmul@f1^(0+128),0
  8626  08A3  28AA               	goto	l3049
  8627  08A4  084B               	movf	___ftmul@f2^(0+128),w
  8628  08A5  07D3               	addwf	___ftmul@f3_as_product^(0+128),f
  8629  08A6  084C               	movf	(___ftmul@f2+1)^(0+128),w
  8630  08A7  3DD4               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8631  08A8  084D               	movf	(___ftmul@f2+2)^(0+128),w
  8632  08A9  3DD5               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8633  08AA                     l3049:	
  8634  08AA  3001               	movlw	1
  8635  08AB                     u4895:	
  8636  08AB  36CA               	lsrf	(___ftmul@f1+2)^(0+128),f
  8637  08AC  0CC9               	rrf	(___ftmul@f1+1)^(0+128),f
  8638  08AD  0CC8               	rrf	___ftmul@f1^(0+128),f
  8639  08AE  0B89               	decfsz	9,f
  8640  08AF  28AB               	goto	u4895
  8641  08B0  3001               	movlw	1
  8642  08B1                     u4905:	
  8643  08B1  36D5               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8644  08B2  0CD4               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8645  08B3  0CD3               	rrf	___ftmul@f3_as_product^(0+128),f
  8646  08B4  0B89               	decfsz	9,f
  8647  08B5  28B1               	goto	u4905
  8648  08B6  3001               	movlw	1
  8649  08B7  02D6               	subwf	___ftmul@cntr^(0+128),f
  8650  08B8  1D03               	btfss	3,2
  8651  08B9  28A2               	goto	l3045
  8652  08BA  0853               	movf	___ftmul@f3_as_product^(0+128),w
  8653  08BB  00A0               	movwf	___ftpack@arg^(0+128)
  8654  08BC  0854               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8655  08BD  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8656  08BE  0855               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  8657  08BF  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8658  08C0  0852               	movf	___ftmul@exp^(0+128),w
  8659  08C1  00CE               	movwf	??___ftmul^(0+128)
  8660  08C2  084E               	movf	??___ftmul^(0+128),w
  8661  08C3  00A3               	movwf	___ftpack@exp^(0+128)
  8662  08C4  0857               	movf	___ftmul@sign^(0+128),w
  8663  08C5  00CF               	movwf	(??___ftmul+1)^(0+128)
  8664  08C6  084F               	movf	(??___ftmul+1)^(0+128),w
  8665  08C7  00A4               	movwf	___ftpack@sign^(0+128)
  8666  08C8  3195  258B         	fcall	___ftpack
  8667  08CA  0021               	movlb	1	; select bank1
  8668  08CB  0820               	movf	?___ftpack^(0+128),w
  8669  08CC  00C8               	movwf	?___ftmul^(0+128)
  8670  08CD  0821               	movf	(?___ftpack+1)^(0+128),w
  8671  08CE  00C9               	movwf	(?___ftmul+1)^(0+128)
  8672  08CF  0822               	movf	(?___ftpack+2)^(0+128),w
  8673  08D0  00CA               	movwf	(?___ftmul+2)^(0+128)
  8674  08D1  0008               	return
  8675  08D2                     __end_of___ftmul:	
  8676                           
  8677                           	psect	text30
  8678  08D2                     __ptext30:	
  8679 ;; *************** function ___ftadd *****************
  8680 ;; Defined at:
  8681 ;;		line 86 in file "/Applications/microchip/xc8/v1.35/sources/common/ftadd.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  f1              3   27[BANK1 ] float 
  8684 ;;  f2              3   30[BANK1 ] float 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  exp1            1   39[BANK1 ] unsigned char 
  8687 ;;  exp2            1   38[BANK1 ] unsigned char 
  8688 ;;  sign            1   37[BANK1 ] unsigned char 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  3   27[BANK1 ] float 
  8691 ;; Registers used:
  8692 ;;		wreg, status,2, status,0, pclath, cstack
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8698 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;Total ram usage:       13 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    7
  8705 ;; This function calls:
  8706 ;;		___ftpack
  8707 ;; This function is called by:
  8708 ;;		_main
  8709 ;;		_LIS3MDL_Read_XY
  8710 ;;		_atan2
  8711 ;;		___ftsub
  8712 ;;		_atan
  8713 ;;		_eval_poly
  8714 ;;		_LIS3MDL_Average10_XY
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           
  8719                           ;psect for function ___ftadd
  8720  08D2                     ___ftadd:	
  8721                           
  8722                           ;incstack = 0
  8723                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8724  08D2  0021               	movlb	1	; select bank1
  8725  08D3  083B               	movf	___ftadd@f1^(0+128),w
  8726  08D4  00C1               	movwf	??___ftadd^(0+128)
  8727  08D5  083C               	movf	(___ftadd@f1+1)^(0+128),w
  8728  08D6  00C2               	movwf	(??___ftadd^(0+128)+1)
  8729  08D7  083D               	movf	(___ftadd@f1+2)^(0+128),w
  8730  08D8  00C3               	movwf	(??___ftadd^(0+128)+2)
  8731  08D9  1003               	clrc
  8732  08DA  0D42               	rlf	(??___ftadd^(0+128)+1),w
  8733  08DB  0D43               	rlf	(??___ftadd^(0+128)+2),w
  8734  08DC  00C4               	movwf	(??___ftadd+3)^(0+128)
  8735  08DD  0844               	movf	(??___ftadd+3)^(0+128),w
  8736  08DE  00C7               	movwf	___ftadd@exp1^(0+128)
  8737  08DF  083E               	movf	___ftadd@f2^(0+128),w
  8738  08E0  00C1               	movwf	??___ftadd^(0+128)
  8739  08E1  083F               	movf	(___ftadd@f2+1)^(0+128),w
  8740  08E2  00C2               	movwf	(??___ftadd^(0+128)+1)
  8741  08E3  0840               	movf	(___ftadd@f2+2)^(0+128),w
  8742  08E4  00C3               	movwf	(??___ftadd^(0+128)+2)
  8743  08E5  1003               	clrc
  8744  08E6  0D42               	rlf	(??___ftadd^(0+128)+1),w
  8745  08E7  0D43               	rlf	(??___ftadd^(0+128)+2),w
  8746  08E8  00C4               	movwf	(??___ftadd+3)^(0+128)
  8747  08E9  0844               	movf	(??___ftadd+3)^(0+128),w
  8748  08EA  00C6               	movwf	___ftadd@exp2^(0+128)
  8749  08EB  0847               	movf	___ftadd@exp1^(0+128),w
  8750  08EC  1903               	btfsc	3,2
  8751  08ED  28FA               	goto	l2925
  8752  08EE  0846               	movf	___ftadd@exp2^(0+128),w
  8753  08EF  0247               	subwf	___ftadd@exp1^(0+128),w
  8754  08F0  1803               	skipnc
  8755  08F1  2901               	goto	l2929
  8756  08F2  0347               	decf	___ftadd@exp1^(0+128),w
  8757  08F3  3AFF               	xorlw	255
  8758  08F4  0746               	addwf	___ftadd@exp2^(0+128),w
  8759  08F5  00C1               	movwf	??___ftadd^(0+128)
  8760  08F6  3019               	movlw	25
  8761  08F7  0241               	subwf	??___ftadd^(0+128),w
  8762  08F8  1C03               	skipc
  8763  08F9  2901               	goto	l2929
  8764  08FA                     l2925:	
  8765  08FA  083E               	movf	___ftadd@f2^(0+128),w
  8766  08FB  00BB               	movwf	?___ftadd^(0+128)
  8767  08FC  083F               	movf	(___ftadd@f2+1)^(0+128),w
  8768  08FD  00BC               	movwf	(?___ftadd+1)^(0+128)
  8769  08FE  0840               	movf	(___ftadd@f2+2)^(0+128),w
  8770  08FF  00BD               	movwf	(?___ftadd+2)^(0+128)
  8771  0900  0008               	return
  8772  0901                     l2929:	
  8773  0901  0846               	movf	___ftadd@exp2^(0+128),w
  8774  0902  1903               	btfsc	3,2
  8775  0903  0008               	return
  8776  0904  0847               	movf	___ftadd@exp1^(0+128),w
  8777  0905  0246               	subwf	___ftadd@exp2^(0+128),w
  8778  0906  1803               	skipnc
  8779  0907  2910               	goto	l2935
  8780  0908  0346               	decf	___ftadd@exp2^(0+128),w
  8781  0909  3AFF               	xorlw	255
  8782  090A  0747               	addwf	___ftadd@exp1^(0+128),w
  8783  090B  00C1               	movwf	??___ftadd^(0+128)
  8784  090C  3019               	movlw	25
  8785  090D  0241               	subwf	??___ftadd^(0+128),w
  8786  090E  1803               	btfsc	3,0
  8787  090F  0008               	return
  8788  0910                     l2935:	
  8789  0910  3006               	movlw	6
  8790  0911  00C1               	movwf	??___ftadd^(0+128)
  8791  0912  0841               	movf	??___ftadd^(0+128),w
  8792  0913  00C5               	movwf	___ftadd@sign^(0+128)
  8793  0914  1BBD               	btfsc	(___ftadd@f1+2)^(0+128),7
  8794  0915  17C5               	bsf	___ftadd@sign^(0+128),7
  8795  0916  1BC0               	btfsc	(___ftadd@f2+2)^(0+128),7
  8796  0917  1745               	bsf	___ftadd@sign^(0+128),6
  8797  0918  17BC               	bsf	(___ftadd@f1^(0+128)+1),7
  8798  0919  30FF               	movlw	255
  8799  091A  05BB               	andwf	___ftadd@f1^(0+128),f
  8800  091B  30FF               	movlw	255
  8801  091C  05BC               	andwf	(___ftadd@f1+1)^(0+128),f
  8802  091D  3000               	movlw	0
  8803  091E  05BD               	andwf	(___ftadd@f1+2)^(0+128),f
  8804  091F  17BF               	bsf	(___ftadd@f2^(0+128)+1),7
  8805  0920  30FF               	movlw	255
  8806  0921  05BE               	andwf	___ftadd@f2^(0+128),f
  8807  0922  30FF               	movlw	255
  8808  0923  05BF               	andwf	(___ftadd@f2+1)^(0+128),f
  8809  0924  3000               	movlw	0
  8810  0925  05C0               	andwf	(___ftadd@f2+2)^(0+128),f
  8811  0926  0846               	movf	___ftadd@exp2^(0+128),w
  8812  0927  0247               	subwf	___ftadd@exp1^(0+128),w
  8813  0928  1803               	skipnc
  8814  0929  294C               	goto	l2957
  8815  092A                     l2947:	
  8816  092A  3001               	movlw	1
  8817  092B                     u4635:	
  8818  092B  35BE               	lslf	___ftadd@f2^(0+128),f
  8819  092C  0DBF               	rlf	(___ftadd@f2+1)^(0+128),f
  8820  092D  0DC0               	rlf	(___ftadd@f2+2)^(0+128),f
  8821  092E  0B89               	decfsz	9,f
  8822  092F  292B               	goto	u4635
  8823  0930  3001               	movlw	1
  8824  0931  02C6               	subwf	___ftadd@exp2^(0+128),f
  8825  0932  0846               	movf	___ftadd@exp2^(0+128),w
  8826  0933  0647               	xorwf	___ftadd@exp1^(0+128),w
  8827  0934  1903               	skipnz
  8828  0935  2947               	goto	l2955
  8829  0936  3001               	movlw	1
  8830  0937  02C5               	subwf	___ftadd@sign^(0+128),f
  8831  0938  0845               	movf	___ftadd@sign^(0+128),w
  8832  0939  3907               	andlw	7
  8833  093A  1903               	btfsc	3,2
  8834  093B  2947               	goto	l2955
  8835  093C  292A               	goto	l2947
  8836  093D                     l2953:	
  8837  093D  3001               	movlw	1
  8838  093E                     u4665:	
  8839  093E  36BD               	lsrf	(___ftadd@f1+2)^(0+128),f
  8840  093F  0CBC               	rrf	(___ftadd@f1+1)^(0+128),f
  8841  0940  0CBB               	rrf	___ftadd@f1^(0+128),f
  8842  0941  0B89               	decfsz	9,f
  8843  0942  293E               	goto	u4665
  8844  0943  3001               	movlw	1
  8845  0944  00C1               	movwf	??___ftadd^(0+128)
  8846  0945  0841               	movf	??___ftadd^(0+128),w
  8847  0946  07C7               	addwf	___ftadd@exp1^(0+128),f
  8848  0947                     l2955:	
  8849  0947  0847               	movf	___ftadd@exp1^(0+128),w
  8850  0948  0646               	xorwf	___ftadd@exp2^(0+128),w
  8851  0949  1903               	btfsc	3,2
  8852  094A  2971               	goto	l819
  8853  094B  293D               	goto	l2953
  8854  094C                     l2957:	
  8855  094C  0847               	movf	___ftadd@exp1^(0+128),w
  8856  094D  0246               	subwf	___ftadd@exp2^(0+128),w
  8857  094E  1803               	skipnc
  8858  094F  2971               	goto	l819
  8859  0950                     l2959:	
  8860  0950  3001               	movlw	1
  8861  0951                     u4695:	
  8862  0951  35BB               	lslf	___ftadd@f1^(0+128),f
  8863  0952  0DBC               	rlf	(___ftadd@f1+1)^(0+128),f
  8864  0953  0DBD               	rlf	(___ftadd@f1+2)^(0+128),f
  8865  0954  0B89               	decfsz	9,f
  8866  0955  2951               	goto	u4695
  8867  0956  3001               	movlw	1
  8868  0957  02C7               	subwf	___ftadd@exp1^(0+128),f
  8869  0958  0846               	movf	___ftadd@exp2^(0+128),w
  8870  0959  0647               	xorwf	___ftadd@exp1^(0+128),w
  8871  095A  1903               	skipnz
  8872  095B  296D               	goto	l2967
  8873  095C  3001               	movlw	1
  8874  095D  02C5               	subwf	___ftadd@sign^(0+128),f
  8875  095E  0845               	movf	___ftadd@sign^(0+128),w
  8876  095F  3907               	andlw	7
  8877  0960  1903               	btfsc	3,2
  8878  0961  296D               	goto	l2967
  8879  0962  2950               	goto	l2959
  8880  0963                     l2965:	
  8881  0963  3001               	movlw	1
  8882  0964                     u4725:	
  8883  0964  36C0               	lsrf	(___ftadd@f2+2)^(0+128),f
  8884  0965  0CBF               	rrf	(___ftadd@f2+1)^(0+128),f
  8885  0966  0CBE               	rrf	___ftadd@f2^(0+128),f
  8886  0967  0B89               	decfsz	9,f
  8887  0968  2964               	goto	u4725
  8888  0969  3001               	movlw	1
  8889  096A  00C1               	movwf	??___ftadd^(0+128)
  8890  096B  0841               	movf	??___ftadd^(0+128),w
  8891  096C  07C6               	addwf	___ftadd@exp2^(0+128),f
  8892  096D                     l2967:	
  8893  096D  0847               	movf	___ftadd@exp1^(0+128),w
  8894  096E  0646               	xorwf	___ftadd@exp2^(0+128),w
  8895  096F  1D03               	skipz
  8896  0970  2963               	goto	l2965
  8897  0971                     l819:	
  8898  0971  1FC5               	btfss	___ftadd@sign^(0+128),7
  8899  0972  2983               	goto	l2971
  8900  0973  30FF               	movlw	255
  8901  0974  06BB               	xorwf	___ftadd@f1^(0+128),f
  8902  0975  30FF               	movlw	255
  8903  0976  06BC               	xorwf	(___ftadd@f1+1)^(0+128),f
  8904  0977  30FF               	movlw	255
  8905  0978  06BD               	xorwf	(___ftadd@f1+2)^(0+128),f
  8906  0979  3001               	movlw	1
  8907  097A  07BB               	addwf	___ftadd@f1^(0+128),f
  8908  097B  3000               	movlw	0
  8909  097C  1803               	skipnc
  8910  097D  3001               	movlw	1
  8911  097E  07BC               	addwf	(___ftadd@f1+1)^(0+128),f
  8912  097F  3000               	movlw	0
  8913  0980  1803               	skipnc
  8914  0981  3001               	movlw	1
  8915  0982  07BD               	addwf	(___ftadd@f1+2)^(0+128),f
  8916  0983                     l2971:	
  8917  0983  1F45               	btfss	___ftadd@sign^(0+128),6
  8918  0984  2995               	goto	l2975
  8919  0985  30FF               	movlw	255
  8920  0986  06BE               	xorwf	___ftadd@f2^(0+128),f
  8921  0987  30FF               	movlw	255
  8922  0988  06BF               	xorwf	(___ftadd@f2+1)^(0+128),f
  8923  0989  30FF               	movlw	255
  8924  098A  06C0               	xorwf	(___ftadd@f2+2)^(0+128),f
  8925  098B  3001               	movlw	1
  8926  098C  07BE               	addwf	___ftadd@f2^(0+128),f
  8927  098D  3000               	movlw	0
  8928  098E  1803               	skipnc
  8929  098F  3001               	movlw	1
  8930  0990  07BF               	addwf	(___ftadd@f2+1)^(0+128),f
  8931  0991  3000               	movlw	0
  8932  0992  1803               	skipnc
  8933  0993  3001               	movlw	1
  8934  0994  07C0               	addwf	(___ftadd@f2+2)^(0+128),f
  8935  0995                     l2975:	
  8936  0995  01C5               	clrf	___ftadd@sign^(0+128)
  8937  0996  083B               	movf	___ftadd@f1^(0+128),w
  8938  0997  07BE               	addwf	___ftadd@f2^(0+128),f
  8939  0998  083C               	movf	(___ftadd@f1+1)^(0+128),w
  8940  0999  3DBF               	addwfc	(___ftadd@f2+1)^(0+128),f
  8941  099A  083D               	movf	(___ftadd@f1+2)^(0+128),w
  8942  099B  3DC0               	addwfc	(___ftadd@f2+2)^(0+128),f
  8943  099C  1FC0               	btfss	(___ftadd@f2+2)^(0+128),7
  8944  099D  29B0               	goto	l2985
  8945  099E  30FF               	movlw	255
  8946  099F  06BE               	xorwf	___ftadd@f2^(0+128),f
  8947  09A0  30FF               	movlw	255
  8948  09A1  06BF               	xorwf	(___ftadd@f2+1)^(0+128),f
  8949  09A2  30FF               	movlw	255
  8950  09A3  06C0               	xorwf	(___ftadd@f2+2)^(0+128),f
  8951  09A4  3001               	movlw	1
  8952  09A5  07BE               	addwf	___ftadd@f2^(0+128),f
  8953  09A6  3000               	movlw	0
  8954  09A7  1803               	skipnc
  8955  09A8  3001               	movlw	1
  8956  09A9  07BF               	addwf	(___ftadd@f2+1)^(0+128),f
  8957  09AA  3000               	movlw	0
  8958  09AB  1803               	skipnc
  8959  09AC  3001               	movlw	1
  8960  09AD  07C0               	addwf	(___ftadd@f2+2)^(0+128),f
  8961  09AE  01C5               	clrf	___ftadd@sign^(0+128)
  8962  09AF  0AC5               	incf	___ftadd@sign^(0+128),f
  8963  09B0                     l2985:	
  8964  09B0  083E               	movf	___ftadd@f2^(0+128),w
  8965  09B1  00A0               	movwf	___ftpack@arg^(0+128)
  8966  09B2  083F               	movf	(___ftadd@f2+1)^(0+128),w
  8967  09B3  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  8968  09B4  0840               	movf	(___ftadd@f2+2)^(0+128),w
  8969  09B5  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  8970  09B6  0847               	movf	___ftadd@exp1^(0+128),w
  8971  09B7  00C1               	movwf	??___ftadd^(0+128)
  8972  09B8  0841               	movf	??___ftadd^(0+128),w
  8973  09B9  00A3               	movwf	___ftpack@exp^(0+128)
  8974  09BA  0845               	movf	___ftadd@sign^(0+128),w
  8975  09BB  00C2               	movwf	(??___ftadd+1)^(0+128)
  8976  09BC  0842               	movf	(??___ftadd+1)^(0+128),w
  8977  09BD  00A4               	movwf	___ftpack@sign^(0+128)
  8978  09BE  3195  258B         	fcall	___ftpack
  8979  09C0  0021               	movlb	1	; select bank1
  8980  09C1  0820               	movf	?___ftpack^(0+128),w
  8981  09C2  00BB               	movwf	?___ftadd^(0+128)
  8982  09C3  0821               	movf	(?___ftpack+1)^(0+128),w
  8983  09C4  00BC               	movwf	(?___ftadd+1)^(0+128)
  8984  09C5  0822               	movf	(?___ftpack+2)^(0+128),w
  8985  09C6  00BD               	movwf	(?___ftadd+2)^(0+128)
  8986  09C7  0008               	return
  8987  09C8                     __end_of___ftadd:	
  8988                           
  8989                           	psect	text31
  8990  110B                     __ptext31:	
  8991 ;; *************** function ___awtoft *****************
  8992 ;; Defined at:
  8993 ;;		line 32 in file "/Applications/microchip/xc8/v1.35/sources/common/awtoft.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  c               2    8[BANK1 ] int 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  sign            1   13[BANK1 ] unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  3    8[BANK1 ] float 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0, pclath, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9007 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;Total ram usage:        6 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    7
  9014 ;; This function calls:
  9015 ;;		___ftpack
  9016 ;; This function is called by:
  9017 ;;		_main
  9018 ;;		_LIS3MDL_Read_XY
  9019 ;;		_argXY
  9020 ;;		_LIS3MDL_Average10_XY
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           
  9025                           ;psect for function ___awtoft
  9026  110B                     ___awtoft:	
  9027                           
  9028                           ;incstack = 0
  9029                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9030  110B  0021               	movlb	1	; select bank1
  9031  110C  01AD               	clrf	___awtoft@sign^(0+128)
  9032  110D  1FA9               	btfss	(___awtoft@c+1)^(0+128),7
  9033  110E  2916               	goto	l3509
  9034  110F  09A8               	comf	___awtoft@c^(0+128),f
  9035  1110  09A9               	comf	(___awtoft@c+1)^(0+128),f
  9036  1111  0AA8               	incf	___awtoft@c^(0+128),f
  9037  1112  1903               	skipnz
  9038  1113  0AA9               	incf	(___awtoft@c+1)^(0+128),f
  9039  1114  01AD               	clrf	___awtoft@sign^(0+128)
  9040  1115  0AAD               	incf	___awtoft@sign^(0+128),f
  9041  1116                     l3509:	
  9042  1116  0828               	movf	___awtoft@c^(0+128),w
  9043  1117  00A0               	movwf	___ftpack@arg^(0+128)
  9044  1118  0829               	movf	(___awtoft@c+1)^(0+128),w
  9045  1119  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  9046  111A  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  9047  111B  308E               	movlw	142
  9048  111C  00AB               	movwf	??___awtoft^(0+128)
  9049  111D  082B               	movf	??___awtoft^(0+128),w
  9050  111E  00A3               	movwf	___ftpack@exp^(0+128)
  9051  111F  082D               	movf	___awtoft@sign^(0+128),w
  9052  1120  00AC               	movwf	(??___awtoft+1)^(0+128)
  9053  1121  082C               	movf	(??___awtoft+1)^(0+128),w
  9054  1122  00A4               	movwf	___ftpack@sign^(0+128)
  9055  1123  3195  258B         	fcall	___ftpack
  9056  1125  0021               	movlb	1	; select bank1
  9057  1126  0820               	movf	?___ftpack^(0+128),w
  9058  1127  00A8               	movwf	?___awtoft^(0+128)
  9059  1128  0821               	movf	(?___ftpack+1)^(0+128),w
  9060  1129  00A9               	movwf	(?___awtoft+1)^(0+128)
  9061  112A  0822               	movf	(?___ftpack+2)^(0+128),w
  9062  112B  00AA               	movwf	(?___awtoft+2)^(0+128)
  9063  112C  0008               	return
  9064  112D                     __end_of___awtoft:	
  9065                           
  9066                           	psect	text32
  9067  158B                     __ptext32:	
  9068 ;; *************** function ___ftpack *****************
  9069 ;; Defined at:
  9070 ;;		line 62 in file "/Applications/microchip/xc8/v1.35/sources/common/float.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  arg             3    0[BANK1 ] unsigned um
  9073 ;;  exp             1    3[BANK1 ] unsigned char 
  9074 ;;  sign            1    4[BANK1 ] unsigned char 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  3    0[BANK1 ] float 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:        8 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:    6
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		___awtoft
  9097 ;;		___ftadd
  9098 ;;		___ftdiv
  9099 ;;		___ftmul
  9100 ;;		___altoft
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           
  9105                           ;psect for function ___ftpack
  9106  158B                     ___ftpack:	
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9110  158B  0021               	movlb	1	; select bank1
  9111  158C  0823               	movf	___ftpack@exp^(0+128),w
  9112  158D  1903               	btfsc	3,2
  9113  158E  2D94               	goto	l2877
  9114  158F  0822               	movf	(___ftpack@arg+2)^(0+128),w
  9115  1590  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  9116  1591  0420               	iorwf	___ftpack@arg^(0+128),w
  9117  1592  1D03               	skipz
  9118  1593  2DA5               	goto	l2883
  9119  1594                     l2877:	
  9120  1594  3000               	movlw	0
  9121  1595  00A0               	movwf	?___ftpack^(0+128)
  9122  1596  3000               	movlw	0
  9123  1597  00A1               	movwf	(?___ftpack+1)^(0+128)
  9124  1598  3000               	movlw	0
  9125  1599  00A2               	movwf	(?___ftpack+2)^(0+128)
  9126  159A  0008               	return
  9127  159B                     l2881:	
  9128  159B  3001               	movlw	1
  9129  159C  00A5               	movwf	??___ftpack^(0+128)
  9130  159D  0825               	movf	??___ftpack^(0+128),w
  9131  159E  07A3               	addwf	___ftpack@exp^(0+128),f
  9132  159F  3001               	movlw	1
  9133  15A0                     u4405:	
  9134  15A0  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9135  15A1  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9136  15A2  0CA0               	rrf	___ftpack@arg^(0+128),f
  9137  15A3  0B89               	decfsz	9,f
  9138  15A4  2DA0               	goto	u4405
  9139  15A5                     l2883:	
  9140  15A5  30FE               	movlw	254
  9141  15A6  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9142  15A7  1903               	btfsc	3,2
  9143  15A8  2DBE               	goto	l788
  9144  15A9  2D9B               	goto	l2881
  9145  15AA                     l2885:	
  9146  15AA  3001               	movlw	1
  9147  15AB  00A5               	movwf	??___ftpack^(0+128)
  9148  15AC  0825               	movf	??___ftpack^(0+128),w
  9149  15AD  07A3               	addwf	___ftpack@exp^(0+128),f
  9150  15AE  3001               	movlw	1
  9151  15AF  07A0               	addwf	___ftpack@arg^(0+128),f
  9152  15B0  3000               	movlw	0
  9153  15B1  1803               	skipnc
  9154  15B2  3001               	movlw	1
  9155  15B3  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  9156  15B4  3000               	movlw	0
  9157  15B5  1803               	skipnc
  9158  15B6  3001               	movlw	1
  9159  15B7  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  9160  15B8  3001               	movlw	1
  9161  15B9                     u4425:	
  9162  15B9  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  9163  15BA  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  9164  15BB  0CA0               	rrf	___ftpack@arg^(0+128),f
  9165  15BC  0B89               	decfsz	9,f
  9166  15BD  2DB9               	goto	u4425
  9167  15BE                     l788:	
  9168  15BE  30FF               	movlw	255
  9169  15BF  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  9170  15C0  1903               	btfsc	3,2
  9171  15C1  2DCB               	goto	l2893
  9172  15C2  2DAA               	goto	l2885
  9173  15C3                     l2891:	
  9174  15C3  3001               	movlw	1
  9175  15C4  02A3               	subwf	___ftpack@exp^(0+128),f
  9176  15C5  3001               	movlw	1
  9177  15C6                     u4445:	
  9178  15C6  35A0               	lslf	___ftpack@arg^(0+128),f
  9179  15C7  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  9180  15C8  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  9181  15C9  0B89               	decfsz	9,f
  9182  15CA  2DC6               	goto	u4445
  9183  15CB                     l2893:	
  9184  15CB  1BA1               	btfsc	(___ftpack@arg+1)^(0+128),7
  9185  15CC  2DD1               	goto	l795
  9186  15CD  3002               	movlw	2
  9187  15CE  0223               	subwf	___ftpack@exp^(0+128),w
  9188  15CF  1803               	skipnc
  9189  15D0  2DC3               	goto	l2891
  9190  15D1                     l795:	
  9191  15D1  1823               	btfsc	___ftpack@exp^(0+128),0
  9192  15D2  2DD9               	goto	l796
  9193  15D3  30FF               	movlw	255
  9194  15D4  05A0               	andwf	___ftpack@arg^(0+128),f
  9195  15D5  307F               	movlw	127
  9196  15D6  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  9197  15D7  30FF               	movlw	255
  9198  15D8  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  9199  15D9                     l796:	
  9200  15D9  1003               	clrc
  9201  15DA  0CA3               	rrf	___ftpack@exp^(0+128),f
  9202  15DB  0823               	movf	___ftpack@exp^(0+128),w
  9203  15DC  00A5               	movwf	??___ftpack^(0+128)
  9204  15DD  01A6               	clrf	(??___ftpack^(0+128)+1)
  9205  15DE  01A7               	clrf	(??___ftpack^(0+128)+2)
  9206  15DF  3010               	movlw	16
  9207  15E0                     u4485:	
  9208  15E0  35A5               	lslf	??___ftpack^(0+128),f
  9209  15E1  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  9210  15E2  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  9211  15E3  0B89               	decfsz	9,f
  9212  15E4  2DE0               	goto	u4485
  9213  15E5  0825               	movf	??___ftpack^(0+128),w
  9214  15E6  04A0               	iorwf	___ftpack@arg^(0+128),f
  9215  15E7  0826               	movf	(??___ftpack+1)^(0+128),w
  9216  15E8  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  9217  15E9  0827               	movf	(??___ftpack+2)^(0+128),w
  9218  15EA  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  9219  15EB  0824               	movf	___ftpack@sign^(0+128),w
  9220  15EC  1903               	btfsc	3,2
  9221  15ED  0008               	return
  9222  15EE  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  9223  15EF  0008               	return
  9224  15F0                     __end_of___ftpack:	
  9225                           
  9226                           	psect	text33
  9227  14CB                     __ptext33:	
  9228 ;; *************** function _LIS3MDL_Read_Raw_XY *****************
  9229 ;; Defined at:
  9230 ;;		line 62 in file "LIS3MDL.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;		None
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  Y_H             1   11[BANK1 ] unsigned char 
  9235 ;;  Y_L             1   10[BANK1 ] unsigned char 
  9236 ;;  X_H             1    9[BANK1 ] unsigned char 
  9237 ;;  X_L             1    8[BANK1 ] unsigned char 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;		None               void
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0, pclath, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;Total ram usage:        9 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    8
  9254 ;; This function calls:
  9255 ;;		_i2c_Read
  9256 ;;		_i2c_Restart
  9257 ;;		_i2c_Start
  9258 ;;		_i2c_Stop
  9259 ;;		_i2c_Write
  9260 ;; This function is called by:
  9261 ;;		_main
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _LIS3MDL_Read_Raw_XY
  9267  14CB                     _LIS3MDL_Read_Raw_XY:	
  9268                           
  9269                           ;LIS3MDL.c: 64: unsigned char X_L, X_H, Y_L, Y_H;
  9270                           ;LIS3MDL.c: 65: vX=0;
  9271                           
  9272                           ;incstack = 0
  9273                           ; Regs used in _LIS3MDL_Read_Raw_XY: [wreg+status,2+status,0+pclath+cstack]
  9274  14CB  0022               	movlb	2	; select bank2
  9275  14CC  01E5               	clrf	_vX^(0+256)
  9276  14CD  01E6               	clrf	(_vX+1)^(0+256)
  9277                           
  9278                           ;LIS3MDL.c: 66: vY=0;
  9279  14CE  01E7               	clrf	_vY^(0+256)
  9280  14CF  01E8               	clrf	(_vY+1)^(0+256)
  9281                           
  9282                           ;LIS3MDL.c: 68: i2c_Start();
  9283  14D0  319F  277A  3194   	fcall	_i2c_Start
  9284                           
  9285                           ;LIS3MDL.c: 69: i2c_Write(0x3C);
  9286  14D3  303C               	movlw	60
  9287  14D4  319F  2798  3194   	fcall	_i2c_Write
  9288                           
  9289                           ;LIS3MDL.c: 70: i2c_Write(0x28);
  9290  14D7  3028               	movlw	40
  9291  14D8  319F  2798  3194   	fcall	_i2c_Write
  9292                           
  9293                           ;LIS3MDL.c: 71: i2c_Restart();
  9294  14DB  319F  2775  3194   	fcall	_i2c_Restart
  9295                           
  9296                           ;LIS3MDL.c: 72: i2c_Write(0x3D);
  9297  14DE  303D               	movlw	61
  9298  14DF  319F  2798  3194   	fcall	_i2c_Write
  9299                           
  9300                           ;LIS3MDL.c: 73: X_L=i2c_Read(1);
  9301  14E2  3001               	movlw	1
  9302  14E3  3190  20EB  3194   	fcall	_i2c_Read
  9303  14E6  0021               	movlb	1	; select bank1
  9304  14E7  00A3               	movwf	??_LIS3MDL_Read_Raw_XY^(0+128)
  9305  14E8  0823               	movf	??_LIS3MDL_Read_Raw_XY^(0+128),w
  9306  14E9  00A8               	movwf	LIS3MDL_Read_Raw_XY@X_L^(0+128)
  9307                           
  9308                           ;LIS3MDL.c: 74: X_H=i2c_Read(1);
  9309  14EA  3001               	movlw	1
  9310  14EB  3190  20EB  3194   	fcall	_i2c_Read
  9311  14EE  0021               	movlb	1	; select bank1
  9312  14EF  00A3               	movwf	??_LIS3MDL_Read_Raw_XY^(0+128)
  9313  14F0  0823               	movf	??_LIS3MDL_Read_Raw_XY^(0+128),w
  9314  14F1  00A9               	movwf	LIS3MDL_Read_Raw_XY@X_H^(0+128)
  9315                           
  9316                           ;LIS3MDL.c: 75: Y_L=i2c_Read(1);
  9317  14F2  3001               	movlw	1
  9318  14F3  3190  20EB  3194   	fcall	_i2c_Read
  9319  14F6  0021               	movlb	1	; select bank1
  9320  14F7  00A3               	movwf	??_LIS3MDL_Read_Raw_XY^(0+128)
  9321  14F8  0823               	movf	??_LIS3MDL_Read_Raw_XY^(0+128),w
  9322  14F9  00AA               	movwf	LIS3MDL_Read_Raw_XY@Y_L^(0+128)
  9323                           
  9324                           ;LIS3MDL.c: 76: Y_H=i2c_Read(0);
  9325  14FA  3000               	movlw	0
  9326  14FB  3190  20EB  3194   	fcall	_i2c_Read
  9327  14FE  0021               	movlb	1	; select bank1
  9328  14FF  00A3               	movwf	??_LIS3MDL_Read_Raw_XY^(0+128)
  9329  1500  0823               	movf	??_LIS3MDL_Read_Raw_XY^(0+128),w
  9330  1501  00AB               	movwf	LIS3MDL_Read_Raw_XY@Y_H^(0+128)
  9331                           
  9332                           ;LIS3MDL.c: 77: i2c_Stop();
  9333  1502  319F  277F         	fcall	_i2c_Stop
  9334                           
  9335                           ;LIS3MDL.c: 79: vX=(X_H<<8)+X_L;
  9336  1504  0021               	movlb	1	; select bank1
  9337  1505  0828               	movf	LIS3MDL_Read_Raw_XY@X_L^(0+128),w
  9338  1506  00A3               	movwf	??_LIS3MDL_Read_Raw_XY^(0+128)
  9339  1507  01A4               	clrf	(??_LIS3MDL_Read_Raw_XY^(0+128)+1)
  9340  1508  0829               	movf	LIS3MDL_Read_Raw_XY@X_H^(0+128),w
  9341  1509  00A5               	movwf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128)
  9342  150A  01A6               	clrf	((??_LIS3MDL_Read_Raw_XY+2)^(0+128)+1)
  9343  150B  0825               	movf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128),w
  9344  150C  00A6               	movwf	((??_LIS3MDL_Read_Raw_XY+2)^(0+128)+1)
  9345  150D  01A5               	clrf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128)
  9346  150E  0823               	movf	??_LIS3MDL_Read_Raw_XY^(0+128),w
  9347  150F  0725               	addwf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128),w
  9348  1510  0022               	movlb	2	; select bank2
  9349  1511  00E5               	movwf	_vX^(0+256)
  9350  1512  0021               	movlb	1	; select bank1
  9351  1513  0824               	movf	(??_LIS3MDL_Read_Raw_XY+1)^(0+128),w
  9352  1514  3D26               	addwfc	(??_LIS3MDL_Read_Raw_XY+3)^(0+128),w
  9353  1515  0022               	movlb	2	; select bank2
  9354  1516  00E6               	movwf	(_vX+1)^(0+256)
  9355                           
  9356                           ;LIS3MDL.c: 80: vY=(Y_H<<8)+Y_L;
  9357  1517  0021               	movlb	1	; select bank1
  9358  1518  082A               	movf	LIS3MDL_Read_Raw_XY@Y_L^(0+128),w
  9359  1519  00A3               	movwf	??_LIS3MDL_Read_Raw_XY^(0+128)
  9360  151A  01A4               	clrf	(??_LIS3MDL_Read_Raw_XY^(0+128)+1)
  9361  151B  082B               	movf	LIS3MDL_Read_Raw_XY@Y_H^(0+128),w
  9362  151C  00A5               	movwf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128)
  9363  151D  01A6               	clrf	((??_LIS3MDL_Read_Raw_XY+2)^(0+128)+1)
  9364  151E  0825               	movf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128),w
  9365  151F  00A6               	movwf	((??_LIS3MDL_Read_Raw_XY+2)^(0+128)+1)
  9366  1520  01A5               	clrf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128)
  9367  1521  0823               	movf	??_LIS3MDL_Read_Raw_XY^(0+128),w
  9368  1522  0725               	addwf	(??_LIS3MDL_Read_Raw_XY+2)^(0+128),w
  9369  1523  0022               	movlb	2	; select bank2
  9370  1524  00E7               	movwf	_vY^(0+256)
  9371  1525  0021               	movlb	1	; select bank1
  9372  1526  0824               	movf	(??_LIS3MDL_Read_Raw_XY+1)^(0+128),w
  9373  1527  3D26               	addwfc	(??_LIS3MDL_Read_Raw_XY+3)^(0+128),w
  9374  1528  0022               	movlb	2	; select bank2
  9375  1529  00E8               	movwf	(_vY+1)^(0+256)
  9376  152A  0008               	return
  9377  152B                     __end_of_LIS3MDL_Read_Raw_XY:	
  9378                           
  9379                           	psect	text34
  9380  1F98                     __ptext34:	
  9381 ;; *************** function _i2c_Write *****************
  9382 ;; Defined at:
  9383 ;;		line 53 in file "i2c.h"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  data            1    wreg     unsigned char 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  data            1    0[BANK1 ] unsigned char 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;		None               void
  9390 ;; Registers used:
  9391 ;;		wreg, status,2, status,0, pclath, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;Total ram usage:        1 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    7
  9404 ;; This function calls:
  9405 ;;		_i2c_Wait
  9406 ;; This function is called by:
  9407 ;;		_LIS3MDL_Write
  9408 ;;		_LIS3MDL_Read_XY
  9409 ;;		_LIS3MDL_Read_Raw_XY
  9410 ;;		_LIS3MDL_Wait
  9411 ;;		_LIS3MDL_Read_XYZ
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _i2c_Write
  9417  1F98                     _i2c_Write:	
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  9421                           ;i2c_Write@data stored from wreg
  9422  1F98  0021               	movlb	1	; select bank1
  9423  1F99  00A0               	movwf	i2c_Write@data^(0+128)
  9424                           
  9425                           ;i2c.h: 55: i2c_Wait();
  9426  1F9A  319F  2790         	fcall	_i2c_Wait
  9427                           
  9428                           ;i2c.h: 56: SSP1BUF = data;
  9429  1F9C  0021               	movlb	1	; select bank1
  9430  1F9D  0820               	movf	i2c_Write@data^(0+128),w
  9431  1F9E  0024               	movlb	4	; select bank4
  9432  1F9F  0091               	movwf	17	;volatile
  9433  1FA0  0008               	return
  9434  1FA1                     __end_of_i2c_Write:	
  9435                           
  9436                           	psect	text35
  9437  1F7F                     __ptext35:	
  9438 ;; *************** function _i2c_Stop *****************
  9439 ;; Defined at:
  9440 ;;		line 46 in file "i2c.h"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;		None
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;		None               void
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0, pclath, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;Total ram usage:        0 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:    7
  9461 ;; This function calls:
  9462 ;;		_i2c_Wait
  9463 ;; This function is called by:
  9464 ;;		_LIS3MDL_Write
  9465 ;;		_LIS3MDL_Read_XY
  9466 ;;		_LIS3MDL_Read_Raw_XY
  9467 ;;		_LIS3MDL_Wait
  9468 ;;		_LIS3MDL_Read_XYZ
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function _i2c_Stop
  9474  1F7F                     _i2c_Stop:	
  9475                           
  9476                           ;i2c.h: 48: i2c_Wait();
  9477                           
  9478                           ;incstack = 0
  9479                           ; Regs used in _i2c_Stop: [wreg+status,2+status,0+pclath+cstack]
  9480  1F7F  319F  2790         	fcall	_i2c_Wait
  9481                           
  9482                           ;i2c.h: 49: PEN=1;
  9483  1F81  0024               	movlb	4	; select bank4
  9484  1F82  1516               	bsf	22,2	;volatile
  9485  1F83  0008               	return
  9486  1F84                     __end_of_i2c_Stop:	
  9487                           
  9488                           	psect	text36
  9489  1F7A                     __ptext36:	
  9490 ;; *************** function _i2c_Start *****************
  9491 ;; Defined at:
  9492 ;;		line 33 in file "i2c.h"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;		None               void
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, pclath, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:    7
  9513 ;; This function calls:
  9514 ;;		_i2c_Wait
  9515 ;; This function is called by:
  9516 ;;		_LIS3MDL_Write
  9517 ;;		_LIS3MDL_Read_XY
  9518 ;;		_LIS3MDL_Read_Raw_XY
  9519 ;;		_LIS3MDL_Wait
  9520 ;;		_LIS3MDL_Read_XYZ
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _i2c_Start
  9526  1F7A                     _i2c_Start:	
  9527                           
  9528                           ;i2c.h: 35: i2c_Wait();
  9529                           
  9530                           ;incstack = 0
  9531                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  9532  1F7A  319F  2790         	fcall	_i2c_Wait
  9533                           
  9534                           ;i2c.h: 36: SEN=1;
  9535  1F7C  0024               	movlb	4	; select bank4
  9536  1F7D  1416               	bsf	22,0	;volatile
  9537  1F7E  0008               	return
  9538  1F7F                     __end_of_i2c_Start:	
  9539                           
  9540                           	psect	text37
  9541  1F75                     __ptext37:	
  9542 ;; *************** function _i2c_Restart *****************
  9543 ;; Defined at:
  9544 ;;		line 40 in file "i2c.h"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    7
  9565 ;; This function calls:
  9566 ;;		_i2c_Wait
  9567 ;; This function is called by:
  9568 ;;		_LIS3MDL_Read_XY
  9569 ;;		_LIS3MDL_Read_Raw_XY
  9570 ;;		_LIS3MDL_Wait
  9571 ;;		_LIS3MDL_Read_XYZ
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           
  9576                           ;psect for function _i2c_Restart
  9577  1F75                     _i2c_Restart:	
  9578                           
  9579                           ;i2c.h: 41: i2c_Wait();
  9580                           
  9581                           ;incstack = 0
  9582                           ; Regs used in _i2c_Restart: [wreg+status,2+status,0+pclath+cstack]
  9583  1F75  319F  2790         	fcall	_i2c_Wait
  9584                           
  9585                           ;i2c.h: 42: RSEN=1;
  9586  1F77  0024               	movlb	4	; select bank4
  9587  1F78  1496               	bsf	22,1	;volatile
  9588  1F79  0008               	return
  9589  1F7A                     __end_of_i2c_Restart:	
  9590                           
  9591                           	psect	text38
  9592  10EB                     __ptext38:	
  9593 ;; *************** function _i2c_Read *****************
  9594 ;; Defined at:
  9595 ;;		line 72 in file "i2c.h"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  ack             1    wreg     unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  ack             1    1[BANK1 ] unsigned char 
  9600 ;;  i2cReadData     1    2[BANK1 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      unsigned char 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, pclath, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;Total ram usage:        3 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    7
  9617 ;; This function calls:
  9618 ;;		_i2c_Wait
  9619 ;; This function is called by:
  9620 ;;		_LIS3MDL_Read_XY
  9621 ;;		_LIS3MDL_Read_Raw_XY
  9622 ;;		_LIS3MDL_Wait
  9623 ;;		_LIS3MDL_Read_XYZ
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           
  9628                           ;psect for function _i2c_Read
  9629  10EB                     _i2c_Read:	
  9630                           
  9631                           ;incstack = 0
  9632                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
  9633                           ;i2c_Read@ack stored from wreg
  9634  10EB  0021               	movlb	1	; select bank1
  9635  10EC  00A1               	movwf	i2c_Read@ack^(0+128)
  9636                           
  9637                           ;i2c.h: 77: unsigned char i2cReadData;
  9638                           ;i2c.h: 79: i2c_Wait();
  9639  10ED  319F  2790  3190   	fcall	_i2c_Wait
  9640                           
  9641                           ;i2c.h: 80: RCEN=1;
  9642  10F0  0024               	movlb	4	; select bank4
  9643  10F1  1596               	bsf	22,3	;volatile
  9644                           
  9645                           ;i2c.h: 81: i2c_Wait();
  9646  10F2  319F  2790  3190   	fcall	_i2c_Wait
  9647                           
  9648                           ;i2c.h: 82: i2cReadData = SSP1BUF;
  9649  10F5  0024               	movlb	4	; select bank4
  9650  10F6  0811               	movf	17,w	;volatile
  9651  10F7  0021               	movlb	1	; select bank1
  9652  10F8  00A0               	movwf	??_i2c_Read^(0+128)
  9653  10F9  0820               	movf	??_i2c_Read^(0+128),w
  9654  10FA  00A2               	movwf	i2c_Read@i2cReadData^(0+128)
  9655                           
  9656                           ;i2c.h: 83: i2c_Wait();
  9657  10FB  319F  2790  3190   	fcall	_i2c_Wait
  9658                           
  9659                           ;i2c.h: 84: if ( ack ) ACKDT=0;
  9660  10FE  0021               	movlb	1	; select bank1
  9661  10FF  0821               	movf	i2c_Read@ack^(0+128),w
  9662  1100  1903               	btfsc	3,2
  9663  1101  2905               	goto	l286
  9664  1102  0024               	movlb	4	; select bank4
  9665  1103  1296               	bcf	22,5	;volatile
  9666  1104  2907               	goto	l287
  9667  1105                     l286:	
  9668                           
  9669                           ;i2c.h: 85: else ACKDT=1;
  9670  1105  0024               	movlb	4	; select bank4
  9671  1106  1696               	bsf	22,5	;volatile
  9672  1107                     l287:	
  9673                           
  9674                           ;i2c.h: 86: ACKEN=1;
  9675  1107  1616               	bsf	22,4	;volatile
  9676                           
  9677                           ;i2c.h: 88: return( i2cReadData );
  9678  1108  0021               	movlb	1	; select bank1
  9679  1109  0822               	movf	i2c_Read@i2cReadData^(0+128),w
  9680  110A  0008               	return
  9681  110B                     __end_of_i2c_Read:	
  9682                           
  9683                           	psect	text39
  9684  1F90                     __ptext39:	
  9685 ;; *************** function _i2c_Wait *****************
  9686 ;; Defined at:
  9687 ;;		line 28 in file "i2c.h"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;		None
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;		None
  9692 ;; Return value:  Size  Location     Type
  9693 ;;		None               void
  9694 ;; Registers used:
  9695 ;;		wreg, status,2
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9705 ;;Total ram usage:        0 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    6
  9708 ;; This function calls:
  9709 ;;		Nothing
  9710 ;; This function is called by:
  9711 ;;		_i2c_Start
  9712 ;;		_i2c_Restart
  9713 ;;		_i2c_Stop
  9714 ;;		_i2c_Write
  9715 ;;		_i2c_Read
  9716 ;;		_i2c_Address
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           
  9721                           ;psect for function _i2c_Wait
  9722  1F90                     _i2c_Wait:	
  9723  1F90                     l3081:	
  9724                           ;i2c.h: 29: while ( ( SSP1CON2 & 0x1F ) || ( SSP1STAT & 0x04 ) );
  9725                           
  9726                           ;incstack = 0
  9727                           ; Regs used in _i2c_Wait: [wreg+status,2]
  9728                           
  9729  1F90  0024               	movlb	4	; select bank4
  9730  1F91  0816               	movf	22,w	;volatile
  9731  1F92  391F               	andlw	31
  9732  1F93  1D03               	btfss	3,2
  9733  1F94  2F90               	goto	l3081
  9734  1F95  1D14               	btfss	20,2	;volatile
  9735  1F96  0008               	return
  9736  1F97  2F90               	goto	l3081
  9737  1F98                     __end_of_i2c_Wait:	
  9738                           
  9739                           	psect	intentry
  9740  0004                     __pintentry:	
  9741 ;; *************** function _INTERRUPT_InterruptManager *****************
  9742 ;; Defined at:
  9743 ;;		line 4 in file "interrupt_manager.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;		None               void
  9750 ;; Registers used:
  9751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;Total ram usage:        1 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    5
  9764 ;; This function calls:
  9765 ;;		_EUSART_Receive_ISR
  9766 ;; This function is called by:
  9767 ;;		Interrupt level 1
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771  0004                     _INTERRUPT_InterruptManager:	
  9772                           
  9773                           ;incstack = 0
  9774                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9775  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9776  0005  3180               	pagesel	$
  9777  0006  0020               	movlb	0	; select bank0
  9778  0007  087F               	movf	127,w
  9779  0008  00DE               	movwf	??_INTERRUPT_InterruptManager
  9780                           
  9781                           ;interrupt_manager.c: 6: if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  9782  0009  0021               	movlb	1	; select bank1
  9783  000A  1E91               	btfss	17,5	;volatile
  9784  000B  2811               	goto	i1l419
  9785  000C  0020               	movlb	0	; select bank0
  9786  000D  1E91               	btfss	17,5	;volatile
  9787  000E  2811               	goto	i1l419
  9788                           
  9789                           ;interrupt_manager.c: 7: {
  9790                           ;interrupt_manager.c: 8: EUSART_Receive_ISR();
  9791  000F  3195  25F0         	fcall	_EUSART_Receive_ISR
  9792  0011                     i1l419:	
  9793                           ;interrupt_manager.c: 10: else
  9794                           ;interrupt_manager.c: 11: {
  9795                           
  9796                           ;interrupt_manager.c: 9: }
  9797                           
  9798  0011  0020               	movlb	0	; select bank0
  9799  0012  085E               	movf	??_INTERRUPT_InterruptManager,w
  9800  0013  00FF               	movwf	127
  9801  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9802  0015  0009               	retfie
  9803  0016                     __end_of_INTERRUPT_InterruptManager:	
  9804                           
  9805                           	psect	text41
  9806  15F0                     __ptext41:	
  9807 ;; *************** function _EUSART_Receive_ISR *****************
  9808 ;; Defined at:
  9809 ;;		line 53 in file "eusart.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;		None
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  str             8   53[BANK0 ] unsigned char [8]
  9814 ;;  incoming        1   61[BANK0 ] unsigned char 
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  2  414[None  ] int 
  9817 ;; Registers used:
  9818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;Total ram usage:       17 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    4
  9831 ;; This function calls:
  9832 ;;		_processline
  9833 ;;		_strncpy
  9834 ;; This function is called by:
  9835 ;;		_INTERRUPT_InterruptManager
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           
  9840                           ;psect for function _EUSART_Receive_ISR
  9841  15F0                     _EUSART_Receive_ISR:	
  9842                           
  9843                           ;eusart.c: 55: char incoming;
  9844                           ;eusart.c: 57: if (1 == RC1STAbits.OERR)
  9845                           
  9846                           ;incstack = 0
  9847                           ; Regs used in _EUSART_Receive_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9848  15F0  0023               	movlb	3	; select bank3
  9849  15F1  1C9D               	btfss	29,1	;volatile
  9850  15F2  2DF5               	goto	i1l4139
  9851                           
  9852                           ;eusart.c: 58: {
  9853                           ;eusart.c: 60: RC1STAbits.CREN = 0;
  9854  15F3  121D               	bcf	29,4	;volatile
  9855                           
  9856                           ;eusart.c: 61: RC1STAbits.CREN = 1;
  9857  15F4  161D               	bsf	29,4	;volatile
  9858  15F5                     i1l4139:	
  9859                           
  9860                           ;eusart.c: 62: }
  9861                           ;eusart.c: 64: incoming = RC1REG;
  9862  15F5  0819               	movf	25,w	;volatile
  9863  15F6  0020               	movlb	0	; select bank0
  9864  15F7  00CD               	movwf	??_EUSART_Receive_ISR
  9865  15F8  084D               	movf	??_EUSART_Receive_ISR,w
  9866  15F9  00DD               	movwf	EUSART_Receive_ISR@incoming
  9867                           
  9868                           ;eusart.c: 65: console[lines][charac]=incoming;
  9869  15FA  0862               	movf	_lines+1,w
  9870  15FB  00CE               	movwf	??_EUSART_Receive_ISR+1
  9871  15FC  0861               	movf	_lines,w
  9872  15FD  00CD               	movwf	??_EUSART_Receive_ISR
  9873  15FE  0ECD               	swapf	??_EUSART_Receive_ISR,f
  9874  15FF  0ECE               	swapf	??_EUSART_Receive_ISR+1,f
  9875  1600  30F0               	movlw	240
  9876  1601  05CE               	andwf	??_EUSART_Receive_ISR+1,f
  9877  1602  084D               	movf	??_EUSART_Receive_ISR,w
  9878  1603  390F               	andlw	15
  9879  1604  04CE               	iorwf	??_EUSART_Receive_ISR+1,f
  9880  1605  30F0               	movlw	240
  9881  1606  05CD               	andwf	??_EUSART_Receive_ISR,f
  9882  1607  3050               	movlw	80
  9883  1608  00CF               	movwf	??_EUSART_Receive_ISR+2
  9884  1609  3023               	movlw	35
  9885  160A  00D0               	movwf	??_EUSART_Receive_ISR+3
  9886  160B  084D               	movf	??_EUSART_Receive_ISR,w
  9887  160C  074F               	addwf	??_EUSART_Receive_ISR+2,w
  9888  160D  00D1               	movwf	??_EUSART_Receive_ISR+4
  9889  160E  084E               	movf	??_EUSART_Receive_ISR+1,w
  9890  160F  3D50               	addwfc	??_EUSART_Receive_ISR+3,w
  9891  1610  00D2               	movwf	??_EUSART_Receive_ISR+5
  9892  1611  085F               	movf	_charac,w
  9893  1612  0751               	addwf	??_EUSART_Receive_ISR+4,w
  9894  1613  00D3               	movwf	??_EUSART_Receive_ISR+6
  9895  1614  0860               	movf	_charac+1,w
  9896  1615  3D52               	addwfc	??_EUSART_Receive_ISR+5,w
  9897  1616  00D4               	movwf	??_EUSART_Receive_ISR+7
  9898  1617  0853               	movf	??_EUSART_Receive_ISR+6,w
  9899  1618  0086               	movwf	6
  9900  1619  0854               	movf	??_EUSART_Receive_ISR+7,w
  9901  161A  0087               	movwf	7
  9902  161B  085D               	movf	EUSART_Receive_ISR@incoming,w
  9903  161C  0081               	movwf	1
  9904                           
  9905                           ;eusart.c: 67: if ((incoming == '\n')||(incoming == '\r'))
  9906  161D  300A               	movlw	10
  9907  161E  065D               	xorwf	EUSART_Receive_ISR@incoming,w
  9908  161F  1903               	btfsc	3,2
  9909  1620  2E25               	goto	i1l4147
  9910  1621  300D               	movlw	13
  9911  1622  065D               	xorwf	EUSART_Receive_ISR@incoming,w
  9912  1623  1D03               	btfss	3,2
  9913  1624  2E57               	goto	i1l4155
  9914  1625                     i1l4147:	
  9915                           
  9916                           ;eusart.c: 68: {
  9917                           ;eusart.c: 69: if(charac > 0)
  9918  1625  085F               	movf	_charac,w
  9919  1626  0460               	iorwf	_charac+1,w
  9920  1627  1903               	btfsc	3,2
  9921  1628  0008               	return
  9922                           
  9923                           ;eusart.c: 70: {
  9924                           ;eusart.c: 73: char str[8];
  9925                           ;eusart.c: 74: strncpy(str, console[lines], 8);
  9926  1629  0862               	movf	_lines+1,w
  9927  162A  00CE               	movwf	??_EUSART_Receive_ISR+1
  9928  162B  0861               	movf	_lines,w
  9929  162C  00CD               	movwf	??_EUSART_Receive_ISR
  9930  162D  0ECD               	swapf	??_EUSART_Receive_ISR,f
  9931  162E  0ECE               	swapf	??_EUSART_Receive_ISR+1,f
  9932  162F  30F0               	movlw	240
  9933  1630  05CE               	andwf	??_EUSART_Receive_ISR+1,f
  9934  1631  084D               	movf	??_EUSART_Receive_ISR,w
  9935  1632  390F               	andlw	15
  9936  1633  04CE               	iorwf	??_EUSART_Receive_ISR+1,f
  9937  1634  30F0               	movlw	240
  9938  1635  05CD               	andwf	??_EUSART_Receive_ISR,f
  9939  1636  3050               	movlw	80
  9940  1637  00CF               	movwf	??_EUSART_Receive_ISR+2
  9941  1638  3023               	movlw	35
  9942  1639  00D0               	movwf	??_EUSART_Receive_ISR+3
  9943  163A  084D               	movf	??_EUSART_Receive_ISR,w
  9944  163B  074F               	addwf	??_EUSART_Receive_ISR+2,w
  9945  163C  00D1               	movwf	??_EUSART_Receive_ISR+4
  9946  163D  084E               	movf	??_EUSART_Receive_ISR+1,w
  9947  163E  3D50               	addwfc	??_EUSART_Receive_ISR+3,w
  9948  163F  00D2               	movwf	??_EUSART_Receive_ISR+5
  9949  1640  0851               	movf	??_EUSART_Receive_ISR+4,w
  9950  1641  00F0               	movwf	strncpy@from
  9951  1642  0852               	movf	??_EUSART_Receive_ISR+5,w
  9952  1643  00F1               	movwf	strncpy@from+1
  9953  1644  3008               	movlw	8
  9954  1645  00F2               	movwf	strncpy@size
  9955  1646  3000               	movlw	0
  9956  1647  00F3               	movwf	strncpy@size+1
  9957  1648  3055               	movlw	(low (EUSART_Receive_ISR@str| 0))& (0+255)
  9958  1649  3192  2295  3195   	fcall	_strncpy
  9959                           
  9960                           ;eusart.c: 76: processline(str);
  9961  164C  3055               	movlw	(low (EUSART_Receive_ISR@str| 0))& (0+255)
  9962  164D  3196  265C         	fcall	_processline
  9963                           
  9964                           ;eusart.c: 77: lines++;
  9965  164F  3001               	movlw	1
  9966  1650  0020               	movlb	0	; select bank0
  9967  1651  07E1               	addwf	_lines,f
  9968  1652  3000               	movlw	0
  9969  1653  3DE2               	addwfc	_lines+1,f
  9970                           
  9971                           ;eusart.c: 78: charac =0;
  9972  1654  01DF               	clrf	_charac
  9973  1655  01E0               	clrf	_charac+1
  9974                           
  9975                           ;eusart.c: 79: }
  9976                           ;eusart.c: 80: }
  9977  1656  0008               	return
  9978  1657                     i1l4155:	
  9979                           
  9980                           ;eusart.c: 81: else
  9981                           ;eusart.c: 82: {
  9982                           ;eusart.c: 83: charac++;
  9983  1657  3001               	movlw	1
  9984  1658  07DF               	addwf	_charac,f
  9985  1659  3000               	movlw	0
  9986  165A  3DE0               	addwfc	_charac+1,f
  9987  165B  0008               	return
  9988  165C                     __end_of_EUSART_Receive_ISR:	
  9989                           
  9990                           	psect	text42
  9991  1295                     __ptext42:	
  9992 ;; *************** function _strncpy *****************
  9993 ;; Defined at:
  9994 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/strncpy.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  to              1    wreg     PTR unsigned char 
  9997 ;;		 -> EUSART_Receive_ISR@str(8), 
  9998 ;;  from            2    0[COMMON] PTR const unsigned char 
  9999 ;;		 -> console(160), 
 10000 ;;  size            2    2[COMMON] unsigned int 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  to              1    6[COMMON] PTR unsigned char 
 10003 ;;		 -> EUSART_Receive_ISR@str(8), 
 10004 ;;  cp              1    7[COMMON] PTR unsigned char 
 10005 ;;		 -> EUSART_Receive_ISR@str(8), 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      PTR unsigned char 
 10008 ;; Registers used:
 10009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10018 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10019 ;;Total ram usage:        8 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_EUSART_Receive_ISR
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           
 10029                           ;psect for function _strncpy
 10030  1295                     _strncpy:	
 10031                           
 10032                           ;incstack = 0
 10033                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
 10034                           ;strncpy@to stored from wreg
 10035  1295  00F6               	movwf	strncpy@to
 10036  1296  0876               	movf	strncpy@to,w
 10037  1297  00F4               	movwf	??_strncpy
 10038  1298  0874               	movf	??_strncpy,w
 10039  1299  00F7               	movwf	strncpy@cp
 10040  129A                     i1l3833:	
 10041  129A  0872               	movf	strncpy@size,w
 10042  129B  0473               	iorwf	strncpy@size+1,w
 10043  129C  1903               	btfsc	3,2
 10044  129D  2ABF               	goto	i1l3839
 10045  129E  3001               	movlw	1
 10046  129F  02F2               	subwf	strncpy@size,f
 10047  12A0  3000               	movlw	0
 10048  12A1  3BF3               	subwfb	strncpy@size+1,f
 10049  12A2  0877               	movf	strncpy@cp,w
 10050  12A3  0086               	movwf	6
 10051  12A4  0187               	clrf	7
 10052  12A5  0AF7               	incf	strncpy@cp,f
 10053  12A6  0871               	movf	strncpy@from+1,w
 10054  12A7  00F5               	movwf	??_strncpy+1
 10055  12A8  0870               	movf	strncpy@from,w
 10056  12A9  00F4               	movwf	??_strncpy
 10057  12AA  0AF0               	incf	strncpy@from,f
 10058  12AB  1903               	skipnz
 10059  12AC  0AF1               	incf	strncpy@from+1,f
 10060  12AD  0874               	movf	??_strncpy,w
 10061  12AE  0084               	movwf	4
 10062  12AF  0875               	movf	??_strncpy+1,w
 10063  12B0  0085               	movwf	5
 10064  12B1  0800               	movf	0,w
 10065  12B2  3FC0               	movwi [0]fsr1
 10066  12B3  0889               	movf	9,f
 10067  12B4  1903               	btfsc	3,2
 10068  12B5  2ABF               	goto	i1l3839
 10069  12B6  2A9A               	goto	i1l3833
 10070  12B7                     i1l3835:	
 10071  12B7  0877               	movf	strncpy@cp,w
 10072  12B8  0086               	movwf	6
 10073  12B9  0187               	clrf	7
 10074  12BA  0181               	clrf	1
 10075  12BB  3001               	movlw	1
 10076  12BC  00F4               	movwf	??_strncpy
 10077  12BD  0874               	movf	??_strncpy,w
 10078  12BE  07F7               	addwf	strncpy@cp,f
 10079  12BF                     i1l3839:	
 10080  12BF  3001               	movlw	1
 10081  12C0  02F2               	subwf	strncpy@size,f
 10082  12C1  3000               	movlw	0
 10083  12C2  3BF3               	subwfb	strncpy@size+1,f
 10084  12C3  0A72               	incf	strncpy@size,w
 10085  12C4  1D03               	skipz
 10086  12C5  2AB7               	goto	i1l3835
 10087  12C6  0A73               	incf	strncpy@size+1,w
 10088  12C7  1903               	btfsc	3,2
 10089  12C8  0008               	return
 10090  12C9  2AB7               	goto	i1l3835
 10091  12CA                     __end_of_strncpy:	
 10092                           ;	Return value of _strncpy is never used
 10093                           
 10094                           
 10095                           	psect	text43
 10096  165C                     __ptext43:	
 10097 ;; *************** function _processline *****************
 10098 ;; Defined at:
 10099 ;;		line 98 in file "eusart.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  ch              1    wreg     PTR unsigned char 
 10102 ;;		 -> EUSART_Receive_ISR@str(8), 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  ch              1   44[BANK0 ] PTR unsigned char 
 10105 ;;		 -> EUSART_Receive_ISR@str(8), 
 10106 ;;  src2            8   23[BANK0 ] unsigned char [8]
 10107 ;;  src1            8   15[BANK0 ] unsigned char [8]
 10108 ;;  dist            5   35[BANK0 ] unsigned char [5]
 10109 ;;  bear            3   40[BANK0 ] unsigned char [3]
 10110 ;;  bearing         2   33[BANK0 ] int 
 10111 ;;  distance        2   31[BANK0 ] int 
 10112 ;;  ptr             1   43[BANK0 ] PTR unsigned char 
 10113 ;;		 -> processline@bear(3), processline@dist(5), 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;		None               void
 10116 ;; Registers used:
 10117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Totals:         1      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;Total ram usage:       31 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    3
 10130 ;; This function calls:
 10131 ;;		_goToPos
 10132 ;;		_strcpy
 10133 ;;		_strtol
 10134 ;;		i1_display
 10135 ;; This function is called by:
 10136 ;;		_EUSART_Receive_ISR
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           
 10141                           ;psect for function _processline
 10142  165C                     _processline:	
 10143                           
 10144                           ;incstack = 0
 10145                           ; Regs used in _processline: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10146                           ;processline@ch stored from wreg
 10147  165C  0020               	movlb	0	; select bank0
 10148  165D  00CC               	movwf	processline@ch
 10149                           
 10150                           ;eusart.c: 100: if(ch[0]=='d' && ch[5]=='b')
 10151  165E  084C               	movf	processline@ch,w
 10152  165F  0086               	movwf	6
 10153  1660  0187               	clrf	7
 10154  1661  3064               	movlw	100
 10155  1662  0601               	xorwf	1,w
 10156  1663  1D03               	btfss	3,2
 10157  1664  0008               	return
 10158  1665  084C               	movf	processline@ch,w
 10159  1666  3E05               	addlw	5
 10160  1667  0086               	movwf	6
 10161  1668  0187               	clrf	7
 10162  1669  3062               	movlw	98
 10163  166A  0601               	xorwf	1,w
 10164  166B  1D03               	btfss	3,2
 10165  166C  0008               	return
 10166                           
 10167                           ;eusart.c: 101: {
 10168                           ;eusart.c: 103: char src1[8];
 10169                           ;eusart.c: 104: char src2[8];
 10170                           ;eusart.c: 105: char dist[5];
 10171                           ;eusart.c: 106: char bear[3];
 10172                           ;eusart.c: 108: int distance;
 10173                           ;eusart.c: 109: int bearing;
 10174                           ;eusart.c: 112: strcpy(src1, ch);
 10175  166D  084C               	movf	processline@ch,w
 10176  166E  00FD               	movwf	??_processline
 10177  166F  087D               	movf	??_processline,w
 10178  1670  00F0               	movwf	strcpy@from
 10179  1671  302F               	movlw	(low (processline@src1| 0))& (0+255)
 10180  1672  3190  207C  3196   	fcall	_strcpy
 10181                           
 10182                           ;eusart.c: 113: strcpy(src2, ch);
 10183  1675  0020               	movlb	0	; select bank0
 10184  1676  084C               	movf	processline@ch,w
 10185  1677  00FD               	movwf	??_processline
 10186  1678  087D               	movf	??_processline,w
 10187  1679  00F0               	movwf	strcpy@from
 10188  167A  3037               	movlw	(low (processline@src2| 0))& (0+255)
 10189  167B  3190  207C  3196   	fcall	_strcpy
 10190                           
 10191                           ;eusart.c: 114: dist[0] = ch[1];
 10192  167E  0020               	movlb	0	; select bank0
 10193  167F  084C               	movf	processline@ch,w
 10194  1680  0086               	movwf	6
 10195  1681  0187               	clrf	7
 10196  1682  3F41               	moviw [1]fsr1
 10197  1683  00C3               	movwf	processline@dist
 10198                           
 10199                           ;eusart.c: 115: dist[1] = ch[2];
 10200  1684  084C               	movf	processline@ch,w
 10201  1685  0086               	movwf	6
 10202  1686  0187               	clrf	7
 10203  1687  3F42               	moviw [2]fsr1
 10204  1688  00C4               	movwf	processline@dist+1
 10205                           
 10206                           ;eusart.c: 116: dist[2] = ch[3];
 10207  1689  084C               	movf	processline@ch,w
 10208  168A  0086               	movwf	6
 10209  168B  0187               	clrf	7
 10210  168C  3F43               	moviw [3]fsr1
 10211  168D  00C5               	movwf	processline@dist+2
 10212                           
 10213                           ;eusart.c: 117: dist[3] = ch[4];
 10214  168E  084C               	movf	processline@ch,w
 10215  168F  0086               	movwf	6
 10216  1690  0187               	clrf	7
 10217  1691  3F44               	moviw [4]fsr1
 10218  1692  00C6               	movwf	processline@dist+3
 10219                           
 10220                           ;eusart.c: 118: dist[4] = '\0';
 10221  1693  01C7               	clrf	processline@dist+4
 10222                           
 10223                           ;eusart.c: 120: bear[0] = ch[6];
 10224  1694  084C               	movf	processline@ch,w
 10225  1695  0086               	movwf	6
 10226  1696  0187               	clrf	7
 10227  1697  3F46               	moviw [6]fsr1
 10228  1698  00C8               	movwf	processline@bear
 10229                           
 10230                           ;eusart.c: 121: bear[1] = ch[7];
 10231  1699  084C               	movf	processline@ch,w
 10232  169A  0086               	movwf	6
 10233  169B  0187               	clrf	7
 10234  169C  3F47               	moviw [7]fsr1
 10235  169D  00C9               	movwf	processline@bear+1
 10236                           
 10237                           ;eusart.c: 122: bear[2] = '\0';
 10238  169E  01CA               	clrf	processline@bear+2
 10239                           
 10240                           ;eusart.c: 133: char *ptr;
 10241                           ;eusart.c: 134: distance = strtol(dist, &ptr, 10);
 10242  169F  304B               	movlw	(low (processline@ptr| 0))& (0+255)
 10243  16A0  00FD               	movwf	??_processline
 10244  16A1  087D               	movf	??_processline,w
 10245  16A2  00A0               	movwf	strtol@endptr
 10246  16A3  300A               	movlw	10
 10247  16A4  00A1               	movwf	strtol@base
 10248  16A5  3000               	movlw	0
 10249  16A6  00A2               	movwf	strtol@base+1
 10250  16A7  3043               	movlw	(low (processline@dist| 0))& (0+255)
 10251  16A8  3189  21C8  3196   	fcall	_strtol
 10252  16AB  0020               	movlb	0	; select bank0
 10253  16AC  0821               	movf	?_strtol+1,w
 10254  16AD  00C0               	movwf	processline@distance+1
 10255  16AE  0820               	movf	?_strtol,w
 10256  16AF  00BF               	movwf	processline@distance
 10257                           
 10258                           ;eusart.c: 135: bearing = strtol(bear, &ptr, 10);
 10259  16B0  304B               	movlw	(low (processline@ptr| 0))& (0+255)
 10260  16B1  00FD               	movwf	??_processline
 10261  16B2  087D               	movf	??_processline,w
 10262  16B3  00A0               	movwf	strtol@endptr
 10263  16B4  300A               	movlw	10
 10264  16B5  00A1               	movwf	strtol@base
 10265  16B6  3000               	movlw	0
 10266  16B7  00A2               	movwf	strtol@base+1
 10267  16B8  3048               	movlw	(low (processline@bear| 0))& (0+255)
 10268  16B9  3189  21C8  3196   	fcall	_strtol
 10269  16BC  0020               	movlb	0	; select bank0
 10270  16BD  0821               	movf	?_strtol+1,w
 10271  16BE  00C2               	movwf	processline@bearing+1
 10272  16BF  0820               	movf	?_strtol,w
 10273  16C0  00C1               	movwf	processline@bearing
 10274                           
 10275                           ;eusart.c: 141: display(distance);
 10276  16C1  0840               	movf	processline@distance+1,w
 10277  16C2  00A5               	movwf	i1display@x+1
 10278  16C3  083F               	movf	processline@distance,w
 10279  16C4  00A4               	movwf	i1display@x
 10280  16C5  3183  2339  3196   	fcall	i1_display
 10281                           
 10282                           ;eusart.c: 147: goToPos(bearing);
 10283  16C8  0020               	movlb	0	; select bank0
 10284  16C9  0842               	movf	processline@bearing+1,w
 10285  16CA  00F3               	movwf	goToPos@pos+1
 10286  16CB  0841               	movf	processline@bearing,w
 10287  16CC  00F2               	movwf	goToPos@pos
 10288  16CD  3193  2391         	fcall	_goToPos
 10289  16CF  0008               	return
 10290  16D0                     __end_of_processline:	
 10291                           
 10292                           	psect	text44
 10293  0339                     __ptext44:	
 10294 ;; *************** function i1_display *****************
 10295 ;; Defined at:
 10296 ;;		line 161 in file "DigitsDriver.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  x               2    4[BANK0 ] int 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;  display         2   13[BANK0 ] int 
 10301 ;;  display         2   11[BANK0 ] int 
 10302 ;;  display         2    9[BANK0 ] int 
 10303 ;;  display         2    7[BANK0 ] int 
 10304 ;;  display         1    6[BANK0 ] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;		None               void
 10307 ;; Registers used:
 10308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;Total ram usage:       12 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:    1
 10321 ;; This function calls:
 10322 ;;		i1___awdiv
 10323 ;;		i1___awmod
 10324 ;;		i1___bmul
 10325 ;; This function is called by:
 10326 ;;		_processline
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           
 10331                           ;psect for function i1_display
 10332  0339                     i1_display:	
 10333                           
 10334                           ;DigitsDriver.c: 163: bool neg =0;
 10335                           
 10336                           ;incstack = 0
 10337                           ; Regs used in i1_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10338  0339  0020               	movlb	0	; select bank0
 10339  033A  01A6               	clrf	i1display@neg
 10340                           
 10341                           ;DigitsDriver.c: 165: if(x<0)
 10342  033B  1FA5               	btfss	i1display@x+1,7
 10343  033C  2B44               	goto	i1l3571
 10344                           
 10345                           ;DigitsDriver.c: 166: {
 10346                           ;DigitsDriver.c: 167: neg=1;
 10347  033D  01A6               	clrf	i1display@neg
 10348  033E  0AA6               	incf	i1display@neg,f
 10349                           
 10350                           ;DigitsDriver.c: 168: x=-1*x;
 10351  033F  09A4               	comf	i1display@x,f
 10352  0340  09A5               	comf	i1display@x+1,f
 10353  0341  0AA4               	incf	i1display@x,f
 10354  0342  1903               	skipnz
 10355  0343  0AA5               	incf	i1display@x+1,f
 10356  0344                     i1l3571:	
 10357                           
 10358                           ;DigitsDriver.c: 169: }
 10359                           ;DigitsDriver.c: 172: int x3=x/1000;
 10360  0344  30E8               	movlw	232
 10361  0345  00F7               	movwf	i1___awdiv@divisor
 10362  0346  3003               	movlw	3
 10363  0347  00F8               	movwf	i1___awdiv@divisor+1
 10364  0348  0825               	movf	i1display@x+1,w
 10365  0349  00FA               	movwf	i1___awdiv@dividend+1
 10366  034A  0824               	movf	i1display@x,w
 10367  034B  00F9               	movwf	i1___awdiv@dividend
 10368  034C  3194  2427  3183   	fcall	i1___awdiv
 10369  034F  0878               	movf	?i1___awdiv+1,w
 10370  0350  0020               	movlb	0	; select bank0
 10371  0351  00AE               	movwf	i1display@x3+1
 10372  0352  0877               	movf	?i1___awdiv,w
 10373  0353  00AD               	movwf	i1display@x3
 10374                           
 10375                           ;DigitsDriver.c: 173: int x2=(x%1000)/100;
 10376  0354  3064               	movlw	100
 10377  0355  00F7               	movwf	i1___awdiv@divisor
 10378  0356  3000               	movlw	0
 10379  0357  00F8               	movwf	i1___awdiv@divisor+1
 10380  0358  0825               	movf	i1display@x+1,w
 10381  0359  00F3               	movwf	i1___awmod@dividend+1
 10382  035A  0824               	movf	i1display@x,w
 10383  035B  00F2               	movwf	i1___awmod@dividend
 10384  035C  30E8               	movlw	232
 10385  035D  00F0               	movwf	i1___awmod@divisor
 10386  035E  3003               	movlw	3
 10387  035F  00F1               	movwf	i1___awmod@divisor+1
 10388  0360  3193  2306  3183   	fcall	i1___awmod
 10389  0363  0871               	movf	?i1___awmod+1,w
 10390  0364  00FA               	movwf	i1___awdiv@dividend+1
 10391  0365  0870               	movf	?i1___awmod,w
 10392  0366  00F9               	movwf	i1___awdiv@dividend
 10393  0367  3194  2427  3183   	fcall	i1___awdiv
 10394  036A  0878               	movf	?i1___awdiv+1,w
 10395  036B  0020               	movlb	0	; select bank0
 10396  036C  00AC               	movwf	i1display@x2+1
 10397  036D  0877               	movf	?i1___awdiv,w
 10398  036E  00AB               	movwf	i1display@x2
 10399                           
 10400                           ;DigitsDriver.c: 174: int x1=(x%100)/10;
 10401  036F  300A               	movlw	10
 10402  0370  00F7               	movwf	i1___awdiv@divisor
 10403  0371  3000               	movlw	0
 10404  0372  00F8               	movwf	i1___awdiv@divisor+1
 10405  0373  0825               	movf	i1display@x+1,w
 10406  0374  00F3               	movwf	i1___awmod@dividend+1
 10407  0375  0824               	movf	i1display@x,w
 10408  0376  00F2               	movwf	i1___awmod@dividend
 10409  0377  3064               	movlw	100
 10410  0378  00F0               	movwf	i1___awmod@divisor
 10411  0379  3000               	movlw	0
 10412  037A  00F1               	movwf	i1___awmod@divisor+1
 10413  037B  3193  2306  3183   	fcall	i1___awmod
 10414  037E  0871               	movf	?i1___awmod+1,w
 10415  037F  00FA               	movwf	i1___awdiv@dividend+1
 10416  0380  0870               	movf	?i1___awmod,w
 10417  0381  00F9               	movwf	i1___awdiv@dividend
 10418  0382  3194  2427  3183   	fcall	i1___awdiv
 10419  0385  0878               	movf	?i1___awdiv+1,w
 10420  0386  0020               	movlb	0	; select bank0
 10421  0387  00AA               	movwf	i1display@x1+1
 10422  0388  0877               	movf	?i1___awdiv,w
 10423  0389  00A9               	movwf	i1display@x1
 10424                           
 10425                           ;DigitsDriver.c: 175: int x0 = x%10;
 10426  038A  300A               	movlw	10
 10427  038B  00F0               	movwf	i1___awmod@divisor
 10428  038C  3000               	movlw	0
 10429  038D  00F1               	movwf	i1___awmod@divisor+1
 10430  038E  0825               	movf	i1display@x+1,w
 10431  038F  00F3               	movwf	i1___awmod@dividend+1
 10432  0390  0824               	movf	i1display@x,w
 10433  0391  00F2               	movwf	i1___awmod@dividend
 10434  0392  3193  2306  3183   	fcall	i1___awmod
 10435  0395  0871               	movf	?i1___awmod+1,w
 10436  0396  0020               	movlb	0	; select bank0
 10437  0397  00A8               	movwf	i1display@x0+1
 10438  0398  0870               	movf	?i1___awmod,w
 10439  0399  00A7               	movwf	i1display@x0
 10440                           
 10441                           ;DigitsDriver.c: 177: if ((x3==0) && (x2==0) && (x1==0))
 10442  039A  082D               	movf	i1display@x3,w
 10443  039B  042E               	iorwf	i1display@x3+1,w
 10444  039C  1D03               	btfss	3,2
 10445  039D  2BAA               	goto	i1l3587
 10446  039E  082B               	movf	i1display@x2,w
 10447  039F  042C               	iorwf	i1display@x2+1,w
 10448  03A0  1D03               	btfss	3,2
 10449  03A1  2BAA               	goto	i1l3587
 10450  03A2  0829               	movf	i1display@x1,w
 10451  03A3  042A               	iorwf	i1display@x1+1,w
 10452  03A4  1D03               	btfss	3,2
 10453  03A5  2BAA               	goto	i1l3587
 10454                           
 10455                           ;DigitsDriver.c: 178: x1=10;
 10456  03A6  300A               	movlw	10
 10457  03A7  00A9               	movwf	i1display@x1
 10458  03A8  3000               	movlw	0
 10459  03A9  00AA               	movwf	i1display@x1+1
 10460  03AA                     i1l3587:	
 10461                           
 10462                           ;DigitsDriver.c: 179: if ((x3==0) && (x2==0))
 10463  03AA  082D               	movf	i1display@x3,w
 10464  03AB  042E               	iorwf	i1display@x3+1,w
 10465  03AC  1D03               	btfss	3,2
 10466  03AD  2BB6               	goto	i1l3593
 10467  03AE  082B               	movf	i1display@x2,w
 10468  03AF  042C               	iorwf	i1display@x2+1,w
 10469  03B0  1D03               	btfss	3,2
 10470  03B1  2BB6               	goto	i1l3593
 10471                           
 10472                           ;DigitsDriver.c: 180: x2=10;
 10473  03B2  300A               	movlw	10
 10474  03B3  00AB               	movwf	i1display@x2
 10475  03B4  3000               	movlw	0
 10476  03B5  00AC               	movwf	i1display@x2+1
 10477  03B6                     i1l3593:	
 10478                           
 10479                           ;DigitsDriver.c: 181: if (x3==0)
 10480  03B6  082D               	movf	i1display@x3,w
 10481  03B7  042E               	iorwf	i1display@x3+1,w
 10482  03B8  1D03               	btfss	3,2
 10483  03B9  2BBE               	goto	i1l3597
 10484                           
 10485                           ;DigitsDriver.c: 182: x3=10;
 10486  03BA  300A               	movlw	10
 10487  03BB  00AD               	movwf	i1display@x3
 10488  03BC  3000               	movlw	0
 10489  03BD  00AE               	movwf	i1display@x3+1
 10490  03BE                     i1l3597:	
 10491                           
 10492                           ;DigitsDriver.c: 186: RF1=DIGIT[x0][0];
 10493  03BE  3007               	movlw	7
 10494  03BF  00FC               	movwf	??i1_display
 10495  03C0  087C               	movf	??i1_display,w
 10496  03C1  00F0               	movwf	i1___bmul@multiplicand
 10497  03C2  0827               	movf	i1display@x0,w
 10498  03C3  3190  201F  3183   	fcall	i1___bmul
 10499  03C6  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10500  03C7  0086               	movwf	6
 10501  03C8  3001               	movlw	1	; select bank3/4
 10502  03C9  0087               	movwf	7
 10503  03CA  1C01               	btfss	1,0
 10504  03CB  2BCF               	goto	u590_20
 10505  03CC  0025               	movlb	5	; select bank5
 10506  03CD  148C               	bsf	12,1	;volatile
 10507  03CE  2BD1               	goto	i1l3599
 10508  03CF                     u590_20:	
 10509  03CF  0025               	movlb	5	; select bank5
 10510  03D0  108C               	bcf	12,1	;volatile
 10511  03D1                     i1l3599:	
 10512                           
 10513                           ;DigitsDriver.c: 187: RF2=DIGIT[x0][1];
 10514  03D1  3007               	movlw	7
 10515  03D2  00FC               	movwf	??i1_display
 10516  03D3  087C               	movf	??i1_display,w
 10517  03D4  00F0               	movwf	i1___bmul@multiplicand
 10518  03D5  0020               	movlb	0	; select bank0
 10519  03D6  0827               	movf	i1display@x0,w
 10520  03D7  3190  201F  3183   	fcall	i1___bmul
 10521  03DA  3E01               	addlw	1
 10522  03DB  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10523  03DC  0086               	movwf	6
 10524  03DD  3001               	movlw	1	; select bank3/4
 10525  03DE  0087               	movwf	7
 10526  03DF  1C01               	btfss	1,0
 10527  03E0  2BE4               	goto	u592_20
 10528  03E1  0025               	movlb	5	; select bank5
 10529  03E2  150C               	bsf	12,2	;volatile
 10530  03E3  2BE6               	goto	i1l3601
 10531  03E4                     u592_20:	
 10532  03E4  0025               	movlb	5	; select bank5
 10533  03E5  110C               	bcf	12,2	;volatile
 10534  03E6                     i1l3601:	
 10535                           
 10536                           ;DigitsDriver.c: 188: RF0=DIGIT[x0][2];
 10537  03E6  3007               	movlw	7
 10538  03E7  00FC               	movwf	??i1_display
 10539  03E8  087C               	movf	??i1_display,w
 10540  03E9  00F0               	movwf	i1___bmul@multiplicand
 10541  03EA  0020               	movlb	0	; select bank0
 10542  03EB  0827               	movf	i1display@x0,w
 10543  03EC  3190  201F  3183   	fcall	i1___bmul
 10544  03EF  3E02               	addlw	2
 10545  03F0  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10546  03F1  0086               	movwf	6
 10547  03F2  3001               	movlw	1	; select bank3/4
 10548  03F3  0087               	movwf	7
 10549  03F4  1C01               	btfss	1,0
 10550  03F5  2BF9               	goto	u594_20
 10551  03F6  0025               	movlb	5	; select bank5
 10552  03F7  140C               	bsf	12,0	;volatile
 10553  03F8  2BFB               	goto	i1l3603
 10554  03F9                     u594_20:	
 10555  03F9  0025               	movlb	5	; select bank5
 10556  03FA  100C               	bcf	12,0	;volatile
 10557  03FB                     i1l3603:	
 10558                           
 10559                           ;DigitsDriver.c: 189: RF3=DIGIT[x0][3];
 10560  03FB  3007               	movlw	7
 10561  03FC  00FC               	movwf	??i1_display
 10562  03FD  087C               	movf	??i1_display,w
 10563  03FE  00F0               	movwf	i1___bmul@multiplicand
 10564  03FF  0020               	movlb	0	; select bank0
 10565  0400  0827               	movf	i1display@x0,w
 10566  0401  3190  201F  3183   	fcall	i1___bmul
 10567  0404  3E03               	addlw	3
 10568  0405  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10569  0406  0086               	movwf	6
 10570  0407  3001               	movlw	1	; select bank3/4
 10571  0408  0087               	movwf	7
 10572  0409  1C01               	btfss	1,0
 10573  040A  2C0E               	goto	u596_20
 10574  040B  0025               	movlb	5	; select bank5
 10575  040C  158C               	bsf	12,3	;volatile
 10576  040D  2C10               	goto	i1l3605
 10577  040E                     u596_20:	
 10578  040E  0025               	movlb	5	; select bank5
 10579  040F  118C               	bcf	12,3	;volatile
 10580  0410                     i1l3605:	
 10581                           
 10582                           ;DigitsDriver.c: 190: RA0=DIGIT[x0][4];
 10583  0410  3007               	movlw	7
 10584  0411  00FC               	movwf	??i1_display
 10585  0412  087C               	movf	??i1_display,w
 10586  0413  00F0               	movwf	i1___bmul@multiplicand
 10587  0414  0020               	movlb	0	; select bank0
 10588  0415  0827               	movf	i1display@x0,w
 10589  0416  3190  201F  3183   	fcall	i1___bmul
 10590  0419  3E04               	addlw	4
 10591  041A  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10592  041B  0086               	movwf	6
 10593  041C  3001               	movlw	1	; select bank3/4
 10594  041D  0087               	movwf	7
 10595  041E  1C01               	btfss	1,0
 10596  041F  2C23               	goto	u598_20
 10597  0420  0020               	movlb	0	; select bank0
 10598  0421  140C               	bsf	12,0	;volatile
 10599  0422  2C25               	goto	i1l3607
 10600  0423                     u598_20:	
 10601  0423  0020               	movlb	0	; select bank0
 10602  0424  100C               	bcf	12,0	;volatile
 10603  0425                     i1l3607:	
 10604                           
 10605                           ;DigitsDriver.c: 191: RA2=DIGIT[x0][5];
 10606  0425  3007               	movlw	7
 10607  0426  00FC               	movwf	??i1_display
 10608  0427  087C               	movf	??i1_display,w
 10609  0428  00F0               	movwf	i1___bmul@multiplicand
 10610  0429  0827               	movf	i1display@x0,w
 10611  042A  3190  201F  3183   	fcall	i1___bmul
 10612  042D  3E05               	addlw	5
 10613  042E  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10614  042F  0086               	movwf	6
 10615  0430  3001               	movlw	1	; select bank3/4
 10616  0431  0087               	movwf	7
 10617  0432  1C01               	btfss	1,0
 10618  0433  2C37               	goto	u600_20
 10619  0434  0020               	movlb	0	; select bank0
 10620  0435  150C               	bsf	12,2	;volatile
 10621  0436  2C39               	goto	i1l3609
 10622  0437                     u600_20:	
 10623  0437  0020               	movlb	0	; select bank0
 10624  0438  110C               	bcf	12,2	;volatile
 10625  0439                     i1l3609:	
 10626                           
 10627                           ;DigitsDriver.c: 192: RA1=DIGIT[x0][6];
 10628  0439  3007               	movlw	7
 10629  043A  00FC               	movwf	??i1_display
 10630  043B  087C               	movf	??i1_display,w
 10631  043C  00F0               	movwf	i1___bmul@multiplicand
 10632  043D  0827               	movf	i1display@x0,w
 10633  043E  3190  201F  3183   	fcall	i1___bmul
 10634  0441  3E06               	addlw	6
 10635  0442  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10636  0443  0086               	movwf	6
 10637  0444  3001               	movlw	1	; select bank3/4
 10638  0445  0087               	movwf	7
 10639  0446  1C01               	btfss	1,0
 10640  0447  2C4B               	goto	u602_20
 10641  0448  0020               	movlb	0	; select bank0
 10642  0449  148C               	bsf	12,1	;volatile
 10643  044A  2C4D               	goto	i1l3611
 10644  044B                     u602_20:	
 10645  044B  0020               	movlb	0	; select bank0
 10646  044C  108C               	bcf	12,1	;volatile
 10647  044D                     i1l3611:	
 10648                           
 10649                           ;DigitsDriver.c: 194: RF5=DIGIT[x1][0];
 10650  044D  3007               	movlw	7
 10651  044E  00FC               	movwf	??i1_display
 10652  044F  087C               	movf	??i1_display,w
 10653  0450  00F0               	movwf	i1___bmul@multiplicand
 10654  0451  0829               	movf	i1display@x1,w
 10655  0452  3190  201F  3183   	fcall	i1___bmul
 10656  0455  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10657  0456  0086               	movwf	6
 10658  0457  3001               	movlw	1	; select bank3/4
 10659  0458  0087               	movwf	7
 10660  0459  1C01               	btfss	1,0
 10661  045A  2C5E               	goto	u604_20
 10662  045B  0025               	movlb	5	; select bank5
 10663  045C  168C               	bsf	12,5	;volatile
 10664  045D  2C60               	goto	i1l3613
 10665  045E                     u604_20:	
 10666  045E  0025               	movlb	5	; select bank5
 10667  045F  128C               	bcf	12,5	;volatile
 10668  0460                     i1l3613:	
 10669                           
 10670                           ;DigitsDriver.c: 195: RF6=DIGIT[x1][1];
 10671  0460  3007               	movlw	7
 10672  0461  00FC               	movwf	??i1_display
 10673  0462  087C               	movf	??i1_display,w
 10674  0463  00F0               	movwf	i1___bmul@multiplicand
 10675  0464  0020               	movlb	0	; select bank0
 10676  0465  0829               	movf	i1display@x1,w
 10677  0466  3190  201F  3183   	fcall	i1___bmul
 10678  0469  3E01               	addlw	1
 10679  046A  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10680  046B  0086               	movwf	6
 10681  046C  3001               	movlw	1	; select bank3/4
 10682  046D  0087               	movwf	7
 10683  046E  1C01               	btfss	1,0
 10684  046F  2C73               	goto	u606_20
 10685  0470  0025               	movlb	5	; select bank5
 10686  0471  170C               	bsf	12,6	;volatile
 10687  0472  2C75               	goto	i1l3615
 10688  0473                     u606_20:	
 10689  0473  0025               	movlb	5	; select bank5
 10690  0474  130C               	bcf	12,6	;volatile
 10691  0475                     i1l3615:	
 10692                           
 10693                           ;DigitsDriver.c: 196: RF4=DIGIT[x1][2];
 10694  0475  3007               	movlw	7
 10695  0476  00FC               	movwf	??i1_display
 10696  0477  087C               	movf	??i1_display,w
 10697  0478  00F0               	movwf	i1___bmul@multiplicand
 10698  0479  0020               	movlb	0	; select bank0
 10699  047A  0829               	movf	i1display@x1,w
 10700  047B  3190  201F  3183   	fcall	i1___bmul
 10701  047E  3E02               	addlw	2
 10702  047F  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10703  0480  0086               	movwf	6
 10704  0481  3001               	movlw	1	; select bank3/4
 10705  0482  0087               	movwf	7
 10706  0483  1C01               	btfss	1,0
 10707  0484  2C88               	goto	u608_20
 10708  0485  0025               	movlb	5	; select bank5
 10709  0486  160C               	bsf	12,4	;volatile
 10710  0487  2C8A               	goto	i1l3617
 10711  0488                     u608_20:	
 10712  0488  0025               	movlb	5	; select bank5
 10713  0489  120C               	bcf	12,4	;volatile
 10714  048A                     i1l3617:	
 10715                           
 10716                           ;DigitsDriver.c: 197: RF7=DIGIT[x1][3];
 10717  048A  3007               	movlw	7
 10718  048B  00FC               	movwf	??i1_display
 10719  048C  087C               	movf	??i1_display,w
 10720  048D  00F0               	movwf	i1___bmul@multiplicand
 10721  048E  0020               	movlb	0	; select bank0
 10722  048F  0829               	movf	i1display@x1,w
 10723  0490  3190  201F  3183   	fcall	i1___bmul
 10724  0493  3E03               	addlw	3
 10725  0494  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10726  0495  0086               	movwf	6
 10727  0496  3001               	movlw	1	; select bank3/4
 10728  0497  0087               	movwf	7
 10729  0498  1C01               	btfss	1,0
 10730  0499  2C9D               	goto	u610_20
 10731  049A  0025               	movlb	5	; select bank5
 10732  049B  178C               	bsf	12,7	;volatile
 10733  049C  2C9F               	goto	i1l3619
 10734  049D                     u610_20:	
 10735  049D  0025               	movlb	5	; select bank5
 10736  049E  138C               	bcf	12,7	;volatile
 10737  049F                     i1l3619:	
 10738                           
 10739                           ;DigitsDriver.c: 198: RC0=DIGIT[x1][4];
 10740  049F  3007               	movlw	7
 10741  04A0  00FC               	movwf	??i1_display
 10742  04A1  087C               	movf	??i1_display,w
 10743  04A2  00F0               	movwf	i1___bmul@multiplicand
 10744  04A3  0020               	movlb	0	; select bank0
 10745  04A4  0829               	movf	i1display@x1,w
 10746  04A5  3190  201F  3183   	fcall	i1___bmul
 10747  04A8  3E04               	addlw	4
 10748  04A9  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10749  04AA  0086               	movwf	6
 10750  04AB  3001               	movlw	1	; select bank3/4
 10751  04AC  0087               	movwf	7
 10752  04AD  1C01               	btfss	1,0
 10753  04AE  2CB2               	goto	u612_20
 10754  04AF  0020               	movlb	0	; select bank0
 10755  04B0  140E               	bsf	14,0	;volatile
 10756  04B1  2CB4               	goto	i1l3621
 10757  04B2                     u612_20:	
 10758  04B2  0020               	movlb	0	; select bank0
 10759  04B3  100E               	bcf	14,0	;volatile
 10760  04B4                     i1l3621:	
 10761                           
 10762                           ;DigitsDriver.c: 199: RA4=DIGIT[x1][5];
 10763  04B4  3007               	movlw	7
 10764  04B5  00FC               	movwf	??i1_display
 10765  04B6  087C               	movf	??i1_display,w
 10766  04B7  00F0               	movwf	i1___bmul@multiplicand
 10767  04B8  0829               	movf	i1display@x1,w
 10768  04B9  3190  201F  3183   	fcall	i1___bmul
 10769  04BC  3E05               	addlw	5
 10770  04BD  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10771  04BE  0086               	movwf	6
 10772  04BF  3001               	movlw	1	; select bank3/4
 10773  04C0  0087               	movwf	7
 10774  04C1  1C01               	btfss	1,0
 10775  04C2  2CC6               	goto	u614_20
 10776  04C3  0020               	movlb	0	; select bank0
 10777  04C4  160C               	bsf	12,4	;volatile
 10778  04C5  2CC8               	goto	i1l3623
 10779  04C6                     u614_20:	
 10780  04C6  0020               	movlb	0	; select bank0
 10781  04C7  120C               	bcf	12,4	;volatile
 10782  04C8                     i1l3623:	
 10783                           
 10784                           ;DigitsDriver.c: 200: RC1=DIGIT[x1][6];
 10785  04C8  3007               	movlw	7
 10786  04C9  00FC               	movwf	??i1_display
 10787  04CA  087C               	movf	??i1_display,w
 10788  04CB  00F0               	movwf	i1___bmul@multiplicand
 10789  04CC  0829               	movf	i1display@x1,w
 10790  04CD  3190  201F  3183   	fcall	i1___bmul
 10791  04D0  3E06               	addlw	6
 10792  04D1  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10793  04D2  0086               	movwf	6
 10794  04D3  3001               	movlw	1	; select bank3/4
 10795  04D4  0087               	movwf	7
 10796  04D5  1C01               	btfss	1,0
 10797  04D6  2CDA               	goto	u616_20
 10798  04D7  0020               	movlb	0	; select bank0
 10799  04D8  148E               	bsf	14,1	;volatile
 10800  04D9  2CDC               	goto	i1l3625
 10801  04DA                     u616_20:	
 10802  04DA  0020               	movlb	0	; select bank0
 10803  04DB  108E               	bcf	14,1	;volatile
 10804  04DC                     i1l3625:	
 10805                           
 10806                           ;DigitsDriver.c: 202: RG2=DIGIT[x2][0];
 10807  04DC  3007               	movlw	7
 10808  04DD  00FC               	movwf	??i1_display
 10809  04DE  087C               	movf	??i1_display,w
 10810  04DF  00F0               	movwf	i1___bmul@multiplicand
 10811  04E0  082B               	movf	i1display@x2,w
 10812  04E1  3190  201F  3183   	fcall	i1___bmul
 10813  04E4  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10814  04E5  0086               	movwf	6
 10815  04E6  3001               	movlw	1	; select bank3/4
 10816  04E7  0087               	movwf	7
 10817  04E8  1C01               	btfss	1,0
 10818  04E9  2CED               	goto	u618_20
 10819  04EA  0025               	movlb	5	; select bank5
 10820  04EB  150D               	bsf	13,2	;volatile
 10821  04EC  2CEF               	goto	i1l3627
 10822  04ED                     u618_20:	
 10823  04ED  0025               	movlb	5	; select bank5
 10824  04EE  110D               	bcf	13,2	;volatile
 10825  04EF                     i1l3627:	
 10826                           
 10827                           ;DigitsDriver.c: 203: RG1=DIGIT[x2][1];
 10828  04EF  3007               	movlw	7
 10829  04F0  00FC               	movwf	??i1_display
 10830  04F1  087C               	movf	??i1_display,w
 10831  04F2  00F0               	movwf	i1___bmul@multiplicand
 10832  04F3  0020               	movlb	0	; select bank0
 10833  04F4  082B               	movf	i1display@x2,w
 10834  04F5  3190  201F  3183   	fcall	i1___bmul
 10835  04F8  3E01               	addlw	1
 10836  04F9  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10837  04FA  0086               	movwf	6
 10838  04FB  3001               	movlw	1	; select bank3/4
 10839  04FC  0087               	movwf	7
 10840  04FD  1C01               	btfss	1,0
 10841  04FE  2D02               	goto	u620_20
 10842  04FF  0025               	movlb	5	; select bank5
 10843  0500  148D               	bsf	13,1	;volatile
 10844  0501  2D04               	goto	i1l3629
 10845  0502                     u620_20:	
 10846  0502  0025               	movlb	5	; select bank5
 10847  0503  108D               	bcf	13,1	;volatile
 10848  0504                     i1l3629:	
 10849                           
 10850                           ;DigitsDriver.c: 204: RG3=DIGIT[x2][2];
 10851  0504  3007               	movlw	7
 10852  0505  00FC               	movwf	??i1_display
 10853  0506  087C               	movf	??i1_display,w
 10854  0507  00F0               	movwf	i1___bmul@multiplicand
 10855  0508  0020               	movlb	0	; select bank0
 10856  0509  082B               	movf	i1display@x2,w
 10857  050A  3190  201F  3183   	fcall	i1___bmul
 10858  050D  3E02               	addlw	2
 10859  050E  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10860  050F  0086               	movwf	6
 10861  0510  3001               	movlw	1	; select bank3/4
 10862  0511  0087               	movwf	7
 10863  0512  1C01               	btfss	1,0
 10864  0513  2D17               	goto	u622_20
 10865  0514  0025               	movlb	5	; select bank5
 10866  0515  158D               	bsf	13,3	;volatile
 10867  0516  2D19               	goto	i1l3631
 10868  0517                     u622_20:	
 10869  0517  0025               	movlb	5	; select bank5
 10870  0518  118D               	bcf	13,3	;volatile
 10871  0519                     i1l3631:	
 10872                           
 10873                           ;DigitsDriver.c: 205: RG0=DIGIT[x2][3];
 10874  0519  3007               	movlw	7
 10875  051A  00FC               	movwf	??i1_display
 10876  051B  087C               	movf	??i1_display,w
 10877  051C  00F0               	movwf	i1___bmul@multiplicand
 10878  051D  0020               	movlb	0	; select bank0
 10879  051E  082B               	movf	i1display@x2,w
 10880  051F  3190  201F  3183   	fcall	i1___bmul
 10881  0522  3E03               	addlw	3
 10882  0523  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10883  0524  0086               	movwf	6
 10884  0525  3001               	movlw	1	; select bank3/4
 10885  0526  0087               	movwf	7
 10886  0527  1C01               	btfss	1,0
 10887  0528  2D2C               	goto	u624_20
 10888  0529  0025               	movlb	5	; select bank5
 10889  052A  140D               	bsf	13,0	;volatile
 10890  052B  2D2E               	goto	i1l3633
 10891  052C                     u624_20:	
 10892  052C  0025               	movlb	5	; select bank5
 10893  052D  100D               	bcf	13,0	;volatile
 10894  052E                     i1l3633:	
 10895                           
 10896                           ;DigitsDriver.c: 206: RD0=DIGIT[x2][4];
 10897  052E  3007               	movlw	7
 10898  052F  00FC               	movwf	??i1_display
 10899  0530  087C               	movf	??i1_display,w
 10900  0531  00F0               	movwf	i1___bmul@multiplicand
 10901  0532  0020               	movlb	0	; select bank0
 10902  0533  082B               	movf	i1display@x2,w
 10903  0534  3190  201F  3183   	fcall	i1___bmul
 10904  0537  3E04               	addlw	4
 10905  0538  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10906  0539  0086               	movwf	6
 10907  053A  3001               	movlw	1	; select bank3/4
 10908  053B  0087               	movwf	7
 10909  053C  1C01               	btfss	1,0
 10910  053D  2D41               	goto	u626_20
 10911  053E  0020               	movlb	0	; select bank0
 10912  053F  140F               	bsf	15,0	;volatile
 10913  0540  2D43               	goto	i1l3635
 10914  0541                     u626_20:	
 10915  0541  0020               	movlb	0	; select bank0
 10916  0542  100F               	bcf	15,0	;volatile
 10917  0543                     i1l3635:	
 10918                           
 10919                           ;DigitsDriver.c: 207: RD2=DIGIT[x2][5];
 10920  0543  3007               	movlw	7
 10921  0544  00FC               	movwf	??i1_display
 10922  0545  087C               	movf	??i1_display,w
 10923  0546  00F0               	movwf	i1___bmul@multiplicand
 10924  0547  082B               	movf	i1display@x2,w
 10925  0548  3190  201F  3183   	fcall	i1___bmul
 10926  054B  3E05               	addlw	5
 10927  054C  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10928  054D  0086               	movwf	6
 10929  054E  3001               	movlw	1	; select bank3/4
 10930  054F  0087               	movwf	7
 10931  0550  1C01               	btfss	1,0
 10932  0551  2D55               	goto	u628_20
 10933  0552  0020               	movlb	0	; select bank0
 10934  0553  150F               	bsf	15,2	;volatile
 10935  0554  2D57               	goto	i1l3637
 10936  0555                     u628_20:	
 10937  0555  0020               	movlb	0	; select bank0
 10938  0556  110F               	bcf	15,2	;volatile
 10939  0557                     i1l3637:	
 10940                           
 10941                           ;DigitsDriver.c: 208: RD1=DIGIT[x2][6];
 10942  0557  3007               	movlw	7
 10943  0558  00FC               	movwf	??i1_display
 10944  0559  087C               	movf	??i1_display,w
 10945  055A  00F0               	movwf	i1___bmul@multiplicand
 10946  055B  082B               	movf	i1display@x2,w
 10947  055C  3190  201F  3183   	fcall	i1___bmul
 10948  055F  3E06               	addlw	6
 10949  0560  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10950  0561  0086               	movwf	6
 10951  0562  3001               	movlw	1	; select bank3/4
 10952  0563  0087               	movwf	7
 10953  0564  1C01               	btfss	1,0
 10954  0565  2D69               	goto	u630_20
 10955  0566  0020               	movlb	0	; select bank0
 10956  0567  148F               	bsf	15,1	;volatile
 10957  0568  2D6B               	goto	i1l3639
 10958  0569                     u630_20:	
 10959  0569  0020               	movlb	0	; select bank0
 10960  056A  108F               	bcf	15,1	;volatile
 10961  056B                     i1l3639:	
 10962                           
 10963                           ;DigitsDriver.c: 210: RE1=DIGIT[x3][0];
 10964  056B  3007               	movlw	7
 10965  056C  00FC               	movwf	??i1_display
 10966  056D  087C               	movf	??i1_display,w
 10967  056E  00F0               	movwf	i1___bmul@multiplicand
 10968  056F  082D               	movf	i1display@x3,w
 10969  0570  3190  201F  3183   	fcall	i1___bmul
 10970  0573  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10971  0574  0086               	movwf	6
 10972  0575  3001               	movlw	1	; select bank3/4
 10973  0576  0087               	movwf	7
 10974  0577  1C01               	btfss	1,0
 10975  0578  2D7C               	goto	u632_20
 10976  0579  0020               	movlb	0	; select bank0
 10977  057A  1490               	bsf	16,1	;volatile
 10978  057B  2D7E               	goto	i1l3641
 10979  057C                     u632_20:	
 10980  057C  0020               	movlb	0	; select bank0
 10981  057D  1090               	bcf	16,1	;volatile
 10982  057E                     i1l3641:	
 10983                           
 10984                           ;DigitsDriver.c: 211: RE2=DIGIT[x3][1];
 10985  057E  3007               	movlw	7
 10986  057F  00FC               	movwf	??i1_display
 10987  0580  087C               	movf	??i1_display,w
 10988  0581  00F0               	movwf	i1___bmul@multiplicand
 10989  0582  082D               	movf	i1display@x3,w
 10990  0583  3190  201F  3183   	fcall	i1___bmul
 10991  0586  3E01               	addlw	1
 10992  0587  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 10993  0588  0086               	movwf	6
 10994  0589  3001               	movlw	1	; select bank3/4
 10995  058A  0087               	movwf	7
 10996  058B  1C01               	btfss	1,0
 10997  058C  2D90               	goto	u634_20
 10998  058D  0020               	movlb	0	; select bank0
 10999  058E  1510               	bsf	16,2	;volatile
 11000  058F  2D92               	goto	i1l3643
 11001  0590                     u634_20:	
 11002  0590  0020               	movlb	0	; select bank0
 11003  0591  1110               	bcf	16,2	;volatile
 11004  0592                     i1l3643:	
 11005                           
 11006                           ;DigitsDriver.c: 212: RE0=DIGIT[x3][2];
 11007  0592  3007               	movlw	7
 11008  0593  00FC               	movwf	??i1_display
 11009  0594  087C               	movf	??i1_display,w
 11010  0595  00F0               	movwf	i1___bmul@multiplicand
 11011  0596  082D               	movf	i1display@x3,w
 11012  0597  3190  201F  3183   	fcall	i1___bmul
 11013  059A  3E02               	addlw	2
 11014  059B  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 11015  059C  0086               	movwf	6
 11016  059D  3001               	movlw	1	; select bank3/4
 11017  059E  0087               	movwf	7
 11018  059F  1C01               	btfss	1,0
 11019  05A0  2DA4               	goto	u636_20
 11020  05A1  0020               	movlb	0	; select bank0
 11021  05A2  1410               	bsf	16,0	;volatile
 11022  05A3  2DA6               	goto	i1l3645
 11023  05A4                     u636_20:	
 11024  05A4  0020               	movlb	0	; select bank0
 11025  05A5  1010               	bcf	16,0	;volatile
 11026  05A6                     i1l3645:	
 11027                           
 11028                           ;DigitsDriver.c: 213: RE3=DIGIT[x3][3];
 11029  05A6  3007               	movlw	7
 11030  05A7  00FC               	movwf	??i1_display
 11031  05A8  087C               	movf	??i1_display,w
 11032  05A9  00F0               	movwf	i1___bmul@multiplicand
 11033  05AA  082D               	movf	i1display@x3,w
 11034  05AB  3190  201F  3183   	fcall	i1___bmul
 11035  05AE  3E03               	addlw	3
 11036  05AF  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 11037  05B0  0086               	movwf	6
 11038  05B1  3001               	movlw	1	; select bank3/4
 11039  05B2  0087               	movwf	7
 11040  05B3  1C01               	btfss	1,0
 11041  05B4  2DB8               	goto	u638_20
 11042  05B5  0020               	movlb	0	; select bank0
 11043  05B6  1590               	bsf	16,3	;volatile
 11044  05B7  2DBA               	goto	i1l3647
 11045  05B8                     u638_20:	
 11046  05B8  0020               	movlb	0	; select bank0
 11047  05B9  1190               	bcf	16,3	;volatile
 11048  05BA                     i1l3647:	
 11049                           
 11050                           ;DigitsDriver.c: 214: RE4=DIGIT[x3][4];
 11051  05BA  3007               	movlw	7
 11052  05BB  00FC               	movwf	??i1_display
 11053  05BC  087C               	movf	??i1_display,w
 11054  05BD  00F0               	movwf	i1___bmul@multiplicand
 11055  05BE  082D               	movf	i1display@x3,w
 11056  05BF  3190  201F  3183   	fcall	i1___bmul
 11057  05C2  3E04               	addlw	4
 11058  05C3  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 11059  05C4  0086               	movwf	6
 11060  05C5  3001               	movlw	1	; select bank3/4
 11061  05C6  0087               	movwf	7
 11062  05C7  1C01               	btfss	1,0
 11063  05C8  2DCC               	goto	u640_20
 11064  05C9  0020               	movlb	0	; select bank0
 11065  05CA  1610               	bsf	16,4	;volatile
 11066  05CB  2DCE               	goto	i1l3649
 11067  05CC                     u640_20:	
 11068  05CC  0020               	movlb	0	; select bank0
 11069  05CD  1210               	bcf	16,4	;volatile
 11070  05CE                     i1l3649:	
 11071                           
 11072                           ;DigitsDriver.c: 215: RE6=DIGIT[x3][5];
 11073  05CE  3007               	movlw	7
 11074  05CF  00FC               	movwf	??i1_display
 11075  05D0  087C               	movf	??i1_display,w
 11076  05D1  00F0               	movwf	i1___bmul@multiplicand
 11077  05D2  082D               	movf	i1display@x3,w
 11078  05D3  3190  201F  3183   	fcall	i1___bmul
 11079  05D6  3E05               	addlw	5
 11080  05D7  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 11081  05D8  0086               	movwf	6
 11082  05D9  3001               	movlw	1	; select bank3/4
 11083  05DA  0087               	movwf	7
 11084  05DB  1C01               	btfss	1,0
 11085  05DC  2DE0               	goto	u642_20
 11086  05DD  0020               	movlb	0	; select bank0
 11087  05DE  1710               	bsf	16,6	;volatile
 11088  05DF  2DE2               	goto	i1l3651
 11089  05E0                     u642_20:	
 11090  05E0  0020               	movlb	0	; select bank0
 11091  05E1  1310               	bcf	16,6	;volatile
 11092  05E2                     i1l3651:	
 11093                           
 11094                           ;DigitsDriver.c: 216: RE5=DIGIT[x3][6];
 11095  05E2  3007               	movlw	7
 11096  05E3  00FC               	movwf	??i1_display
 11097  05E4  087C               	movf	??i1_display,w
 11098  05E5  00F0               	movwf	i1___bmul@multiplicand
 11099  05E6  082D               	movf	i1display@x3,w
 11100  05E7  3190  201F  3183   	fcall	i1___bmul
 11101  05EA  3E06               	addlw	6
 11102  05EB  3EA0               	addlw	(low (_DIGIT| (0+256)))& (0+255)
 11103  05EC  0086               	movwf	6
 11104  05ED  3001               	movlw	1	; select bank3/4
 11105  05EE  0087               	movwf	7
 11106  05EF  1C01               	btfss	1,0
 11107  05F0  2DF4               	goto	u644_20
 11108  05F1  0020               	movlb	0	; select bank0
 11109  05F2  1690               	bsf	16,5	;volatile
 11110  05F3  2DF6               	goto	i1l3653
 11111  05F4                     u644_20:	
 11112  05F4  0020               	movlb	0	; select bank0
 11113  05F5  1290               	bcf	16,5	;volatile
 11114  05F6                     i1l3653:	
 11115                           
 11116                           ;DigitsDriver.c: 218: if(neg)
 11117  05F6  0826               	movf	i1display@neg,w
 11118  05F7  1903               	btfsc	3,2
 11119  05F8  0008               	return
 11120                           
 11121                           ;DigitsDriver.c: 219: RE3=1;
 11122  05F9  1590               	bsf	16,3	;volatile
 11123  05FA  0008               	return
 11124  05FB                     __end_ofi1_display:	
 11125                           
 11126                           	psect	text45
 11127  101F                     __ptext45:	
 11128 ;; *************** function i1___bmul *****************
 11129 ;; Defined at:
 11130 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul8.c"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  multiplier      1    wreg     unsigned char 
 11133 ;;  multiplicand    1    0[COMMON] unsigned char 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  multiplier      1    2[COMMON] unsigned char 
 11136 ;;  __bmul          1    3[COMMON] unsigned char 
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1    wreg      unsigned char 
 11139 ;; Registers used:
 11140 ;;		wreg, status,2, status,0
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11146 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;Total ram usage:        4 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		i1_display
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           
 11160                           ;psect for function i1___bmul
 11161  101F                     i1___bmul:	
 11162                           
 11163                           ;incstack = 0
 11164                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 11165                           ;i1___bmul@multiplier stored from wreg
 11166  101F  00F2               	movwf	i1___bmul@multiplier
 11167  1020  01F3               	clrf	i1___bmul@product
 11168  1021                     i1l3319:	
 11169  1021  1C72               	btfss	i1___bmul@multiplier,0
 11170  1022  2827               	goto	i1l3323
 11171  1023  0870               	movf	i1___bmul@multiplicand,w
 11172  1024  00F1               	movwf	??i1___bmul
 11173  1025  0871               	movf	??i1___bmul,w
 11174  1026  07F3               	addwf	i1___bmul@product,f
 11175  1027                     i1l3323:	
 11176  1027  1003               	clrc
 11177  1028  0DF0               	rlf	i1___bmul@multiplicand,f
 11178  1029  1003               	clrc
 11179  102A  0CF2               	rrf	i1___bmul@multiplier,f
 11180  102B  0872               	movf	i1___bmul@multiplier,w
 11181  102C  1D03               	btfss	3,2
 11182  102D  2821               	goto	i1l3319
 11183  102E  0873               	movf	i1___bmul@product,w
 11184  102F  0008               	return
 11185  1030                     __end_ofi1___bmul:	
 11186                           
 11187                           	psect	text46
 11188  1306                     __ptext46:	
 11189 ;; *************** function i1___awmod *****************
 11190 ;; Defined at:
 11191 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awmod.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;  divisor         2    0[COMMON] int 
 11194 ;;  dividend        2    2[COMMON] int 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  __awmod         1    6[COMMON] unsigned char 
 11197 ;;  __awmod         1    5[COMMON] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  2    0[COMMON] int 
 11200 ;; Registers used:
 11201 ;;		wreg, status,2, status,0
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;Total ram usage:        7 bytes
 11212 ;; Hardware stack levels used:    1
 11213 ;; This function calls:
 11214 ;;		Nothing
 11215 ;; This function is called by:
 11216 ;;		i1_display
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           
 11221                           ;psect for function i1___awmod
 11222  1306                     i1___awmod:	
 11223                           
 11224                           ;incstack = 0
 11225                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 11226  1306  01F6               	clrf	i1___awmod@sign
 11227  1307  1FF3               	btfss	i1___awmod@dividend+1,7
 11228  1308  2B10               	goto	i1l3287
 11229  1309  09F2               	comf	i1___awmod@dividend,f
 11230  130A  09F3               	comf	i1___awmod@dividend+1,f
 11231  130B  0AF2               	incf	i1___awmod@dividend,f
 11232  130C  1903               	skipnz
 11233  130D  0AF3               	incf	i1___awmod@dividend+1,f
 11234  130E  01F6               	clrf	i1___awmod@sign
 11235  130F  0AF6               	incf	i1___awmod@sign,f
 11236  1310                     i1l3287:	
 11237  1310  1FF1               	btfss	i1___awmod@divisor+1,7
 11238  1311  2B17               	goto	i1l3291
 11239  1312  09F0               	comf	i1___awmod@divisor,f
 11240  1313  09F1               	comf	i1___awmod@divisor+1,f
 11241  1314  0AF0               	incf	i1___awmod@divisor,f
 11242  1315  1903               	skipnz
 11243  1316  0AF1               	incf	i1___awmod@divisor+1,f
 11244  1317                     i1l3291:	
 11245  1317  0870               	movf	i1___awmod@divisor,w
 11246  1318  0471               	iorwf	i1___awmod@divisor+1,w
 11247  1319  1903               	btfsc	3,2
 11248  131A  2B3E               	goto	i1l3309
 11249  131B  01F5               	clrf	i1___awmod@counter
 11250  131C  0AF5               	incf	i1___awmod@counter,f
 11251  131D                     i1l3299:	
 11252  131D  1BF1               	btfsc	i1___awmod@divisor+1,7
 11253  131E  2B29               	goto	i1l3301
 11254  131F  3001               	movlw	1
 11255  1320                     u536_25:	
 11256  1320  35F0               	lslf	i1___awmod@divisor,f
 11257  1321  0DF1               	rlf	i1___awmod@divisor+1,f
 11258  1322  0B89               	decfsz	9,f
 11259  1323  2B20               	goto	u536_25
 11260  1324  3001               	movlw	1
 11261  1325  00F4               	movwf	??i1___awmod
 11262  1326  0874               	movf	??i1___awmod,w
 11263  1327  07F5               	addwf	i1___awmod@counter,f
 11264  1328  2B1D               	goto	i1l3299
 11265  1329                     i1l3301:	
 11266  1329  0871               	movf	i1___awmod@divisor+1,w
 11267  132A  0273               	subwf	i1___awmod@dividend+1,w
 11268  132B  1D03               	skipz
 11269  132C  2B2F               	goto	u538_25
 11270  132D  0870               	movf	i1___awmod@divisor,w
 11271  132E  0272               	subwf	i1___awmod@dividend,w
 11272  132F                     u538_25:	
 11273  132F  1C03               	skipc
 11274  1330  2B35               	goto	i1l3305
 11275  1331  0870               	movf	i1___awmod@divisor,w
 11276  1332  02F2               	subwf	i1___awmod@dividend,f
 11277  1333  0871               	movf	i1___awmod@divisor+1,w
 11278  1334  3BF3               	subwfb	i1___awmod@dividend+1,f
 11279  1335                     i1l3305:	
 11280  1335  3001               	movlw	1
 11281  1336                     u539_25:	
 11282  1336  36F1               	lsrf	i1___awmod@divisor+1,f
 11283  1337  0CF0               	rrf	i1___awmod@divisor,f
 11284  1338  0B89               	decfsz	9,f
 11285  1339  2B36               	goto	u539_25
 11286  133A  3001               	movlw	1
 11287  133B  02F5               	subwf	i1___awmod@counter,f
 11288  133C  1D03               	btfss	3,2
 11289  133D  2B29               	goto	i1l3301
 11290  133E                     i1l3309:	
 11291  133E  0876               	movf	i1___awmod@sign,w
 11292  133F  1903               	btfsc	3,2
 11293  1340  2B46               	goto	i1l3313
 11294  1341  09F2               	comf	i1___awmod@dividend,f
 11295  1342  09F3               	comf	i1___awmod@dividend+1,f
 11296  1343  0AF2               	incf	i1___awmod@dividend,f
 11297  1344  1903               	skipnz
 11298  1345  0AF3               	incf	i1___awmod@dividend+1,f
 11299  1346                     i1l3313:	
 11300  1346  0873               	movf	i1___awmod@dividend+1,w
 11301  1347  00F1               	movwf	?i1___awmod+1
 11302  1348  0872               	movf	i1___awmod@dividend,w
 11303  1349  00F0               	movwf	?i1___awmod
 11304  134A  0008               	return
 11305  134B                     __end_ofi1___awmod:	
 11306                           
 11307                           	psect	text47
 11308  1427                     __ptext47:	
 11309 ;; *************** function i1___awdiv *****************
 11310 ;; Defined at:
 11311 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awdiv.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  divisor         2    7[COMMON] int 
 11314 ;;  dividend        2    9[COMMON] int 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;  __awdiv         2    2[BANK0 ] int 
 11317 ;;  __awdiv         1    1[BANK0 ] unsigned char 
 11318 ;;  __awdiv         1    0[BANK0 ] unsigned char 
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  2    7[COMMON] int 
 11321 ;; Registers used:
 11322 ;;		wreg, status,2, status,0
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;Total ram usage:        9 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; This function calls:
 11335 ;;		Nothing
 11336 ;; This function is called by:
 11337 ;;		i1_display
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           
 11342                           ;psect for function i1___awdiv
 11343  1427                     i1___awdiv:	
 11344                           
 11345                           ;incstack = 0
 11346                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 11347  1427  0020               	movlb	0	; select bank0
 11348  1428  01A1               	clrf	i1___awdiv@sign
 11349  1429  1FF8               	btfss	i1___awdiv@divisor+1,7
 11350  142A  2C32               	goto	i1l3243
 11351  142B  09F7               	comf	i1___awdiv@divisor,f
 11352  142C  09F8               	comf	i1___awdiv@divisor+1,f
 11353  142D  0AF7               	incf	i1___awdiv@divisor,f
 11354  142E  1903               	skipnz
 11355  142F  0AF8               	incf	i1___awdiv@divisor+1,f
 11356  1430  01A1               	clrf	i1___awdiv@sign
 11357  1431  0AA1               	incf	i1___awdiv@sign,f
 11358  1432                     i1l3243:	
 11359  1432  1FFA               	btfss	i1___awdiv@dividend+1,7
 11360  1433  2C3D               	goto	i1l3249
 11361  1434  09F9               	comf	i1___awdiv@dividend,f
 11362  1435  09FA               	comf	i1___awdiv@dividend+1,f
 11363  1436  0AF9               	incf	i1___awdiv@dividend,f
 11364  1437  1903               	skipnz
 11365  1438  0AFA               	incf	i1___awdiv@dividend+1,f
 11366  1439  3001               	movlw	1
 11367  143A  00FB               	movwf	??i1___awdiv
 11368  143B  087B               	movf	??i1___awdiv,w
 11369  143C  06A1               	xorwf	i1___awdiv@sign,f
 11370  143D                     i1l3249:	
 11371  143D  01A2               	clrf	i1___awdiv@quotient
 11372  143E  01A3               	clrf	i1___awdiv@quotient+1
 11373  143F  0877               	movf	i1___awdiv@divisor,w
 11374  1440  0478               	iorwf	i1___awdiv@divisor+1,w
 11375  1441  1903               	btfsc	3,2
 11376  1442  2C6C               	goto	i1l3271
 11377  1443  01A0               	clrf	i1___awdiv@counter
 11378  1444  0AA0               	incf	i1___awdiv@counter,f
 11379  1445                     i1l3259:	
 11380  1445  1BF8               	btfsc	i1___awdiv@divisor+1,7
 11381  1446  2C51               	goto	i1l3261
 11382  1447  3001               	movlw	1
 11383  1448                     u526_25:	
 11384  1448  35F7               	lslf	i1___awdiv@divisor,f
 11385  1449  0DF8               	rlf	i1___awdiv@divisor+1,f
 11386  144A  0B89               	decfsz	9,f
 11387  144B  2C48               	goto	u526_25
 11388  144C  3001               	movlw	1
 11389  144D  00FB               	movwf	??i1___awdiv
 11390  144E  087B               	movf	??i1___awdiv,w
 11391  144F  07A0               	addwf	i1___awdiv@counter,f
 11392  1450  2C45               	goto	i1l3259
 11393  1451                     i1l3261:	
 11394  1451  3001               	movlw	1
 11395  1452                     u528_25:	
 11396  1452  35A2               	lslf	i1___awdiv@quotient,f
 11397  1453  0DA3               	rlf	i1___awdiv@quotient+1,f
 11398  1454  0B89               	decfsz	9,f
 11399  1455  2C52               	goto	u528_25
 11400  1456  0878               	movf	i1___awdiv@divisor+1,w
 11401  1457  027A               	subwf	i1___awdiv@dividend+1,w
 11402  1458  1D03               	skipz
 11403  1459  2C5C               	goto	u529_25
 11404  145A  0877               	movf	i1___awdiv@divisor,w
 11405  145B  0279               	subwf	i1___awdiv@dividend,w
 11406  145C                     u529_25:	
 11407  145C  1C03               	skipc
 11408  145D  2C63               	goto	i1l3267
 11409  145E  0877               	movf	i1___awdiv@divisor,w
 11410  145F  02F9               	subwf	i1___awdiv@dividend,f
 11411  1460  0878               	movf	i1___awdiv@divisor+1,w
 11412  1461  3BFA               	subwfb	i1___awdiv@dividend+1,f
 11413  1462  1422               	bsf	i1___awdiv@quotient,0
 11414  1463                     i1l3267:	
 11415  1463  3001               	movlw	1
 11416  1464                     u530_25:	
 11417  1464  36F8               	lsrf	i1___awdiv@divisor+1,f
 11418  1465  0CF7               	rrf	i1___awdiv@divisor,f
 11419  1466  0B89               	decfsz	9,f
 11420  1467  2C64               	goto	u530_25
 11421  1468  3001               	movlw	1
 11422  1469  02A0               	subwf	i1___awdiv@counter,f
 11423  146A  1D03               	btfss	3,2
 11424  146B  2C51               	goto	i1l3261
 11425  146C                     i1l3271:	
 11426  146C  0821               	movf	i1___awdiv@sign,w
 11427  146D  1903               	btfsc	3,2
 11428  146E  2C74               	goto	i1l3275
 11429  146F  09A2               	comf	i1___awdiv@quotient,f
 11430  1470  09A3               	comf	i1___awdiv@quotient+1,f
 11431  1471  0AA2               	incf	i1___awdiv@quotient,f
 11432  1472  1903               	skipnz
 11433  1473  0AA3               	incf	i1___awdiv@quotient+1,f
 11434  1474                     i1l3275:	
 11435  1474  0823               	movf	i1___awdiv@quotient+1,w
 11436  1475  00F8               	movwf	?i1___awdiv+1
 11437  1476  0822               	movf	i1___awdiv@quotient,w
 11438  1477  00F7               	movwf	?i1___awdiv
 11439  1478  0008               	return
 11440  1479                     __end_ofi1___awdiv:	
 11441                           
 11442                           	psect	text48
 11443  09C8                     __ptext48:	
 11444 ;; *************** function _strtol *****************
 11445 ;; Defined at:
 11446 ;;		line 5 in file "/Applications/microchip/xc8/v1.35/sources/common/strtol.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  s               1    wreg     PTR const unsigned char 
 11449 ;;		 -> processline@bear(3), processline@dist(5), 
 11450 ;;  endptr          1    0[BANK0 ] PTR PTR unsigned char 
 11451 ;;		 -> processline@ptr(1), 
 11452 ;;  base            2    1[BANK0 ] int 
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;  s               1   13[BANK0 ] PTR const unsigned char 
 11455 ;;		 -> processline@bear(3), processline@dist(5), 
 11456 ;;  a               4    9[BANK0 ] long 
 11457 ;;  c               1   14[BANK0 ] unsigned char 
 11458 ;;  sign            1    8[BANK0 ] unsigned char 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  4    0[BANK0 ] long 
 11461 ;; Registers used:
 11462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;Total ram usage:       15 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    2
 11475 ;; This function calls:
 11476 ;;		___lmul
 11477 ;;		_isalpha
 11478 ;;		_isdigit
 11479 ;;		_isspace
 11480 ;;		_toupper
 11481 ;; This function is called by:
 11482 ;;		_processline
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           
 11487                           ;psect for function _strtol
 11488  09C8                     _strtol:	
 11489                           
 11490                           ;incstack = 0
 11491                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11492                           ;strtol@s stored from wreg
 11493  09C8  0020               	movlb	0	; select bank0
 11494  09C9  00AD               	movwf	strtol@s
 11495  09CA                     i1l1008:	
 11496  09CA  0020               	movlb	0	; select bank0
 11497  09CB  082D               	movf	strtol@s,w
 11498  09CC  0086               	movwf	6
 11499  09CD  0187               	clrf	7
 11500  09CE  0801               	movf	1,w
 11501  09CF  00A4               	movwf	??_strtol
 11502  09D0  0824               	movf	??_strtol,w
 11503  09D1  00AE               	movwf	strtol@c
 11504  09D2  3001               	movlw	1
 11505  09D3  00A4               	movwf	??_strtol
 11506  09D4  0824               	movf	??_strtol,w
 11507  09D5  07AD               	addwf	strtol@s,f
 11508  09D6  082E               	movf	strtol@c,w
 11509  09D7  3190  2042  3189   	fcall	_isspace
 11510  09DA  1C03               	btfss	3,0
 11511  09DB  29DE               	goto	i1l3399
 11512  09DC  0020               	movlb	0	; select bank0
 11513  09DD  29CA               	goto	i1l1008
 11514  09DE                     i1l3399:	
 11515  09DE  3000               	movlw	0
 11516  09DF  0020               	movlb	0	; select bank0
 11517  09E0  00AC               	movwf	strtol@a+3
 11518  09E1  3000               	movlw	0
 11519  09E2  00AB               	movwf	strtol@a+2
 11520  09E3  3000               	movlw	0
 11521  09E4  00AA               	movwf	strtol@a+1
 11522  09E5  3000               	movlw	0
 11523  09E6  00A9               	movwf	strtol@a
 11524  09E7  01A8               	clrf	strtol@sign
 11525  09E8  302D               	movlw	45
 11526  09E9  062E               	xorwf	strtol@c,w
 11527  09EA  1D03               	btfss	3,2
 11528  09EB  29EF               	goto	i1l3411
 11529  09EC  01A8               	clrf	strtol@sign
 11530  09ED  0AA8               	incf	strtol@sign,f
 11531  09EE  29F3               	goto	i1l3413
 11532  09EF                     i1l3411:	
 11533  09EF  302B               	movlw	43
 11534  09F0  062E               	xorwf	strtol@c,w
 11535  09F1  1D03               	btfss	3,2
 11536  09F2  29FE               	goto	i1l3417
 11537  09F3                     i1l3413:	
 11538  09F3  082D               	movf	strtol@s,w
 11539  09F4  0086               	movwf	6
 11540  09F5  0187               	clrf	7
 11541  09F6  0801               	movf	1,w
 11542  09F7  00A4               	movwf	??_strtol
 11543  09F8  0824               	movf	??_strtol,w
 11544  09F9  00AE               	movwf	strtol@c
 11545  09FA  3001               	movlw	1
 11546  09FB  00A4               	movwf	??_strtol
 11547  09FC  0824               	movf	??_strtol,w
 11548  09FD  07AD               	addwf	strtol@s,f
 11549  09FE                     i1l3417:	
 11550  09FE  3030               	movlw	48
 11551  09FF  062E               	xorwf	strtol@c,w
 11552  0A00  1D03               	btfss	3,2
 11553  0A01  2A36               	goto	i1l3441
 11554  0A02  082D               	movf	strtol@s,w
 11555  0A03  0086               	movwf	6
 11556  0A04  0187               	clrf	7
 11557  0A05  0801               	movf	1,w
 11558  0A06  00A4               	movwf	??_strtol
 11559  0A07  0824               	movf	??_strtol,w
 11560  0A08  00AE               	movwf	strtol@c
 11561  0A09  3001               	movlw	1
 11562  0A0A  00A4               	movwf	??_strtol
 11563  0A0B  0824               	movf	??_strtol,w
 11564  0A0C  07AD               	addwf	strtol@s,f
 11565  0A0D  0821               	movf	strtol@base,w
 11566  0A0E  0422               	iorwf	strtol@base+1,w
 11567  0A0F  1903               	btfsc	3,2
 11568  0A10  2A16               	goto	i1l3427
 11569  0A11  3010               	movlw	16
 11570  0A12  0621               	xorwf	strtol@base,w
 11571  0A13  0422               	iorwf	strtol@base+1,w
 11572  0A14  1D03               	btfss	3,2
 11573  0A15  2A2E               	goto	i1l3437
 11574  0A16                     i1l3427:	
 11575  0A16  3078               	movlw	120
 11576  0A17  062E               	xorwf	strtol@c,w
 11577  0A18  1903               	btfsc	3,2
 11578  0A19  2A1E               	goto	i1l3431
 11579  0A1A  3058               	movlw	88
 11580  0A1B  062E               	xorwf	strtol@c,w
 11581  0A1C  1D03               	btfss	3,2
 11582  0A1D  2A2E               	goto	i1l3437
 11583  0A1E                     i1l3431:	
 11584  0A1E  3010               	movlw	16
 11585  0A1F  00A1               	movwf	strtol@base
 11586  0A20  3000               	movlw	0
 11587  0A21  00A2               	movwf	strtol@base+1
 11588  0A22  082D               	movf	strtol@s,w
 11589  0A23  0086               	movwf	6
 11590  0A24  0187               	clrf	7
 11591  0A25  0801               	movf	1,w
 11592  0A26  00A4               	movwf	??_strtol
 11593  0A27  0824               	movf	??_strtol,w
 11594  0A28  00AE               	movwf	strtol@c
 11595  0A29  3001               	movlw	1
 11596  0A2A  00A4               	movwf	??_strtol
 11597  0A2B  0824               	movf	??_strtol,w
 11598  0A2C  07AD               	addwf	strtol@s,f
 11599  0A2D  2A36               	goto	i1l3441
 11600  0A2E                     i1l3437:	
 11601  0A2E  0821               	movf	strtol@base,w
 11602  0A2F  0422               	iorwf	strtol@base+1,w
 11603  0A30  1D03               	btfss	3,2
 11604  0A31  2A36               	goto	i1l3441
 11605  0A32  3008               	movlw	8
 11606  0A33  00A1               	movwf	strtol@base
 11607  0A34  3000               	movlw	0
 11608  0A35  00A2               	movwf	strtol@base+1
 11609  0A36                     i1l3441:	
 11610  0A36  0821               	movf	strtol@base,w
 11611  0A37  0422               	iorwf	strtol@base+1,w
 11612  0A38  1D03               	btfss	3,2
 11613  0A39  2A3E               	goto	i1l3445
 11614  0A3A  300A               	movlw	10
 11615  0A3B  00A1               	movwf	strtol@base
 11616  0A3C  3000               	movlw	0
 11617  0A3D  00A2               	movwf	strtol@base+1
 11618  0A3E                     i1l3445:	
 11619  0A3E  082E               	movf	strtol@c,w
 11620  0A3F  3190  2030  3189   	fcall	_isalpha
 11621  0A42  1C03               	btfss	3,0
 11622  0A43  2A4F               	goto	i1l3449
 11623  0A44  0020               	movlb	0	; select bank0
 11624  0A45  082E               	movf	strtol@c,w
 11625  0A46  3190  2000  3189   	fcall	_toupper
 11626  0A49  3EC9               	addlw	201
 11627  0A4A  0020               	movlb	0	; select bank0
 11628  0A4B  00A4               	movwf	??_strtol
 11629  0A4C  0824               	movf	??_strtol,w
 11630  0A4D  00AE               	movwf	strtol@c
 11631  0A4E  2A59               	goto	i1l3453
 11632  0A4F                     i1l3449:	
 11633  0A4F  0020               	movlb	0	; select bank0
 11634  0A50  082E               	movf	strtol@c,w
 11635  0A51  319F  27F2  3189   	fcall	_isdigit
 11636  0A54  1C03               	btfss	3,0
 11637  0A55  2A99               	goto	i1l3463
 11638  0A56  3030               	movlw	48
 11639  0A57  0020               	movlb	0	; select bank0
 11640  0A58  02AE               	subwf	strtol@c,f
 11641  0A59                     i1l3453:	
 11642  0A59  0822               	movf	strtol@base+1,w
 11643  0A5A  3A80               	xorlw	128
 11644  0A5B  3C80               	sublw	128
 11645  0A5C  1D03               	skipz
 11646  0A5D  2A60               	goto	u562_25
 11647  0A5E  0821               	movf	strtol@base,w
 11648  0A5F  022E               	subwf	strtol@c,w
 11649  0A60                     u562_25:	
 11650  0A60  1803               	btfsc	3,0
 11651  0A61  2A99               	goto	i1l3463
 11652  0A62  0020               	movlb	0	; select bank0
 11653  0A63  082E               	movf	strtol@c,w
 11654  0A64  00A4               	movwf	??_strtol
 11655  0A65  01A5               	clrf	??_strtol+1
 11656  0A66  01A6               	clrf	??_strtol+2
 11657  0A67  01A7               	clrf	??_strtol+3
 11658  0A68  0821               	movf	strtol@base,w
 11659  0A69  00F0               	movwf	___lmul@multiplier
 11660  0A6A  0822               	movf	strtol@base+1,w
 11661  0A6B  00F1               	movwf	___lmul@multiplier+1
 11662  0A6C  0D89               	rlf	9,f
 11663  0A6D  3B89               	subwfb	9,f
 11664  0A6E  0989               	comf	9,f
 11665  0A6F  00F2               	movwf	___lmul@multiplier+2
 11666  0A70  00F3               	movwf	___lmul@multiplier+3
 11667  0A71  082C               	movf	strtol@a+3,w
 11668  0A72  00F7               	movwf	___lmul@multiplicand+3
 11669  0A73  082B               	movf	strtol@a+2,w
 11670  0A74  00F6               	movwf	___lmul@multiplicand+2
 11671  0A75  082A               	movf	strtol@a+1,w
 11672  0A76  00F5               	movwf	___lmul@multiplicand+1
 11673  0A77  0829               	movf	strtol@a,w
 11674  0A78  00F4               	movwf	___lmul@multiplicand
 11675  0A79  3192  2233  3189   	fcall	___lmul
 11676  0A7C  0870               	movf	?___lmul,w
 11677  0A7D  0020               	movlb	0	; select bank0
 11678  0A7E  07A4               	addwf	??_strtol,f
 11679  0A7F  0871               	movf	?___lmul+1,w
 11680  0A80  3DA5               	addwfc	??_strtol+1,f
 11681  0A81  0872               	movf	?___lmul+2,w
 11682  0A82  3DA6               	addwfc	??_strtol+2,f
 11683  0A83  0873               	movf	?___lmul+3,w
 11684  0A84  3DA7               	addwfc	??_strtol+3,f
 11685  0A85  0827               	movf	??_strtol+3,w
 11686  0A86  00AC               	movwf	strtol@a+3
 11687  0A87  0826               	movf	??_strtol+2,w
 11688  0A88  00AB               	movwf	strtol@a+2
 11689  0A89  0825               	movf	??_strtol+1,w
 11690  0A8A  00AA               	movwf	strtol@a+1
 11691  0A8B  0824               	movf	??_strtol,w
 11692  0A8C  00A9               	movwf	strtol@a
 11693  0A8D  082D               	movf	strtol@s,w
 11694  0A8E  0086               	movwf	6
 11695  0A8F  0187               	clrf	7
 11696  0A90  0801               	movf	1,w
 11697  0A91  00A4               	movwf	??_strtol
 11698  0A92  0824               	movf	??_strtol,w
 11699  0A93  00AE               	movwf	strtol@c
 11700  0A94  3001               	movlw	1
 11701  0A95  00A4               	movwf	??_strtol
 11702  0A96  0824               	movf	??_strtol,w
 11703  0A97  07AD               	addwf	strtol@s,f
 11704  0A98  2A3E               	goto	i1l3445
 11705  0A99                     i1l3463:	
 11706  0A99  0020               	movlb	0	; select bank0
 11707  0A9A  0820               	movf	strtol@endptr,w
 11708  0A9B  1903               	btfsc	3,2
 11709  0A9C  2AA5               	goto	i1l3467
 11710  0A9D  082D               	movf	strtol@s,w
 11711  0A9E  3EFF               	addlw	-1
 11712  0A9F  00A4               	movwf	??_strtol
 11713  0AA0  0820               	movf	strtol@endptr,w
 11714  0AA1  0086               	movwf	6
 11715  0AA2  0187               	clrf	7
 11716  0AA3  0824               	movf	??_strtol,w
 11717  0AA4  0081               	movwf	1
 11718  0AA5                     i1l3467:	
 11719  0AA5  0828               	movf	strtol@sign,w
 11720  0AA6  1903               	btfsc	3,2
 11721  0AA7  2AB8               	goto	i1l3473
 11722  0AA8  0929               	comf	strtol@a,w
 11723  0AA9  00A0               	movwf	?_strtol
 11724  0AAA  092A               	comf	strtol@a+1,w
 11725  0AAB  00A1               	movwf	?_strtol+1
 11726  0AAC  092B               	comf	strtol@a+2,w
 11727  0AAD  00A2               	movwf	?_strtol+2
 11728  0AAE  092C               	comf	strtol@a+3,w
 11729  0AAF  00A3               	movwf	?_strtol+3
 11730  0AB0  0AA0               	incf	?_strtol,f
 11731  0AB1  1903               	skipnz
 11732  0AB2  0AA1               	incf	?_strtol+1,f
 11733  0AB3  1903               	skipnz
 11734  0AB4  0AA2               	incf	?_strtol+2,f
 11735  0AB5  1903               	skipnz
 11736  0AB6  0AA3               	incf	?_strtol+3,f
 11737  0AB7  0008               	return
 11738  0AB8                     i1l3473:	
 11739  0AB8  082C               	movf	strtol@a+3,w
 11740  0AB9  00A3               	movwf	?_strtol+3
 11741  0ABA  082B               	movf	strtol@a+2,w
 11742  0ABB  00A2               	movwf	?_strtol+2
 11743  0ABC  082A               	movf	strtol@a+1,w
 11744  0ABD  00A1               	movwf	?_strtol+1
 11745  0ABE  0829               	movf	strtol@a,w
 11746  0ABF  00A0               	movwf	?_strtol
 11747  0AC0  0008               	return
 11748  0AC1                     __end_of_strtol:	
 11749                           
 11750                           	psect	text49
 11751  1000                     __ptext49:	
 11752 ;; *************** function _toupper *****************
 11753 ;; Defined at:
 11754 ;;		line 5 in file "/Applications/microchip/xc8/v1.35/sources/common/toupper.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;  c               1    wreg     unsigned char 
 11757 ;; Auto vars:     Size  Location     Type
 11758 ;;  c               1    1[COMMON] unsigned char 
 11759 ;; Return value:  Size  Location     Type
 11760 ;;                  1    wreg      unsigned char 
 11761 ;; Registers used:
 11762 ;;		wreg, status,2, status,0
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;Total ram usage:        2 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; This function calls:
 11775 ;;		Nothing
 11776 ;; This function is called by:
 11777 ;;		_strtol
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           
 11782                           ;psect for function _toupper
 11783  1000                     _toupper:	
 11784                           
 11785                           ;incstack = 0
 11786                           ; Regs used in _toupper: [wreg+status,2+status,0]
 11787                           ;toupper@c stored from wreg
 11788  1000  00F1               	movwf	toupper@c
 11789  1001  307B               	movlw	123
 11790  1002  0271               	subwf	toupper@c,w
 11791  1003  1803               	skipnc
 11792  1004  280D               	goto	i1l3195
 11793  1005  3061               	movlw	97
 11794  1006  0271               	subwf	toupper@c,w
 11795  1007  1C03               	skipc
 11796  1008  280D               	goto	i1l3195
 11797  1009  30DF               	movlw	223
 11798  100A  00F0               	movwf	??_toupper
 11799  100B  0870               	movf	??_toupper,w
 11800  100C  05F1               	andwf	toupper@c,f
 11801  100D                     i1l3195:	
 11802  100D  0871               	movf	toupper@c,w
 11803  100E  0008               	return
 11804  100F                     __end_of_toupper:	
 11805                           
 11806                           	psect	text50
 11807  1042                     __ptext50:	
 11808 ;; *************** function _isspace *****************
 11809 ;; Defined at:
 11810 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/isspace.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  c               1    wreg     unsigned char 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;  c               1    1[COMMON] unsigned char 
 11815 ;; Return value:  Size  Location     Type
 11816 ;;		None               void
 11817 ;; Registers used:
 11818 ;;		wreg, status,2, status,0
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;Total ram usage:        2 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_strtol
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           
 11838                           ;psect for function _isspace
 11839  1042                     _isspace:	
 11840                           
 11841                           ;incstack = 0
 11842                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11843                           ;isspace@c stored from wreg
 11844  1042  00F1               	movwf	isspace@c
 11845  1043  01F0               	clrf	_isspace$942
 11846  1044  0AF0               	incf	_isspace$942,f
 11847  1045  3020               	movlw	32
 11848  1046  0671               	xorwf	isspace@c,w
 11849  1047  1903               	btfsc	3,2
 11850  1048  2852               	goto	i1l3171
 11851  1049  300E               	movlw	14
 11852  104A  0271               	subwf	isspace@c,w
 11853  104B  1803               	skipnc
 11854  104C  2851               	goto	i1l3169
 11855  104D  3009               	movlw	9
 11856  104E  0271               	subwf	isspace@c,w
 11857  104F  1803               	skipnc
 11858  1050  2852               	goto	i1l3171
 11859  1051                     i1l3169:	
 11860  1051  01F0               	clrf	_isspace$942
 11861  1052                     i1l3171:	
 11862  1052  0C70               	rrf	_isspace$942,w
 11863  1053  0008               	return
 11864  1054                     __end_of_isspace:	
 11865                           
 11866                           	psect	text51
 11867  1FF2                     __ptext51:	
 11868 ;; *************** function _isdigit *****************
 11869 ;; Defined at:
 11870 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/isdigit.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  c               1    wreg     unsigned char 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  c               1    1[COMMON] unsigned char 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;		None               void
 11877 ;; Registers used:
 11878 ;;		wreg, status,2, status,0
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;Total ram usage:        2 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; This function calls:
 11891 ;;		Nothing
 11892 ;; This function is called by:
 11893 ;;		_strtol
 11894 ;; This function uses a non-reentrant model
 11895 ;;
 11896                           
 11897                           
 11898                           ;psect for function _isdigit
 11899  1FF2                     _isdigit:	
 11900                           
 11901                           ;incstack = 0
 11902                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11903                           ;isdigit@c stored from wreg
 11904  1FF2  00F1               	movwf	isdigit@c
 11905  1FF3  01F0               	clrf	_isdigit$939
 11906  1FF4  303A               	movlw	58
 11907  1FF5  0271               	subwf	isdigit@c,w
 11908  1FF6  1803               	skipnc
 11909  1FF7  2FFE               	goto	i1l3207
 11910  1FF8  3030               	movlw	48
 11911  1FF9  0271               	subwf	isdigit@c,w
 11912  1FFA  1C03               	skipc
 11913  1FFB  2FFE               	goto	i1l3207
 11914  1FFC  01F0               	clrf	_isdigit$939
 11915  1FFD  0AF0               	incf	_isdigit$939,f
 11916  1FFE                     i1l3207:	
 11917  1FFE  0C70               	rrf	_isdigit$939,w
 11918  1FFF  0008               	return
 11919  2000                     __end_of_isdigit:	
 11920                           
 11921                           	psect	text52
 11922  1030                     __ptext52:	
 11923 ;; *************** function _isalpha *****************
 11924 ;; Defined at:
 11925 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/isalpha.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  c               1    wreg     unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  c               1    3[COMMON] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;		None               void
 11932 ;; Registers used:
 11933 ;;		wreg, status,2, status,0, pclath, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;Total ram usage:        2 bytes
 11944 ;; Hardware stack levels used:    1
 11945 ;; Hardware stack levels required when called:    1
 11946 ;; This function calls:
 11947 ;;		_isupper
 11948 ;; This function is called by:
 11949 ;;		_strtol
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953                           
 11954                           ;psect for function _isalpha
 11955  1030                     _isalpha:	
 11956                           
 11957                           ;incstack = 0
 11958                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
 11959                           ;isalpha@c stored from wreg
 11960  1030  00F3               	movwf	isalpha@c
 11961  1031  01F2               	clrf	_isalpha$936
 11962  1032  0AF2               	incf	_isalpha$936,f
 11963  1033  307B               	movlw	123
 11964  1034  0273               	subwf	isalpha@c,w
 11965  1035  1803               	skipnc
 11966  1036  283B               	goto	i1l3181
 11967  1037  3061               	movlw	97
 11968  1038  0273               	subwf	isalpha@c,w
 11969  1039  1803               	skipnc
 11970  103A  2840               	goto	i1l3185
 11971  103B                     i1l3181:	
 11972  103B  0873               	movf	isalpha@c,w
 11973  103C  319F  27E4         	fcall	_isupper
 11974  103E  1C03               	btfss	3,0
 11975  103F  01F2               	clrf	_isalpha$936
 11976  1040                     i1l3185:	
 11977  1040  0C72               	rrf	_isalpha$936,w
 11978  1041  0008               	return
 11979  1042                     __end_of_isalpha:	
 11980                           
 11981                           	psect	text53
 11982  1FE4                     __ptext53:	
 11983 ;; *************** function _isupper *****************
 11984 ;; Defined at:
 11985 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/isupper.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;  c               1    wreg     unsigned char 
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  c               1    1[COMMON] unsigned char 
 11990 ;; Return value:  Size  Location     Type
 11991 ;;		None               void
 11992 ;; Registers used:
 11993 ;;		wreg, status,2, status,0
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;Total ram usage:        2 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; This function calls:
 12006 ;;		Nothing
 12007 ;; This function is called by:
 12008 ;;		_isalpha
 12009 ;; This function uses a non-reentrant model
 12010 ;;
 12011                           
 12012                           
 12013                           ;psect for function _isupper
 12014  1FE4                     _isupper:	
 12015                           
 12016                           ;incstack = 0
 12017                           ; Regs used in _isupper: [wreg+status,2+status,0]
 12018                           ;isupper@c stored from wreg
 12019  1FE4  00F1               	movwf	isupper@c
 12020  1FE5  01F0               	clrf	_isupper$945
 12021  1FE6  305B               	movlw	91
 12022  1FE7  0271               	subwf	isupper@c,w
 12023  1FE8  1803               	skipnc
 12024  1FE9  2FF0               	goto	i1l3075
 12025  1FEA  3041               	movlw	65
 12026  1FEB  0271               	subwf	isupper@c,w
 12027  1FEC  1C03               	skipc
 12028  1FED  2FF0               	goto	i1l3075
 12029  1FEE  01F0               	clrf	_isupper$945
 12030  1FEF  0AF0               	incf	_isupper$945,f
 12031  1FF0                     i1l3075:	
 12032  1FF0  0C70               	rrf	_isupper$945,w
 12033  1FF1  0008               	return
 12034  1FF2                     __end_of_isupper:	
 12035                           
 12036                           	psect	text54
 12037  1233                     __ptext54:	
 12038 ;; *************** function ___lmul *****************
 12039 ;; Defined at:
 12040 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul32.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  multiplier      4    0[COMMON] unsigned long 
 12043 ;;  multiplicand    4    4[COMMON] unsigned long 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  product         4    8[COMMON] unsigned long 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  4    0[COMMON] unsigned long 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12055 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;Total ram usage:       12 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; This function calls:
 12062 ;;		Nothing
 12063 ;; This function is called by:
 12064 ;;		_strtol
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           
 12069                           ;psect for function ___lmul
 12070  1233                     ___lmul:	
 12071                           
 12072                           ;incstack = 0
 12073                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12074  1233  3000               	movlw	0
 12075  1234  00FB               	movwf	___lmul@product+3
 12076  1235  3000               	movlw	0
 12077  1236  00FA               	movwf	___lmul@product+2
 12078  1237  3000               	movlw	0
 12079  1238  00F9               	movwf	___lmul@product+1
 12080  1239  3000               	movlw	0
 12081  123A  00F8               	movwf	___lmul@product
 12082  123B                     i1l3101:	
 12083  123B  1C70               	btfss	___lmul@multiplier,0
 12084  123C  2A45               	goto	i1l3105
 12085  123D  0874               	movf	___lmul@multiplicand,w
 12086  123E  07F8               	addwf	___lmul@product,f
 12087  123F  0875               	movf	___lmul@multiplicand+1,w
 12088  1240  3DF9               	addwfc	___lmul@product+1,f
 12089  1241  0876               	movf	___lmul@multiplicand+2,w
 12090  1242  3DFA               	addwfc	___lmul@product+2,f
 12091  1243  0877               	movf	___lmul@multiplicand+3,w
 12092  1244  3DFB               	addwfc	___lmul@product+3,f
 12093  1245                     i1l3105:	
 12094  1245  3001               	movlw	1
 12095  1246                     u499_25:	
 12096  1246  35F4               	lslf	___lmul@multiplicand,f
 12097  1247  0DF5               	rlf	___lmul@multiplicand+1,f
 12098  1248  0DF6               	rlf	___lmul@multiplicand+2,f
 12099  1249  0DF7               	rlf	___lmul@multiplicand+3,f
 12100  124A  0B89               	decfsz	9,f
 12101  124B  2A46               	goto	u499_25
 12102  124C  3001               	movlw	1
 12103  124D                     u500_25:	
 12104  124D  36F3               	lsrf	___lmul@multiplier+3,f
 12105  124E  0CF2               	rrf	___lmul@multiplier+2,f
 12106  124F  0CF1               	rrf	___lmul@multiplier+1,f
 12107  1250  0CF0               	rrf	___lmul@multiplier,f
 12108  1251  0B89               	decfsz	9,f
 12109  1252  2A4D               	goto	u500_25
 12110  1253  0873               	movf	___lmul@multiplier+3,w
 12111  1254  0472               	iorwf	___lmul@multiplier+2,w
 12112  1255  0471               	iorwf	___lmul@multiplier+1,w
 12113  1256  0470               	iorwf	___lmul@multiplier,w
 12114  1257  1D03               	skipz
 12115  1258  2A3B               	goto	i1l3101
 12116  1259  087B               	movf	___lmul@product+3,w
 12117  125A  00F3               	movwf	?___lmul+3
 12118  125B  087A               	movf	___lmul@product+2,w
 12119  125C  00F2               	movwf	?___lmul+2
 12120  125D  0879               	movf	___lmul@product+1,w
 12121  125E  00F1               	movwf	?___lmul+1
 12122  125F  0878               	movf	___lmul@product,w
 12123  1260  00F0               	movwf	?___lmul
 12124  1261  0008               	return
 12125  1262                     __end_of___lmul:	
 12126                           
 12127                           	psect	text55
 12128  107C                     __ptext55:	
 12129 ;; *************** function _strcpy *****************
 12130 ;; Defined at:
 12131 ;;		line 8 in file "/Applications/microchip/xc8/v1.35/sources/common/strcpy.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;  to              1    wreg     PTR unsigned char 
 12134 ;;		 -> processline@src2(8), processline@src1(8), 
 12135 ;;  from            1    0[COMMON] PTR const unsigned char 
 12136 ;;		 -> EUSART_Receive_ISR@str(8), 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  to              1    3[COMMON] PTR unsigned char 
 12139 ;;		 -> processline@src2(8), processline@src1(8), 
 12140 ;;  cp              1    2[COMMON] PTR unsigned char 
 12141 ;;		 -> processline@src2(8), processline@src1(8), 
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      PTR unsigned char 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;Total ram usage:        4 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_processline
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           
 12165                           ;psect for function _strcpy
 12166  107C                     _strcpy:	
 12167                           
 12168                           ;incstack = 0
 12169                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
 12170                           ;strcpy@to stored from wreg
 12171  107C  00F3               	movwf	strcpy@to
 12172  107D  0873               	movf	strcpy@to,w
 12173  107E  00F1               	movwf	??_strcpy
 12174  107F  0871               	movf	??_strcpy,w
 12175  1080  00F2               	movwf	strcpy@cp
 12176  1081                     i1l3391:	
 12177  1081  0872               	movf	strcpy@cp,w
 12178  1082  0086               	movwf	6
 12179  1083  0187               	clrf	7
 12180  1084  0870               	movf	strcpy@from,w
 12181  1085  0084               	movwf	4
 12182  1086  0185               	clrf	5
 12183  1087  0800               	movf	0,w
 12184  1088  3FC0               	movwi [0]fsr1
 12185  1089  0889               	movf	9,f
 12186  108A  1903               	btfsc	3,2
 12187  108B  0008               	return
 12188  108C  3001               	movlw	1
 12189  108D  00F1               	movwf	??_strcpy
 12190  108E  0871               	movf	??_strcpy,w
 12191  108F  07F2               	addwf	strcpy@cp,f
 12192  1090  3001               	movlw	1
 12193  1091  00F1               	movwf	??_strcpy
 12194  1092  0871               	movf	??_strcpy,w
 12195  1093  07F0               	addwf	strcpy@from,f
 12196  1094  2881               	goto	i1l3391
 12197  1095                     __end_of_strcpy:	
 12198                           ;	Return value of _strcpy is never used
 12199                           
 12200                           
 12201                           	psect	text56
 12202  1391                     __ptext56:	
 12203 ;; *************** function _goToPos *****************
 12204 ;; Defined at:
 12205 ;;		line 43 in file "Switec_motor.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;  pos             2    2[COMMON] unsigned int 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  target          2    4[COMMON] int 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;		None               void
 12212 ;; Registers used:
 12213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        4 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    1
 12226 ;; This function calls:
 12227 ;;		_stepClock
 12228 ;;		i1_stepCounterClock
 12229 ;; This function is called by:
 12230 ;;		_processline
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           
 12235                           ;psect for function _goToPos
 12236  1391                     _goToPos:	
 12237                           
 12238                           ;Switec_motor.c: 45: int target=pos;
 12239                           
 12240                           ;incstack = 0
 12241                           ; Regs used in _goToPos: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12242  1391  0873               	movf	goToPos@pos+1,w
 12243  1392  00F5               	movwf	goToPos@target+1
 12244  1393  0872               	movf	goToPos@pos,w
 12245  1394  00F4               	movwf	goToPos@target
 12246                           
 12247                           ;Switec_motor.c: 46: if (pos>position)
 12248  1395  0873               	movf	goToPos@pos+1,w
 12249  1396  0020               	movlb	0	; select bank0
 12250  1397  0264               	subwf	_position+1,w
 12251  1398  1D03               	skipz
 12252  1399  2B9C               	goto	u545_25
 12253  139A  0872               	movf	goToPos@pos,w
 12254  139B  0263               	subwf	_position,w
 12255  139C                     u545_25:	
 12256  139C  1C03               	btfss	3,0
 12257  139D  2BAC               	goto	i1l3371
 12258  139E  2BB6               	goto	i1l3373
 12259  139F                     i1l3367:	
 12260                           ;Switec_motor.c: 47: {
 12261                           ;Switec_motor.c: 48: while(pos>position)
 12262                           
 12263                           
 12264                           ;Switec_motor.c: 49: {
 12265                           ;Switec_motor.c: 50: stepClock();
 12266  139F  3191  212D  3193   	fcall	_stepClock
 12267                           
 12268                           ;Switec_motor.c: 51: stepClock();
 12269  13A2  3191  212D  3193   	fcall	_stepClock
 12270                           
 12271                           ;Switec_motor.c: 52: stepClock();
 12272  13A5  3191  212D  3193   	fcall	_stepClock
 12273                           
 12274                           ;Switec_motor.c: 53: pos--;
 12275  13A8  3001               	movlw	1
 12276  13A9  02F2               	subwf	goToPos@pos,f
 12277  13AA  3000               	movlw	0
 12278  13AB  3BF3               	subwfb	goToPos@pos+1,f
 12279  13AC                     i1l3371:	
 12280  13AC  0873               	movf	goToPos@pos+1,w
 12281  13AD  0020               	movlb	0	; select bank0
 12282  13AE  0264               	subwf	_position+1,w
 12283  13AF  1D03               	skipz
 12284  13B0  2BB3               	goto	u546_25
 12285  13B1  0872               	movf	goToPos@pos,w
 12286  13B2  0263               	subwf	_position,w
 12287  13B3                     u546_25:	
 12288  13B3  1803               	btfsc	3,0
 12289  13B4  2BD5               	goto	i1l3383
 12290  13B5  2B9F               	goto	i1l3367
 12291  13B6                     i1l3373:	
 12292                           ;Switec_motor.c: 54: }
 12293                           ;Switec_motor.c: 55: }
 12294                           
 12295                           
 12296                           ;Switec_motor.c: 56: else if (pos<position)
 12297  13B6  0864               	movf	_position+1,w
 12298  13B7  0273               	subwf	goToPos@pos+1,w
 12299  13B8  1D03               	skipz
 12300  13B9  2BBC               	goto	u547_25
 12301  13BA  0863               	movf	_position,w
 12302  13BB  0272               	subwf	goToPos@pos,w
 12303  13BC                     u547_25:	
 12304  13BC  1C03               	btfss	3,0
 12305  13BD  2BCC               	goto	i1l3381
 12306  13BE  2BD5               	goto	i1l3383
 12307  13BF                     i1l3377:	
 12308                           ;Switec_motor.c: 57: {
 12309                           ;Switec_motor.c: 58: while(pos<position)
 12310                           
 12311                           
 12312                           ;Switec_motor.c: 59: {
 12313                           ;Switec_motor.c: 60: stepCounterClock();
 12314  13BF  3191  2150  3193   	fcall	i1_stepCounterClock
 12315                           
 12316                           ;Switec_motor.c: 61: stepCounterClock();
 12317  13C2  3191  2150  3193   	fcall	i1_stepCounterClock
 12318                           
 12319                           ;Switec_motor.c: 62: stepCounterClock();
 12320  13C5  3191  2150  3193   	fcall	i1_stepCounterClock
 12321                           
 12322                           ;Switec_motor.c: 63: pos++;
 12323  13C8  3001               	movlw	1
 12324  13C9  07F2               	addwf	goToPos@pos,f
 12325  13CA  3000               	movlw	0
 12326  13CB  3DF3               	addwfc	goToPos@pos+1,f
 12327  13CC                     i1l3381:	
 12328  13CC  0020               	movlb	0	; select bank0
 12329  13CD  0864               	movf	_position+1,w
 12330  13CE  0273               	subwf	goToPos@pos+1,w
 12331  13CF  1D03               	skipz
 12332  13D0  2BD3               	goto	u548_25
 12333  13D1  0863               	movf	_position,w
 12334  13D2  0272               	subwf	goToPos@pos,w
 12335  13D3                     u548_25:	
 12336  13D3  1C03               	skipc
 12337  13D4  2BBF               	goto	i1l3377
 12338  13D5                     i1l3383:	
 12339                           
 12340                           ;Switec_motor.c: 64: }
 12341                           ;Switec_motor.c: 65: }
 12342                           ;Switec_motor.c: 67: position = target;
 12343  13D5  0875               	movf	goToPos@target+1,w
 12344  13D6  00E4               	movwf	_position+1
 12345  13D7  0874               	movf	goToPos@target,w
 12346  13D8  00E3               	movwf	_position
 12347  13D9  0008               	return
 12348  13DA                     __end_of_goToPos:	
 12349                           ;Switec_motor.c: 68: return;
 12350                           
 12351                           
 12352                           	psect	text57
 12353  1150                     __ptext57:	
 12354 ;; *************** function i1_stepCounterClock *****************
 12355 ;; Defined at:
 12356 ;;		line 21 in file "Switec_motor.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;		None               void
 12363 ;; Registers used:
 12364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;Total ram usage:        2 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; This function calls:
 12377 ;;		Nothing
 12378 ;; This function is called by:
 12379 ;;		_goToPos
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           
 12384                           ;psect for function i1_stepCounterClock
 12385  1150                     i1_stepCounterClock:	
 12386                           
 12387                           ;Switec_motor.c: 23: PORTD = PORTD & 0x0F;
 12388                           
 12389                           ;incstack = 0
 12390                           ; Regs used in i1_stepCounterClock: [wreg+fsr1l+fsr1h+status,2+status,0]
 12391  1150  0020               	movlb	0	; select bank0
 12392  1151  080F               	movf	15,w	;volatile
 12393  1152  390F               	andlw	15
 12394  1153  008F               	movwf	15	;volatile
 12395                           
 12396                           ;Switec_motor.c: 24: PORTD = PORTD | stateMap[state];
 12397  1154  0867               	movf	_state,w
 12398  1155  3E68               	addlw	(low (_stateMap| 0))& (0+255)
 12399  1156  0086               	movwf	6
 12400  1157  0187               	clrf	7
 12401  1158  0801               	movf	1,w
 12402  1159  040F               	iorwf	15,w	;volatile
 12403  115A  008F               	movwf	15	;volatile
 12404                           
 12405                           ;Switec_motor.c: 25: if (state==0)
 12406  115B  0867               	movf	_state,w	;volatile
 12407  115C  1D03               	btfss	3,2
 12408  115D  2963               	goto	i1l3229
 12409                           
 12410                           ;Switec_motor.c: 26: state = 5;
 12411  115E  3005               	movlw	5
 12412  115F  00F0               	movwf	??i1_stepCounterClock
 12413  1160  0870               	movf	??i1_stepCounterClock,w
 12414  1161  00E7               	movwf	_state	;volatile
 12415  1162  2965               	goto	i1l3231
 12416  1163                     i1l3229:	
 12417                           
 12418                           ;Switec_motor.c: 27: else
 12419                           ;Switec_motor.c: 28: state--;
 12420  1163  3001               	movlw	1
 12421  1164  02E7               	subwf	_state,f	;volatile
 12422  1165                     i1l3231:	
 12423                           
 12424                           ;Switec_motor.c: 30: _delay((unsigned long)((3)*(16000000/4000.0)));
 12425  1165  3010               	movlw	16
 12426  1166  00F1               	movwf	??i1_stepCounterClock+1
 12427  1167  3094               	movlw	148
 12428  1168  00F0               	movwf	??i1_stepCounterClock
 12429  1169                     u885_27:	
 12430  1169  0BF0               	decfsz	??i1_stepCounterClock,f
 12431  116A  2969               	goto	u885_27
 12432  116B  0BF1               	decfsz	??i1_stepCounterClock+1,f
 12433  116C  2969               	goto	u885_27
 12434  116D  0000               	nop
 12435                           
 12436                           ;Switec_motor.c: 31: PORTD = PORTD & 0x0F;
 12437  116E  0020               	movlb	0	; select bank0
 12438  116F  080F               	movf	15,w	;volatile
 12439  1170  390F               	andlw	15
 12440  1171  008F               	movwf	15	;volatile
 12441  1172  0008               	return
 12442  1173                     __end_ofi1_stepCounterClock:	
 12443                           
 12444                           	psect	text58
 12445  112D                     __ptext58:	
 12446 ;; *************** function _stepClock *****************
 12447 ;; Defined at:
 12448 ;;		line 6 in file "Switec_motor.c"
 12449 ;; Parameters:    Size  Location     Type
 12450 ;;		None
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;		None
 12453 ;; Return value:  Size  Location     Type
 12454 ;;		None               void
 12455 ;; Registers used:
 12456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;Total ram usage:        2 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; This function calls:
 12469 ;;		Nothing
 12470 ;; This function is called by:
 12471 ;;		_goToPos
 12472 ;; This function uses a non-reentrant model
 12473 ;;
 12474                           
 12475                           
 12476                           ;psect for function _stepClock
 12477  112D                     _stepClock:	
 12478                           
 12479                           ;Switec_motor.c: 8: PORTD = PORTD & 0x0F;
 12480                           
 12481                           ;incstack = 0
 12482                           ; Regs used in _stepClock: [wreg+fsr1l+fsr1h+status,2+status,0]
 12483  112D  0020               	movlb	0	; select bank0
 12484  112E  080F               	movf	15,w	;volatile
 12485  112F  390F               	andlw	15
 12486  1130  008F               	movwf	15	;volatile
 12487                           
 12488                           ;Switec_motor.c: 9: PORTD = PORTD | stateMap[state];
 12489  1131  0867               	movf	_state,w
 12490  1132  3E68               	addlw	(low (_stateMap| 0))& (0+255)
 12491  1133  0086               	movwf	6
 12492  1134  0187               	clrf	7
 12493  1135  0801               	movf	1,w
 12494  1136  040F               	iorwf	15,w	;volatile
 12495  1137  008F               	movwf	15	;volatile
 12496                           
 12497                           ;Switec_motor.c: 10: if (state==5)
 12498  1138  3005               	movlw	5
 12499  1139  0667               	xorwf	_state,w	;volatile
 12500  113A  1D03               	btfss	3,2
 12501  113B  293E               	goto	i1l3093
 12502                           
 12503                           ;Switec_motor.c: 11: state = 0;
 12504  113C  01E7               	clrf	_state	;volatile
 12505  113D  2942               	goto	i1l3095
 12506  113E                     i1l3093:	
 12507                           
 12508                           ;Switec_motor.c: 12: else
 12509                           ;Switec_motor.c: 13: state++;
 12510  113E  3001               	movlw	1
 12511  113F  00F0               	movwf	??_stepClock
 12512  1140  0870               	movf	??_stepClock,w
 12513  1141  07E7               	addwf	_state,f	;volatile
 12514  1142                     i1l3095:	
 12515                           
 12516                           ;Switec_motor.c: 15: _delay((unsigned long)((3)*(16000000/4000.0)));
 12517  1142  3010               	movlw	16
 12518  1143  00F1               	movwf	??_stepClock+1
 12519  1144  3094               	movlw	148
 12520  1145  00F0               	movwf	??_stepClock
 12521  1146                     u886_27:	
 12522  1146  0BF0               	decfsz	??_stepClock,f
 12523  1147  2946               	goto	u886_27
 12524  1148  0BF1               	decfsz	??_stepClock+1,f
 12525  1149  2946               	goto	u886_27
 12526  114A  0000               	nop
 12527                           
 12528                           ;Switec_motor.c: 17: PORTD = PORTD & 0x0F;
 12529  114B  0020               	movlb	0	; select bank0
 12530  114C  080F               	movf	15,w	;volatile
 12531  114D  390F               	andlw	15
 12532  114E  008F               	movwf	15	;volatile
 12533  114F  0008               	return
 12534  1150                     __end_of_stepClock:	
 12535  007E                     btemp	set	126	;btemp
 12536  007E                     int$flags	set	126
 12537  007E                     wtemp	set	126
 12538  007E                     wtemp0	set	126
 12539  0080                     wtemp1	set	128
 12540  0082                     wtemp2	set	130
 12541  0084                     wtemp3	set	132
 12542  0086                     wtemp4	set	134
 12543  0088                     wtemp5	set	136
 12544  007F                     wtemp6	set	127
 12545  007E                     ttemp	set	126
 12546  007E                     ttemp0	set	126
 12547  0081                     ttemp1	set	129
 12548  0084                     ttemp2	set	132
 12549  0087                     ttemp3	set	135
 12550  007F                     ttemp4	set	127
 12551  007E                     ltemp	set	126
 12552  007E                     ltemp0	set	126
 12553  0082                     ltemp1	set	130
 12554  0086                     ltemp2	set	134
 12555  0080                     ltemp3	set	128


Data Sizes:
    Strings     5
    Constant    33
    Data        89
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      78
    BANK1            80     79      79
    BANK2            80     55      79
    BANK3            80      0      77
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           48      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 1
		 -> processline@ptr(BANK0[1]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 5
		 -> processline@bear(BANK0[3]), processline@dist(BANK0[5]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 160
		 -> console(BIGRAM[160]), 

    strncpy@to	PTR unsigned char  size(1) Largest target is 8
		 -> EUSART_Receive_ISR@str(BANK0[8]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 8
		 -> EUSART_Receive_ISR@str(BANK0[8]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> EUSART_Receive_ISR@str(BANK0[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 8
		 -> processline@src2(BANK0[8]), processline@src1(BANK0[8]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 8
		 -> processline@src2(BANK0[8]), processline@src1(BANK0[8]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    processline@ptr	PTR unsigned char  size(1) Largest target is 5
		 -> processline@bear(BANK0[3]), processline@dist(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 8
		 -> processline@src2(BANK0[8]), processline@src1(BANK0[8]), 

    processline@ch	PTR unsigned char  size(1) Largest target is 8
		 -> EUSART_Receive_ISR@str(BANK0[8]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 8
		 -> EUSART_Receive_ISR@str(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_processline
    _processline->i1_display
    i1_display->i1___awdiv
    i1___awdiv->i1___awmod
    _strtol->___lmul
    _isalpha->_isupper
    _goToPos->_stepClock
    _goToPos->i1_stepCounterClock

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _EUSART_Receive_ISR->_processline
    _processline->_strtol
    _processline->i1_display
    i1_display->i1___awdiv

Critical Paths under _main in BANK1

    _main->_argXY
    _zeroNeedle->_stepCounterClock
    _printf->_putch
    _display->___awdiv
    ___awdiv->___awmod
    _argXY->_atan2
    _atan2->_atan
    _atan->_eval_poly
    _fabs->___ftneg
    ___ftneg->___ftdiv
    _eval_poly->___ftmul
    ___ftdiv->___ftpack
    ___ftsub->___ftadd
    _LIS3MDL_init->_LIS3MDL_Read_XY
    _LIS3MDL_Write->_i2c_Write
    _LIS3MDL_Wait->_i2c_Read
    _LIS3MDL_Read_XY->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _LIS3MDL_Read_Raw_XY->_i2c_Read

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _argXY->_atan2
    _atan2->_atan
    _LIS3MDL_init->_LIS3MDL_Read_XY

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   85732
                                             28 BANK2     27    27      0
                _LIS3MDL_Read_Raw_XY
                    _LIS3MDL_Read_XY
                       _LIS3MDL_Wait
                       _LIS3MDL_init
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                              _argXY
                            _display
                             _printf
                         _zeroNeedle
 ---------------------------------------------------------------------------------
 (1) _zeroNeedle                                           2     2      0      46
                                              2 BANK1      2     2      0
                   _stepCounterClock
 ---------------------------------------------------------------------------------
 (2) _stepCounterClock                                     2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     121
                                              1 BANK1      7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _display                                             12    10      2    5664
                                             16 BANK1     12    10      2
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1    1744
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1250
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1678
                                              7 BANK1      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _argXY                                                3     0      3   42281
                                             76 BANK1      3     0      3
                           ___awtoft
                              _atan2
 ---------------------------------------------------------------------------------
 (2) _atan2                                               24    18      6   39844
                                             70 BANK1      6     0      6
                                             13 BANK2     15    15      0
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___ftsub
                               _atan
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _atan                                                17    14      3   24709
                                             66 BANK1      4     1      3
                                              0 BANK2     13    13      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 3     0      3    1890
                                             27 BANK1      3     0      3
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     363
                                             24 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1302
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     3      7   10848
                                             56 BANK1     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3434
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2944
                                              8 BANK1     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4101
                                             40 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                           _i2c_Init
 ---------------------------------------------------------------------------------
 (2) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIS3MDL_init                                         1     1      0   10969
                                             75 BANK1      1     1      0
                    _LIS3MDL_Read_XY
                       _LIS3MDL_Wait
                      _LIS3MDL_Write
 ---------------------------------------------------------------------------------
 (2) _LIS3MDL_Write                                        2     1      1     596
                                              1 BANK1      2     1      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _LIS3MDL_Wait                                         2     2      0      91
                                              3 BANK1      2     2      0
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _LIS3MDL_Read_XY                                     13    13      0   10282
                                             70 BANK1      5     5      0
                                              0 BANK2      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     676
                                             56 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3096
                                             40 BANK1     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    3822
                                             27 BANK1     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2437
                                              8 BANK1      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1710
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _LIS3MDL_Read_Raw_XY                                  9     9      0     159
                                              3 BANK1      9     9      0
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write                                            1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Read                                             3     3      0      45
                                              0 BANK1      3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (4) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0    5384
                                             62 BANK0      1     1      0
                 _EUSART_Receive_ISR
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                  17    17      0    5384
                                             45 BANK0     17    17      0
                        _processline
                            _strncpy
 ---------------------------------------------------------------------------------
 (9) _strncpy                                              8     4      4     274
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _processline                                         31    31      0    4986
                                             13 COMMON     1     1      0
                                             15 BANK0     30    30      0
                            _goToPos
                             _strcpy
                             _strtol
                          i1_display
 ---------------------------------------------------------------------------------
 (10) i1_display                                          12    10      2    2446
                                             12 COMMON     1     1      0
                                              4 BANK0     11     9      2
                          i1___awdiv
                          i1___awmod
                           i1___bmul
 ---------------------------------------------------------------------------------
 (11) i1___bmul                                            4     3      1     600
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (11) i1___awmod                                           7     3      4     452
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (11) i1___awdiv                                           9     5      4     456
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) _strtol                                             15    11      4    1528
                                              0 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (11) _toupper                                             2     2      0      67
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _isspace                                             2     2      0      90
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _isdigit                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _isalpha                                             2     2      0     158
                                              2 COMMON     2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (12) _isupper                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) ___lmul                                             12     4      8     198
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) _strcpy                                              4     3      1     235
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (10) _goToPos                                             4     2      2     188
                                              2 COMMON     4     2      2
                          _stepClock
                 i1_stepCounterClock
 ---------------------------------------------------------------------------------
 (11) i1_stepCounterClock                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _stepClock                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIS3MDL_Read_Raw_XY
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _LIS3MDL_Read_XY
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _LIS3MDL_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _LIS3MDL_init
     _LIS3MDL_Read_XY
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _LIS3MDL_Wait
       _i2c_Read
         _i2c_Wait
       _i2c_Restart
         _i2c_Wait
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
     _LIS3MDL_Write
       _i2c_Start
         _i2c_Wait
       _i2c_Stop
         _i2c_Wait
       _i2c_Write
         _i2c_Wait
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _i2c_Init
   ___awdiv
     ___awmod (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
   ___ftdiv
     ___ftpack
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftpack
   _argXY
     ___awtoft
       ___ftpack
     _atan2
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
       ___ftge (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftpack
       ___ftsub (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
       _atan (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___wmul
         _fabs
           ___ftge
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftpack
       _fabs (ARG)
         ___ftge
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftpack
   _display
     ___awdiv
       ___awmod (ARG)
     ___awmod
     ___bmul
   _printf
     _putch
   _zeroNeedle
     _stepCounterClock

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
     _processline
       _goToPos
         _stepClock
         i1_stepCounterClock
       _strcpy
       _strtol
         ___lmul
         _isalpha
           _isupper
         _isdigit
         _isspace
         _toupper
       i1_display
         i1___awdiv
           i1___awmod (ARG)
         i1___awmod
         i1___bmul
     _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     37      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4D      11       96.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     147      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              30      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     147      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Sep 20 21:11:26 2015

                     ___bmul@product 00A2                          __CFG_CP$OFF 0000  
                                 l43 0DB5                                   l44 0DC7  
                                 l45 0DD9                         ___awdiv@sign 00AD  
                                 _vX 0165                                   _vY 0167  
                                 _vZ 0065                  ___wmul@multiplicand 00A2  
                      ?_LIS3MDL_Wait 0070                         ___ftadd@exp1 00C7  
                       ___ftadd@exp2 00C6                        ?_LIS3MDL_init 0070  
                        i2c_Read@ack 00A1                         ___ftadd@sign 00C5  
                                l286 1105                                  l287 1107  
                                l480 1FAC                                  l819 0971  
                                l599 109E                                  l795 15D1  
                                l796 15D9                                  l788 15BE  
                                l879 173D                                  _RA0 0060  
                                _RA1 0061                                  _RA2 0062  
                                _RC0 0070                                  _RA4 0064  
                                _RC1 0071                                  _RD0 0078  
                                _RC2 0072                                  _RD1 0079  
                                _RE0 0080                                  _RD2 007A  
                                _RE1 0081                                  _RF0 1460  
                                _RE2 0082                                  _RF1 1461  
                                _RE3 0083                                  _RG0 1468  
                                _RF2 1462                                  _RE4 0084  
                                _RG1 1469                                  _RF3 1463  
                                _RE5 0085                                  _RG2 146A  
                                _RF4 1464                                  _RE6 0086  
                                _RG3 146B                                  _RF5 1465  
                                _RF6 1466                                  _RF7 1467  
                                _PEN 10B2                         __CFG_CPD$OFF 0000  
                                _SEN 10B0                                  _Xsf 015A  
                                _Ysf 0160                         ___awmod@sign 00A6  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                        ??_i2c_Restart 00A0  
                     ?_LIS3MDL_Write 00A1                         __CFG_LVP$OFF 0000  
                       ___ftdiv@cntr 00B2                         ___ftdiv@sign 00B7  
                               l1048 0C58                                 l1049 0D2D  
                               l3021 084B                                 l3015 0835  
                               l3033 0886                                 l3131 1784  
                               l3045 08A2                                 l3037 088E  
                               l3125 176E                                 l4101 02C9  
                               l4111 0332                                 l4103 02DE  
                               l3081 1F90                                 l3049 08AA  
                               l3153 17DE                                 l3145 17C5  
                               l3217 1584                                 l4105 02F3  
                               l4201 0E1D                                 l4107 0308  
                               l4051 00E3                                 l4211 0EE3  
                               l4109 031D                                 l4061 0128  
                               l4045 00D7                                 l4029 006F  
                               l4205 0E9F                                 l4071 0190  
                               l4063 013D                                 l4055 00EB  
                               l4215 0F9C                                 l4081 01F9  
                               l4073 01A5                                 l4065 0152  
                               l4057 00FE                                 l4091 0261  
                               l4083 020E                                 l4075 01BA  
                               l4067 0167                                 l4059 0113  
                               l3509 1116                                 l3517 0808  
                               l4093 0276                                 l4085 0222  
                               l4077 01CF                                 l4069 017C  
                               l4181 0D9D                                 l3527 16E9  
                               l4095 028B                                 l4087 0237  
                               l4079 01E4                                 l3553 1734  
                               l3545 1719                                 l4097 02A0  
                               l4089 024C                                 l4193 0DEB  
                               l3555 1740                                 l3547 1727  
                               l2907 1098                                 l3483 0C15  
                               l4099 02B4                                 l2925 08FA  
                               l3661 11BC                                 l3805 07CD  
                               l3821 11F6                                 l2935 0910  
                               l3559 174E                                 l3751 0613  
                               l3903 148F                                 l2881 159B  
                               l2953 093D                                 l2929 0901  
                               l3497 0D4C                                 l3921 14B5  
                               l3913 1497                                 l2891 15C3  
                               l2883 15A5                                 l2971 0983  
                               l2955 0947                                 l2947 092A  
                               l3763 0634                                 l3915 14A3  
                               l3819 11F4                                 l2893 15CB  
                               l2885 15AA                                 l2877 1594  
                               l2965 0963                                 l2957 094C  
                               l3773 0652                                 l3925 14BE  
                               l3941 1356                                 l2975 0995  
                               l2967 096D                                 l2959 0950  
                               l3791 073D                                 l3759 062C  
                               l2985 09B0                                 l2993 12E1  
                               l3777 065A                                 l3929 14C6  
                               l3953 1363                                 l3945 135D  
                               l3881 105D                                 l3795 074A  
                               l3955 136F                                 l3963 1384  
                               l2997 12F7                                 l3789 071C  
                               l3877 1057                                 l3981 10D8  
                               l3967 138C                                 l3959 137B  
                               l3897 1484                                 l3993 10B6  
                               l3987 10E7                                 STR_1 1821  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _LATF 038C  
                               _LATG 038D                                 u4405 15A0  
                               u5055 1796                                 u4425 15B9  
                               u5065 17A6                                 u7010 013B  
                               u5075 17C6                                 u4515 109F  
                               u4445 15C6                                 u5085 17D5  
                               u4525 10A4                                 u7110 01A3  
                               u7030 0150                                 u5095 17DF  
                               u7210 020C                                 u7130 01B8  
                               u7050 0165                                 u4635 092B  
                               _RCEN 10B3                                 u4485 15E0  
                               u4725 0964                                 u7310 0274  
                               u7230 0220                                 u7150 01CD  
                               u7070 017A                                 u4665 093E  
                               u4905 08B1                                 u4825 0857  
                               u7410 02DC                                 u7330 0289  
                               u7250 0235                                 u7170 01E2  
                               u7090 018E                                 u4835 0867  
                               u5660 0C2F                                 u5805 1735  
                               u5670 0C30                                 u7430 02F1  
                               u7350 029E                                 u7270 024A  
                               u7190 01F7                                 u4695 0951  
                               u4855 088F                                 u4865 0895  
                               u5745 16F0                                 u7450 0306  
                               u7370 02B2                                 u7290 025F  
                               u6715 14A4                                 u6725 14AE  
                               u7605 0DD2                                 u7470 031B  
                               u7390 02C7                                 u4895 08AB  
                               u5775 171A                                 u6735 14B6  
                               u6815 1375                                 u7615 0DE4  
                               u6825 137C                                 u7625 0E1B  
                               u7490 0330                                 u6950 00FC  
                               u6695 149A                                 u7575 0D9B  
                               u7585 0DAE                                 u6970 0111  
                               u6795 1366                                 u7595 0DC0  
                               u6990 0126                                 u8827 0D7F  
                               u8837 0FF9                                 u8847 11FB  
                               _RSEN 10B1                                 _WPUB 020D  
                               _WPUG 048D                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _Xoff 0157  
                               _Yoff 015D                                 _fabs 1173  
                               _atan 0BF2                                 _main 0D62  
                       ___ftpack@arg 00A0                         ___ftpack@exp 00A3  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0016  
                               ttemp 007E                                 wtemp 007E  
                  ___bmul@multiplier 00A3                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 00D6                         ___ftmul@sign 00D7  
                         i1display@x 0024                         ___fttol@exp1 00E5  
                       ___fttol@lval 00E1                       ??_LIS3MDL_Wait 00A3  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 0006  
                     ??_LIS3MDL_init 00EB        __end_of_OSCILLATOR_Initialize 1F8A  
                              ?_fabs 00BB                                ?_atan 00E2  
                              ?_main 0070                       i1___awdiv@sign 0021  
                              _ACKEN 10B4                                _ACKDT 10B5  
                    __end_of___awdiv 14CB                      __end_of___ftadd 09C8  
                      __CFG_WDTE$OFF 0000                      __end_of___awmod 1391  
                    __end_of___ftdiv 1800                                _DIGIT 01A0  
                    __end_of___ftneg 1FAA                      __end_of___ftmul 08D2  
                    ___awdiv@divisor 00A7                      __end_of___ftsub 081E  
                    __end_of___fttol 1757                   processline@bearing 0041  
                              i1l419 0011                      ___awdiv@counter 00AC  
                              _PORTD 000F                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                              _TRISF 030C                                _TRISG 030D  
                ___lmul@multiplicand 0074                      __end_of_goToPos 13DA  
                    __end_of_display 0339                       i1___awmod@sign 0076  
                              _atan2 05FB                                _argXY 1205  
                      ___awtoft@sign 00AD                                fabs@d 00BB  
                              _errno 0163                                _lines 0061  
                    __end_of_isalpha 1042                      __end_of_isdigit 2000  
                              atan@f 00E2                                atan@x 0123  
                              atan@y 0120                        ___ftpack@sign 00A4  
                              _state 0067                                _putch 1FAA  
                              main@i 0155                      __end_of_isspace 1054  
                   __end_ofi1___bmul 1030                      __end_of_isupper 1FF2  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                __end_of_i2c_Restart 1F7A                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                   ?_LIS3MDL_Read_XY 0070                   __size_ofi1___awdiv 0052  
                 __size_ofi1___awmod 0045                      __end_of_toupper 100F  
                    __end_of_strncpy 12CA                        processline@ch 004C  
                    __initialization 0018                   __size_ofi1_display 02C2  
                 i1_stepCounterClock 1150                         __end_of_fabs 1196  
                       __end_of_atan 0D62                         __end_of_main 1000  
                   __end_of_i2c_Init 1FC0                     __end_of_i2c_Read 110B  
                   __end_of_i2c_Wait 1F98                     __end_of_i2c_Stop 1F84  
                        i1display@x0 0027                          i1display@x1 0029  
                        i1display@x2 002B                          i1display@x3 002D  
        ?_INTERRUPT_InterruptManager 0070                               ??_fabs 00BE  
                             ??_atan 00E5                  ?i1_stepCounterClock 0070  
                             ??_main 013C                        ___fttol@sign1 00E0  
                    ??_LIS3MDL_Write 00A2                               ?_atan2 00E6  
                             ?_argXY 00EC                     ___awdiv@dividend 00A9  
                             _APFCON 011D                     __end_of___awtoft 112D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELE 0190                               _ANSELF 040C  
                   __end_of___ftpack 15F0                               _ANSELG 040D  
                             _RC1REG 0199                   __size_of_i2c_Start 0005  
                             _RC1STA 019D                               i1l1008 09CA  
                             i1l3101 123B                               i1l3105 1245  
                             i1l3301 1329                               i1l3231 1165  
                             i1l3207 1FFE                               i1l3313 1346  
                             i1l3305 1335                               i1l3075 1FF0  
                             i1l3171 1052                               i1l3411 09EF  
                             i1l3243 1432                               i1l3323 1027  
                             i1l3093 113E                               i1l3229 1163  
                             i1l3181 103B                               i1l3413 09F3  
                             i1l3261 1451                               i1l3309 133E  
                             i1l3095 1142                               i1l3431 0A1E  
                             i1l3271 146C                               i1l3319 1021  
                             i1l3185 1040                               i1l3169 1051  
                             i1l3441 0A36                               i1l3417 09FE  
                             i1l3249 143D                               i1l3601 03E6  
                             i1l3371 13AC                               i1l3195 100D  
                             i1l3427 0A16                               i1l3275 1474  
                             i1l3267 1463                               i1l3259 1445  
                             i1l3291 1317                               i1l3611 044D  
                             i1l3603 03FB                               i1l4155 1657  
                             i1l4147 1625                               i1l4139 15F5  
                             i1l3381 13CC                               i1l3373 13B6  
                             i1l3453 0A59                               i1l3445 0A3E  
                             i1l3437 0A2E                               i1l3621 04B4  
                             i1l3613 0460                               i1l3605 0410  
                             i1l3383 13D5                               i1l3367 139F  
                             i1l3391 1081                               i1l3463 0A99  
                             i1l3287 1310                               i1l3631 0519  
                             i1l3623 04C8                               i1l3615 0475  
                             i1l3607 0425                               i1l3377 13BF  
                             i1l3473 0AB8                               i1l3449 0A4F  
                             i1l3641 057E                               i1l3633 052E  
                             i1l3625 04DC                               i1l3617 048A  
                             i1l3609 0439                               i1l3467 0AA5  
                             i1l3299 131D                               i1l3651 05E2  
                             i1l3643 0592                               i1l3635 0543  
                             i1l3627 04EF                               i1l3619 049F  
                             i1l3571 0344                               i1l3653 05F6  
                             i1l3645 05A6                               i1l3637 0557  
                             i1l3629 0504                               i1l3399 09DE  
                             i1l3647 05BA                               i1l3639 056B  
                             i1l3649 05CE                               i1l3593 03B6  
                             i1l3833 129A                   __size_of_i2c_Write 0009  
                             i1l3587 03AA                               i1l3835 12B7  
                             i1l3597 03BE                               i1l3599 03D1  
                             i1l3839 12BF                               u500_25 124D  
                             u600_20 0437                               u610_20 049D  
                             u602_20 044B                               u530_25 1464  
                             u620_20 0502                               u612_20 04B2  
                             u604_20 045E                               u630_20 0569  
                             u622_20 0517                               u614_20 04C6  
                             u606_20 0473                               u526_25 1448  
                             u640_20 05CC                               u632_20 057C  
                             u624_20 052C                               u616_20 04DA  
                             u608_20 0488                               u528_25 1452  
                             u536_25 1320                               u545_25 139C  
                             u529_25 145C                               u642_20 05E0  
                             u634_20 0590                               u626_20 0541  
                             u618_20 04ED                               _OSCCON 0099  
                             u546_25 13B3                               u562_25 0A60  
                             u538_25 132F                               u547_25 13BC  
                             u539_25 1336                               u644_20 05F4  
                             u636_20 05A4                               u628_20 0555  
                             u548_25 13D3                               u638_20 05B8  
                             u590_20 03CF                               u592_20 03E4  
                             u594_20 03F9                               u499_25 1246  
                             u596_20 040E                 ??i1_stepCounterClock 0070  
                             u598_20 0423                               _TX1REG 019A  
                             _TX1STA 019E                               u885_27 1169  
                             u886_27 1146                               _TRISC3 0473  
                             _TRISC4 0474             __end_of_stepCounterClock 1205  
              EUSART_Receive_ISR@str 0055                       __CFG_PWRTE$OFF 0000  
                processline@distance 003F                               ___bmul 1054  
                             ___ftge 12CA                               ___lmul 1233  
                             ___wmul 1095                            ??___awdiv 00AB  
                          ??___ftadd 00C1                       __CFG_STVREN$ON 0000  
                          ??___awmod 00A4                               _charac 005F  
                          ??___ftdiv 00AE                            ??___ftneg 00BB  
                          ??___ftmul 00CE                            ??___ftsub 00CE  
                          ??___fttol 00DC                               atan2@v 0139  
                             atan2@x 00E9                               atan2@y 00E6  
                   ___awdiv@quotient 00AE                      ___awmod@divisor 00A0  
                          ??_goToPos 0074                      ___awmod@counter 00A5  
                             _printf 10B1                               main@dX 014B  
                             main@dY 014E                               _strcpy 107C  
                          ??_display 00B2                               _strtol 09C8  
              ___ftmul@f3_as_product 00D3                    __end_ofi1___awdiv 1479  
                  __end_ofi1___awmod 134B                        i2c_Write@data 00A0  
                          ??_isalpha 0072                            ??_isdigit 0070  
         EUSART_Receive_ISR@incoming 005D                            ??_isspace 0070  
                          ??_isupper 0070                          _i2c_Restart 1F75  
                  __end_ofi1_display 05FB                            ??_toupper 0070  
                          ??_strncpy 0074                         ?_processline 0070  
                  _SYSTEM_Initialize 1FC0                 __end_of_LIS3MDL_Wait 11DF  
            __end_of__initialization 0060                 __end_of_LIS3MDL_init 11BA  
                         ___ftadd@f1 00BB                           ___ftadd@f2 00BE  
                         ___ftge@ff1 00A0                           ___ftge@ff2 00A3  
                 ?_SYSTEM_Initialize 0070                       processline@ptr 004B  
                       eval_poly@res 00DF                           ___ftdiv@f1 00AB  
                         ___ftdiv@f2 00A8                           ___ftdiv@f3 00B3  
                         ___ftneg@f1 00B8                           ___awtoft@c 00A8  
                ___bmul@multiplicand 00A0                           ___ftmul@f1 00C8  
                         ___ftmul@f2 00CB                           ___ftsub@f1 00CB  
                         ___ftsub@f2 00C8                           ___fttol@f1 00D8  
                     __pcstackCOMMON 0070                         __pidataBANK0 07FA  
                       __pidataBANK2 1F8A                         __pidataBANK3 13DA  
                ??_SYSTEM_Initialize 00A0                        __end_of_atan2 07FA  
                      __end_of_argXY 1233                        __end_of_putch 1FB4  
                  __end_of_i2c_Start 1F7F                    __end_of_i2c_Write 1FA1  
                          ?i1___bmul 0070                           _atan2$1141 012D  
                         _atan2$1142 0130                           _atan2$1143 0136  
                         _atan2$1144 0133                       _OPTION_REGbits 0095  
                       i1display@neg 0026                              ??_atan2 00EC  
                            ??_argXY 00EF                     i1___bmul@product 0073  
          __end_of_SYSTEM_Initialize 1FCC                              ??_putch 00A0  
                          ?_i2c_Init 0070                            ?_i2c_Read 0070  
                         __pbssBANK0 005F                           __pbssBANK2 0157  
                          ?_i2c_Wait 0070                            ?_i2c_Stop 0070  
                 __size_of_eval_poly 0060                    LIS3MDL_Wait@ZYXDA 00A4  
        __end_of_LIS3MDL_Read_Raw_XY 152B          __size_of_EUSART_Receive_ISR 006C  
                         __pmaintext 0D62                              ?___bmul 00A0  
                            ?___ftge 00A0                              ?___lmul 0070  
                            ?___wmul 00A0                           __pintentry 0004  
                     ___lmul@product 0078                            ?___awtoft 00A8  
                          ?___ftpack 00A0                           ??i1___bmul 0071  
                            ?_printf 00A1                              ?_strcpy 0070  
                            ?_strtol 0020                   i1___awdiv@dividend 0079  
                            _SP1BRGH 019C                              _SP1BRGL 019B  
                 __size_of_stepClock 0023                              _OSCSTAT 009A  
                            _OSCTUNE 0098                              _SSP1ADD 0212  
                            _SSP1BUF 0211                           ??_i2c_Init 00A0  
                         ??_i2c_Read 00A0                           ??_i2c_Wait 00A0  
                         ??_i2c_Stop 00A0                   i1___awdiv@quotient 0022  
                  LIS3MDL_Write@data 00A1                      __size_of___bmul 0012  
                    __size_of___ftge 003C                              ___awdiv 1479  
                    __size_of___lmul 002F                              ___ftadd 08D2  
                            ___awmod 134B                              ___ftdiv 1757  
                            ___ftneg 1FA1                      __size_of___wmul 001C  
                            ___ftmul 081E                              ___ftsub 0800  
                            ___fttol 16D0                           ??___awtoft 00AB  
                         ??___ftpack 00A5                    __end_of_eval_poly 158B  
                            _goToPos 1391                              __ptext1 10CE  
                            __ptext2 11DF                              __ptext3 10B1  
                            __ptext4 1FAA                              __ptext5 0064  
                            __ptext6 1054                              __ptext7 134B  
                            __ptext8 1479                              __ptext9 1205  
                    __size_of_printf 001D                              _display 0064  
                            _console 2350                      __size_of_strcpy 0019  
                    __size_of_strtol 00F9                _OSCILLATOR_Initialize 1F84  
                            _isalpha 1030                              _isdigit 1FF2  
                    atan@val_squared 0127                     ___awmod@dividend 00A2  
           ??_PIN_MANAGER_Initialize 00A0                              _isspace 1042  
                            atan@val 012A                  i1___bmul@multiplier 0072  
                            _isupper 1FE4                __size_of_LIS3MDL_Wait 0025  
              __size_of_LIS3MDL_init 0024           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 1FD9                              _toupper 1000  
                            _strncpy 1295                 end_of_initialization 0060  
                            init_ram 1FCC                              initloop 1FCD  
                  ?_stepCounterClock 0070                 __size_of_processline 0074  
                  _EUSART_Initialize 100F                   ??_stepCounterClock 00A0  
                 ?_EUSART_Initialize 0070                    __end_of_stepClock 1150  
                            printf@c 00A7                              printf@f 00A1  
                         goToPos@pos 0072             __size_of_LIS3MDL_Read_XY 0131  
                       __pstringtext 1800                  ??_EUSART_Initialize 00A0  
                            strtol@a 0029                              strtol@c 002E  
                            strtol@s 002D                         _LIS3MDL_Wait 11BA  
                       _LIS3MDL_init 1196                     __CFG_FOSC$INTOSC 0000  
              __end_of_LIS3MDL_Write 107C                         strtol@endptr 0020  
                       ?_i2c_Restart 0070                            i1___awdiv 1427  
                          i1___awmod 1306                      processline@bear 0048  
                    processline@dist 0043                      processline@src1 002F  
                    processline@src2 0037            __end_of_EUSART_Initialize 101F  
                          i1_display 0339          __size_ofi1_stepCounterClock 0023  
                        ___ftdiv@exp 00B6                           _zeroNeedle 10CE  
                         display@neg 00B3                          ___ftmul@exp 00D2  
                 LIS3MDL_Read_XY@X_H 0121                   LIS3MDL_Read_XY@Y_H 0123  
                 LIS3MDL_Read_XY@X_L 0120                   LIS3MDL_Read_XY@Y_L 0122  
                     __end_of___bmul 1066                       __end_of___ftge 1306  
                     __end_of___lmul 1262                       __end_of___wmul 10B1  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 10CE  
                          _i2c_Start 1F7A                    __size_ofi1___bmul 0011  
                     __end_of_strcpy 1095                            _i2c_Write 1F98  
                     __end_of_strtol 0AC1                  start_initialization 0018  
                         eval_poly@d 00DB                           eval_poly@n 00DD  
                         eval_poly@x 00D8      __size_of_PIN_MANAGER_Initialize 0033  
                         ?i1___awdiv 0077                           ?i1___awmod 0070  
                         ?i1_display 0024                    __size_of_i2c_Init 000C  
                  __size_of_i2c_Read 0020                    __size_of_i2c_Wait 0008  
                  __size_of_i2c_Stop 0005                             ??___bmul 00A1  
                           ??___ftge 00A6                             ??___lmul 0078  
                           ??___wmul 00A4                          __pdataBANK0 0068  
                        __pdataBANK2 0169                          __pdataBANK3 01A0  
                 i1___awmod@dividend 0072                             ??_printf 00A3  
                           ??_strcpy 0071                             ??_strtol 0024  
                  ??_LIS3MDL_Read_XY 00E6                    __size_of___awtoft 0022  
                  __size_of___ftpack 0065                          __pbssBIGRAM 2350  
                         ?_i2c_Start 0070                           ?_i2c_Write 0070  
                          ___latbits 0003                        __pcstackBANK0 0020  
                      __pcstackBANK1 00A0                        __pcstackBANK2 0120  
         __end_of_EUSART_Receive_ISR 165C           __size_of_EUSART_Initialize 0010  
                        zeroNeedle@i 00A2                          ?_zeroNeedle 0070  
                          _main$1137 0145                            _main$1138 0142  
             _PIN_MANAGER_Initialize 1262         __size_of_LIS3MDL_Read_Raw_XY 0060  
                           ?___awdiv 00A7                             ?___ftadd 00BB  
                           ?___awmod 00A0                             ?___ftdiv 00A8  
                           ?___ftneg 00B8                             ?___ftmul 00C8  
                           ?___ftsub 00C8                             ?___fttol 00D8  
                  i1___awdiv@divisor 0077                    i1___awdiv@counter 0020  
       ??_INTERRUPT_InterruptManager 005E                             ?_goToPos 0072  
                           ?_display 00B0                             _BAUD1CON 019F  
                           ?_isalpha 0070                             ?_isdigit 0070  
                          _eval_poly 152B                             ?_isspace 0070  
                           ?_isupper 0070                          ??i1___awdiv 007B  
                   LIS3MDL_Write@reg 00A2                          ??i1___awmod 0074  
                     __size_of_atan2 01FF                       __size_of_argXY 002E  
                           ?_toupper 0070                             ?_strncpy 0070  
                     __size_of_putch 000A                 __size_of_i2c_Restart 0005  
                        ??i1_display 007C                       ___wmul@product 00A4  
                          clear_ram0 1FD8                          strncpy@from 0070  
                          atan@recip 0126                             _PIE1bits 0091  
                        strncpy@size 0072                i1___bmul@multiplicand 0070  
__size_of_INTERRUPT_InterruptManager 0012                             _PIR1bits 0011  
                           _SSP1CON1 0215                             _SSP1CON2 0216  
                           _SSP1STAT 0214                            _stepClock 112D  
                           i1___bmul 101F                    ___wmul@multiplier 00A0  
          __size_of_stepCounterClock 0026               LIS3MDL_Read_Raw_XY@X_H 00A9  
             LIS3MDL_Read_Raw_XY@Y_H 00AB               LIS3MDL_Read_Raw_XY@X_L 00A8  
             LIS3MDL_Read_Raw_XY@Y_L 00AA                  __size_of_zeroNeedle 001D  
                          main@angle 013F                          ??_i2c_Start 00A0  
                      goToPos@target 0074                          ??_i2c_Write 00A0  
                         ?_eval_poly 00D8                            display@x0 00B4  
                          display@x1 00B6                            display@x2 00B8  
                          display@x3 00BA                  __end_ofatan@coeff_a 1812  
                __end_ofatan@coeff_b 1821                    ___lmul@multiplier 0070  
                           _i2c_Init 1FB4                             _i2c_Read 10EB  
               _LIS3MDL_Read_XY$1139 0124                             _i2c_Wait 1F90  
                      ??_processline 007D                             _i2c_Stop 1F7F  
                  i1___awmod@divisor 0070              ??_OSCILLATOR_Initialize 00A0  
                  i1___awmod@counter 0075                     __size_of___awdiv 0052  
                   __size_of___ftadd 00F6                     __size_of___awmod 0046  
                   __size_of___ftdiv 00A9                     __size_of___ftneg 0009  
                   __size_of___ftmul 00B4                     __size_of___ftsub 001E  
                   __size_of___fttol 0087                           ?_stepClock 0070  
                           ___awtoft 110B                             ___ftpack 158B  
                        _isalpha$936 0072                          _isdigit$939 0070  
                   __size_of_goToPos 0049                     __size_of_display 02D5  
                   __size_of_isalpha 0012                     __size_of_isdigit 000E  
                   __size_of_isspace 0012                             __ptext10 05FB  
                           __ptext11 0BF2                             __ptext20 1FB4  
                           __ptext12 1173                             __ptext21 1262  
                           __ptext13 1FA1                             __ptext30 08D2  
                           __ptext22 1F84                             __ptext14 12CA  
                           __ptext31 110B                             __ptext23 100F  
                           __ptext15 152B                             __ptext32 158B  
                           __ptext24 1196                             __ptext16 1095  
                           __ptext41 15F0                             __ptext33 14CB  
                           __ptext25 1066                             __ptext17 1757  
                           __ptext50 1042                             __ptext42 1295  
                           __ptext34 1F98                             __ptext26 11BA  
                           __ptext18 0800                             __ptext51 1FF2  
                           __ptext43 165C                             __ptext35 1F7F  
                           __ptext27 0AC1                             __ptext19 1FC0  
                           __ptext52 1030                             __ptext44 0339  
                           __ptext36 1F7A                             __ptext28 16D0  
                           __ptext53 1FE4                             __ptext45 101F  
                           __ptext37 1F75                             __ptext29 081E  
                           __ptext54 1233                             __ptext46 1306  
                           __ptext38 10EB                             __ptext55 107C  
                           __ptext47 1427                             __ptext39 1F90  
                           __ptext56 1391                             __ptext48 09C8  
                           __ptext57 1150                             __ptext49 1000  
                           __ptext58 112D                     __size_of_isupper 000E  
         __end_ofi1_stepCounterClock 1173                     __size_of_toupper 000F  
                   __size_of_strncpy 0035                           strcpy@from 0070  
                      __size_of_fabs 0023                        __size_of_atan 0170  
                      __size_of_main 029E                  __end_of_processline 16D0  
                         _RC1STAbits 019D                      _LIS3MDL_Read_XY 0AC1  
             __size_of_LIS3MDL_Write 0016                             int$flags 007E  
                         strtol@base 0021                             _position 0063  
                           _stateMap 0068                           strtol@sign 0028  
 __end_of_INTERRUPT_InterruptManager 0016           _INTERRUPT_InterruptManager 0004  
                           main@maxX 0151                             main@maxY 0153  
                           main@minX 0147                             main@minY 0149  
                           display@x 00B0                          _isspace$942 0070  
                        atan@coeff_a 1800                          atan@coeff_b 1812  
                          putch@byte 00A0                           _INTCONbits 000B  
                        ??_eval_poly 00DF                             isalpha@c 0073  
                           isdigit@c 0071                  _LIS3MDL_Read_Raw_XY 14CB  
                           intlevel1 0000                          _isupper$945 0070  
                           isspace@c 0071              ?_PIN_MANAGER_Initialize 0070  
                       ??_zeroNeedle 00A2                    __CFG_CLKOUTEN$OFF 0000  
                           isupper@c 0071                            strncpy@cp 0077  
                          strncpy@to 0076                 ?_LIS3MDL_Read_Raw_XY 0070  
                           printf@ap 00A6                   _EUSART_Receive_ISR 15F0  
                        ??_stepClock 0070                     _stepCounterClock 11DF  
                ?_EUSART_Receive_ISR 0070                             strcpy@cp 0072  
                           strcpy@to 0073                   __end_of_zeroNeedle 10EB  
                           toupper@c 0071                        _LIS3MDL_Write 1066  
                         _TX1STAbits 019E                  i2c_Read@i2cReadData 00A2  
     __end_of_PIN_MANAGER_Initialize 1295                          _processline 165C  
            __end_of_LIS3MDL_Read_XY 0BF2                 ??_EUSART_Receive_ISR 004D  
               Switec_motor@stateMap 0169                ??_LIS3MDL_Read_Raw_XY 00A3  
